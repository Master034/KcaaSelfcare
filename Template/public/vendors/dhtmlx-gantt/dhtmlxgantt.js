/*
@license

dhtmlxGantt v.7.1.12 Standard

This version of dhtmlxGantt is distributed under GPL 2.0 license and can be legally used in GPL projects.

To use dhtmlxGantt in non-GPL projects (and get Pro version of the product), please obtain Commercial/Enterprise or Ultimate license on our site https://dhtmlx.com/docs/products/dhtmlxGantt/#licensing or contact us at sales@dhtmlx.com

(c) XB Software Ltd.

*/
!function (t, e) { "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define("dhtmlxgantt", [], e) : "object" == typeof exports ? exports.dhtmlxgantt = e() : t.dhtmlxgantt = e() }(window, function () {
    return function (t) { var e = {}; function n(i) { if (e[i]) return e[i].exports; var r = e[i] = { i: i, l: !1, exports: {} }; return t[i].call(r.exports, r, r.exports, n), r.l = !0, r.exports } return n.m = t, n.c = e, n.d = function (t, e, i) { n.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: i }) }, n.r = function (t) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 }) }, n.t = function (t, e) { if (1 & e && (t = n(t)), 8 & e) return t; if (4 & e && "object" == typeof t && t && t.__esModule) return t; var i = Object.create(null); if (n.r(i), Object.defineProperty(i, "default", { enumerable: !0, value: t }), 2 & e && "string" != typeof t) for (var r in t) n.d(i, r, function (e) { return t[e] }.bind(null, r)); return i }, n.n = function (t) { var e = t && t.__esModule ? function () { return t.default } : function () { return t }; return n.d(e, "a", e), e }, n.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, n.p = "/codebase/", n(n.s = 63) }([function (t, e, n) { function i(t) { "@babel/helpers - typeof"; return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } var r, a = n(2), o = {}.constructor.toString(); t.exports = { copy: function t(e) { var n, r; if (e && "object" == i(e)) switch (!0) { case a.isDate(e): r = new Date(e); break; case a.isArray(e): for (r = new Array(e.length), n = 0; n < e.length; n++)r[n] = t(e[n]); break; default: for (n in r = function (t) { return t.constructor.toString() !== o }(e) ? Object.create(e) : {}, e) Object.prototype.hasOwnProperty.apply(e, [n]) && (r[n] = t(e[n])) }return r || e }, defined: function (t) { return void 0 !== t }, mixin: function (t, e, n) { for (var i in e) (void 0 === t[i] || n) && (t[i] = e[i]); return t }, uid: function () { return r || (r = (new Date).valueOf()), ++r }, bind: function (t, e) { return t.bind ? t.bind(e) : function () { return t.apply(e, arguments) } }, event: function (t, e, n, i) { t.addEventListener ? t.addEventListener(e, n, void 0 !== i && i) : t.attachEvent && t.attachEvent("on" + e, n) }, eventRemove: function (t, e, n, i) { t.removeEventListener ? t.removeEventListener(e, n, void 0 !== i && i) : t.detachEvent && t.detachEvent("on" + e, n) } } }, function (t, e) { function n(t) { var e = 0, n = 0, i = 0, r = 0; if (t.getBoundingClientRect) { var a = t.getBoundingClientRect(), o = document.body, s = document.documentElement || document.body.parentNode || document.body, l = window.pageYOffset || s.scrollTop || o.scrollTop, c = window.pageXOffset || s.scrollLeft || o.scrollLeft, u = s.clientTop || o.clientTop || 0, d = s.clientLeft || o.clientLeft || 0; e = a.top + l - u, n = a.left + c - d, i = document.body.offsetWidth - a.right, r = document.body.offsetHeight - a.bottom } else { for (; t;)e += parseInt(t.offsetTop, 10), n += parseInt(t.offsetLeft, 10), t = t.offsetParent; i = document.body.offsetWidth - t.offsetWidth - n, r = document.body.offsetHeight - t.offsetHeight - e } return { y: Math.round(e), x: Math.round(n), width: t.offsetWidth, height: t.offsetHeight, right: Math.round(i), bottom: Math.round(r) } } function i(t) { var e = !1, n = !1; if (window.getComputedStyle) { var i = window.getComputedStyle(t, null); e = i.display, n = i.visibility } else t.currentStyle && (e = t.currentStyle.display, n = t.currentStyle.visibility); return "none" != e && "hidden" != n } function r(t) { return !isNaN(t.getAttribute("tabindex")) && 1 * t.getAttribute("tabindex") >= 0 } function a(t) { return !{ a: !0, area: !0 }[t.nodeName.loLowerCase()] || !!t.getAttribute("href") } function o(t) { return !{ input: !0, select: !0, textarea: !0, button: !0, object: !0 }[t.nodeName.toLowerCase()] || !t.hasAttribute("disabled") } function s(t) { if (!t) return ""; var e = t.className || ""; return e.baseVal && (e = e.baseVal), e.indexOf || (e = ""), u(e) } var l; function c(t) { var e; return t.tagName ? e = t : (e = (t = t || window.event).target || t.srcElement).shadowRoot && t.composedPath && (e = t.composedPath()[0]), e } function u(t) { return (String.prototype.trim || function () { return this.replace(/^\s+|\s+$/g, "") }).apply(t) } function d() { return document.head.createShadowRoot || document.head.attachShadow } function h(t) { if (!t) return document.body; if (!d()) return document.body; for (; t.parentNode && (t = t.parentNode);)if (t instanceof ShadowRoot) return t.host; return document.body } t.exports = { getNodePosition: n, getFocusableNodes: function (t) { for (var e = t.querySelectorAll(["a[href]", "area[href]", "input", "select", "textarea", "button", "iframe", "object", "embed", "[tabindex]", "[contenteditable]"].join(", ")), n = Array.prototype.slice.call(e, 0), s = 0; s < n.length; s++)n[s].$position = s; for (n.sort(function (t, e) { return 0 === t.tabIndex && 0 !== e.tabIndex ? 1 : 0 !== t.tabIndex && 0 === e.tabIndex ? -1 : t.tabIndex === e.tabIndex ? t.$position - e.$position : t.tabIndex < e.tabIndex ? -1 : 1 }), s = 0; s < n.length; s++) { var l = n[s]; (r(l) || o(l) || a(l)) && i(l) || (n.splice(s, 1), s--) } return n }, getScrollSize: function () { var t = document.createElement("div"); t.style.cssText = "visibility:hidden;position:absolute;left:-1000px;width:100px;padding:0px;margin:0px;height:110px;min-height:100px;overflow-y:scroll;", document.body.appendChild(t); var e = t.offsetWidth - t.clientWidth; return document.body.removeChild(t), e }, getClassName: s, addClassName: function (t, e) { e && -1 === t.className.indexOf(e) && (t.className += " " + e) }, removeClassName: function (t, e) { e = e.split(" "); for (var n = 0; n < e.length; n++) { var i = new RegExp("\\s?\\b" + e[n] + "\\b(?![-_.])", ""); t.className = t.className.replace(i, "") } }, insertNode: function (t, e) { l || (l = document.createElement("div")), l.innerHTML = e; var n = l.firstChild; return t.appendChild(n), n }, removeNode: function (t) { t && t.parentNode && t.parentNode.removeChild(t) }, getChildNodes: function (t, e) { for (var n = t.childNodes, i = n.length, r = [], a = 0; a < i; a++) { var o = n[a]; o.className && -1 !== o.className.indexOf(e) && r.push(o) } return r }, toNode: function (t) { return "string" == typeof t ? document.getElementById(t) || document.querySelector(t) || document.body : t || document.body }, locateClassName: function (t, e, n) { var i = c(t), r = ""; for (void 0 === n && (n = !0); i;) { if (r = s(i)) { var a = r.indexOf(e); if (a >= 0) { if (!n) return i; var o = 0 === a || !u(r.charAt(a - 1)), l = a + e.length >= r.length || !u(r.charAt(a + e.length)); if (o && l) return i } } i = i.parentNode } return null }, locateAttribute: function (t, e) { if (e) { for (var n = c(t); n;) { if (n.getAttribute && n.getAttribute(e)) return n; n = n.parentNode } return null } }, getTargetNode: c, getRelativeEventPosition: function (t, e) { var i = document.documentElement, r = n(e); return { x: t.clientX + i.scrollLeft - i.clientLeft - r.x + e.scrollLeft, y: t.clientY + i.scrollTop - i.clientTop - r.y + e.scrollTop } }, isChildOf: function (t, e) { if (!t || !e) return !1; for (; t && t != e;)t = t.parentNode; return t === e }, hasClass: function (t, e) { return "classList" in t ? t.classList.contains(e) : new RegExp("\\b" + e + "\\b").test(t.className) }, closest: function (t, e) { if (t.closest) return t.closest(e); if (t.matches || t.msMatchesSelector || t.webkitMatchesSelector) { var n = t; if (!document.documentElement.contains(n)) return null; do { if ((n.matches || n.msMatchesSelector || n.webkitMatchesSelector).call(n, e)) return n; n = n.parentElement || n.parentNode } while (null !== n && 1 === n.nodeType); return null } return console.error("Your browser is not supported"), null }, getRootNode: h, hasShadowParent: function (t) { return !!h(t) }, isShadowDomSupported: d, getActiveElement: function () { var t = document.activeElement; return t.shadowRoot && (t = t.shadowRoot.activeElement), t === document.body && document.getSelection && (t = document.getSelection().focusNode || document.body), t } } }, function (t, e) { function n(t) { "@babel/helpers - typeof"; return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } var i = { second: 1, minute: 60, hour: 3600, day: 86400, week: 604800, month: 2592e3, quarter: 7776e3, year: 31536e3 }; function r(t) { return !(!t || "object" !== n(t)) && !!(t.getFullYear && t.getMonth && t.getDate) } function a(t, e) { var n = []; if (t.filter) return t.filter(e); for (var i = 0; i < t.length; i++)e(t[i], i) && (n[n.length] = t[i]); return n } function o(t) { return 0 === t } t.exports = { getSecondsInUnit: function (t) { return i[t] || i.hour }, forEach: function (t, e) { if (t.forEach) t.forEach(e); else for (var n = t.slice(), i = 0; i < n.length; i++)e(n[i], i) }, arrayMap: function (t, e) { if (t.map) return t.map(e); for (var n = t.slice(), i = [], r = 0; r < n.length; r++)i.push(e(n[r], r)); return i }, arrayIncludes: function (t, e) { if (t.includes) return t.includes(e); for (var n = 0; n < t.length; n++)if (t[n] === e) return !0; return !1 }, arrayFind: function (t, e) { if (t.find) return t.find(e); for (var n = 0; n < t.length; n++)if (e(t[n], n)) return t[n] }, arrayFilter: a, arrayDifference: function (t, e) { return a(t, function (t, n) { return !e(t, n) }) }, arraySome: function (t, e) { if (0 === t.length) return !1; for (var n = 0; n < t.length; n++)if (e(t[n], n, t)) return !0; return !1 }, hashToArray: function (t) { var e = []; for (var n in t) t.hasOwnProperty(n) && e.push(t[n]); return e }, sortArrayOfHash: function (t, e, n) { var i = function (t, e) { return t < e }; t.sort(function (t, r) { return t[e] === r[e] ? 0 : n ? i(t[e], r[e]) : i(r[e], t[e]) }) }, throttle: function (t, e) { var n = !1; return function () { n || (t.apply(null, arguments), n = !0, setTimeout(function () { n = !1 }, e)) } }, isArray: function (t) { return Array.isArray ? Array.isArray(t) : t && void 0 !== t.length && t.pop && t.push }, isDate: r, isValidDate: function (t) { return r(t) && !isNaN(t.getTime()) }, isStringObject: function (t) { return t && "object" === n(t) && "function String() { [native code] }" === Function.prototype.toString.call(t.constructor) }, isNumberObject: function (t) { return t && "object" === n(t) && "function Number() { [native code] }" === Function.prototype.toString.call(t.constructor) }, isBooleanObject: function (t) { return t && "object" === n(t) && "function Boolean() { [native code] }" === Function.prototype.toString.call(t.constructor) }, delay: function (t, e) { var n, i = function i() { i.$cancelTimeout(), i.$pending = !0; var r = Array.prototype.slice.call(arguments); n = setTimeout(function () { t.apply(this, r), i.$pending = !1 }, e) }; return i.$pending = !1, i.$cancelTimeout = function () { clearTimeout(n), i.$pending = !1 }, i.$execute = function () { var e = Array.prototype.slice.call(arguments); t.apply(this, e), i.$cancelTimeout() }, i }, objectKeys: function (t) { if (Object.keys) return Object.keys(t); var e, n = []; for (e in t) Object.prototype.hasOwnProperty.call(t, e) && n.push(e); return n }, isEventable: function (t) { return t.attachEvent && t.detachEvent }, replaceValidZeroId: function (t, e) { return o(t) && !o(e) && (t = "0"), t }, checkZeroId: o, findBinary: function (t, e) { for (var n, i, r, a = 0, o = t.length - 1; a <= o;)if (i = +t[n = Math.floor((a + o) / 2)], r = +t[n - 1], i < e) a = n + 1; else { if (!(i > e)) { for (; +t[n] == +t[n + 1];)n++; return n } if (!isNaN(r) && r < e) return n - 1; o = n - 1 } return t.length - 1 } } }, function (t, e) { t.exports = function (t, e) { for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]); function i() { this.constructor = t } t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i) } }, function (t, e) { var n = function () { this._silent_mode = !1, this.listeners = {} }; n.prototype = { _silentStart: function () { this._silent_mode = !0 }, _silentEnd: function () { this._silent_mode = !1 } }; var i = function (t) { var e = {}, n = 0, i = function () { var n = !0; for (var i in e) { var r = e[i].apply(t, arguments); n = n && r } return n }; return i.addEvent = function (t, r) { if ("function" == typeof t) { var a; if (r && r.id ? a = r.id : (a = n, n++), r && r.once) { var o = t; t = function () { o(), i.removeEvent(a) } } return e[a] = t, a } return !1 }, i.removeEvent = function (t) { delete e[t] }, i.clear = function () { e = {} }, i }; t.exports = function (t) { var e = new n; t.attachEvent = function (t, n, r) { t = "ev_" + t.toLowerCase(), e.listeners[t] || (e.listeners[t] = i(this)), r && r.thisObject && (n = n.bind(r.thisObject)); var a = t + ":" + e.listeners[t].addEvent(n, r); return r && r.id && (a = r.id), a }, t.attachAll = function (t) { this.attachEvent("listen_all", t) }, t.callEvent = function (t, n) { if (e._silent_mode) return !0; var i = "ev_" + t.toLowerCase(), r = e.listeners; return r.ev_listen_all && r.ev_listen_all.apply(this, [t].concat(n)), !r[i] || r[i].apply(this, n) }, t.checkEvent = function (t) { return !!e.listeners["ev_" + t.toLowerCase()] }, t.detachEvent = function (t) { if (t) { var n = e.listeners; for (var i in n) n[i].removeEvent(t); var r = t.split(":"); if (n = e.listeners, 2 === r.length) { var a = r[0], o = r[1]; n[a] && n[a].removeEvent(o) } } }, t.detachAllEvents = function () { for (var t in e.listeners) e.listeners[t].clear() } } }, function (t, e) { t.exports = function (t, e, n, i, r) { var a = e.getItemIndexByTopPosition(r.y) || 0, o = e.getItemIndexByTopPosition(r.y_end) || i.count(); return { start: Math.max(0, a - 1), end: Math.min(i.count(), o + 1) } } }, function (t, e) { function n() { console.log("Method is not implemented.") } function i() { } i.prototype.render = n, i.prototype.set_value = n, i.prototype.get_value = n, i.prototype.focus = n, t.exports = function (t) { return i } }, function (t, e) { var n = "undefined" != typeof window, i = { isIE: n && (navigator.userAgent.indexOf("MSIE") >= 0 || navigator.userAgent.indexOf("Trident") >= 0), isIE6: n && !XMLHttpRequest && navigator.userAgent.indexOf("MSIE") >= 0, isIE7: n && navigator.userAgent.indexOf("MSIE 7.0") >= 0 && navigator.userAgent.indexOf("Trident") < 0, isIE8: n && navigator.userAgent.indexOf("MSIE 8.0") >= 0 && navigator.userAgent.indexOf("Trident") >= 0, isOpera: n && navigator.userAgent.indexOf("Opera") >= 0, isChrome: n && navigator.userAgent.indexOf("Chrome") >= 0, isKHTML: n && (navigator.userAgent.indexOf("Safari") >= 0 || navigator.userAgent.indexOf("Konqueror") >= 0), isFF: n && navigator.userAgent.indexOf("Firefox") >= 0, isIPad: n && navigator.userAgent.search(/iPad/gi) >= 0, isEdge: n && -1 != navigator.userAgent.indexOf("Edge"), isNode: !n || "undefined" == typeof navigator }; t.exports = i }, function (t, e) { t.exports = function (t) { var e = function () { }; return e.prototype = { show: function (t, e, n, i) { }, hide: function () { }, set_value: function (t, e, n, i) { this.get_input(i).value = t }, get_value: function (t, e, n) { return this.get_input(n).value || "" }, is_changed: function (t, e, n, i) { var r = this.get_value(e, n, i); return r && t && r.valueOf && t.valueOf ? r.valueOf() != t.valueOf() : r != t }, is_valid: function (t, e, n, i) { return !0 }, save: function (t, e, n) { }, get_input: function (t) { return t.querySelector("input") }, focus: function (t) { var e = this.get_input(t); e && (e.focus && e.focus(), e.select && e.select()) } }, e } }, function (t, e) { t.exports = function (t, e, n, i) { if ((i = e ? e.config : i) && i.placeholder_task && n.exists(t)) return n.getItem(t).type === i.types.placeholder; return !1 } }, function (t, e, n) { var i = n(7); t.exports = function (t) { return i.isNode || !t.$root } }, function (t, e, n) { var i = n(0), r = n(4), a = n(1), o = function () { "use strict"; function t(t, e, n, o) { t && (this.$container = a.toNode(t), this.$parent = t), this.$config = i.mixin(e, { headerHeight: 33 }), this.$gantt = o, this.$domEvents = o._createDomEventScope(), this.$id = e.id || "c" + i.uid(), this.$name = "cell", this.$factory = n, r(this) } return t.prototype.destructor = function () { this.$parent = this.$container = this.$view = null, this.$gantt.$services.getService("mouseEvents").detach("click", "gantt_header_arrow", this._headerClickHandler), this.$domEvents.detachAll(), this.callEvent("onDestroy", []), this.detachAllEvents() }, t.prototype.cell = function (t) { return null }, t.prototype.scrollTo = function (t, e) { var n = this.$view; this.$config.html && (n = this.$view.firstChild), 1 * t == t && (n.scrollLeft = t), 1 * e == e && (n.scrollTop = e) }, t.prototype.clear = function () { this.getNode().innerHTML = "", this.getNode().className = "gantt_layout_content", this.getNode().style.padding = "0" }, t.prototype.resize = function (t) { if (this.$parent) return this.$parent.resize(t); !1 === t && (this.$preResize = !0); var e = this.$container, n = e.offsetWidth, i = e.offsetHeight, r = this.getSize(); e === document.body && (n = document.body.offsetWidth, i = document.body.offsetHeight), n < r.minWidth && (n = r.minWidth), n > r.maxWidth && (n = r.maxWidth), i < r.minHeight && (i = r.minHeight), i > r.maxHeight && (i = r.maxHeight), this.setSize(n, i), this.$preResize, this.$preResize = !1 }, t.prototype.hide = function () { this._hide(!0), this.resize() }, t.prototype.show = function (t) { this._hide(!1), t && this.$parent && this.$parent.show(), this.resize() }, t.prototype._hide = function (t) { if (!0 === t && this.$view.parentNode) this.$view.parentNode.removeChild(this.$view); else if (!1 === t && !this.$view.parentNode) { var e = this.$parent.cellIndex(this.$id); this.$parent.moveView(this, e) } this.$config.hidden = t }, t.prototype.$toHTML = function (t, e) { void 0 === t && (t = ""), e = [e || "", this.$config.css || ""].join(" "); var n = this.$config, i = ""; n.raw ? t = "string" == typeof n.raw ? n.raw : "" : (t || (t = "<div class='gantt_layout_content' " + (e ? " class='" + e + "' " : "") + " >" + (n.html || "") + "</div>"), n.header && (i = "<div class='gantt_layout_header'>" + (n.canCollapse ? "<div class='gantt_layout_header_arrow'></div>" : "") + "<div class='gantt_layout_header_content'>" + n.header + "</div></div>")); return "<div class='gantt_layout_cell " + e + "' data-cell-id='" + this.$id + "'>" + i + t + "</div>" }, t.prototype.$fill = function (t, e) { this.$view = t, this.$parent = e, this.init() }, t.prototype.getNode = function () { return this.$view.querySelector("gantt_layout_cell") || this.$view }, t.prototype.init = function () { var t = this; this._headerClickHandler = function (e) { a.locateAttribute(e, "data-cell-id") == t.$id && t.toggle() }, this.$gantt.$services.getService("mouseEvents").delegate("click", "gantt_header_arrow", this._headerClickHandler), this.callEvent("onReady", []) }, t.prototype.toggle = function () { this.$config.collapsed = !this.$config.collapsed, this.resize() }, t.prototype.getSize = function () { var t = { height: this.$config.height || 0, width: this.$config.width || 0, gravity: this.$config.gravity || 1, minHeight: this.$config.minHeight || 0, minWidth: this.$config.minWidth || 0, maxHeight: this.$config.maxHeight || 1e11, maxWidth: this.$config.maxWidth || 1e11 }; if (this.$config.collapsed) { var e = "x" === this.$config.mode; t[e ? "width" : "height"] = t[e ? "maxWidth" : "maxHeight"] = this.$config.headerHeight } return t }, t.prototype.getContentSize = function () { var t = this.$lastSize.contentX; t !== 1 * t && (t = this.$lastSize.width); var e = this.$lastSize.contentY; return e !== 1 * e && (e = this.$lastSize.height), { width: t, height: e } }, t.prototype._getBorderSizes = function () { var t = { top: 0, right: 0, bottom: 0, left: 0, horizontal: 0, vertical: 0 }; return this._currentBorders && (this._currentBorders[this._borders.left] && (t.left = 1, t.horizontal++), this._currentBorders[this._borders.right] && (t.right = 1, t.horizontal++), this._currentBorders[this._borders.top] && (t.top = 1, t.vertical++), this._currentBorders[this._borders.bottom] && (t.bottom = 1, t.vertical++)), t }, t.prototype.setSize = function (t, e) { this.$view.style.width = t + "px", this.$view.style.height = e + "px"; var n = this._getBorderSizes(), i = e - n.vertical, r = t - n.horizontal; this.$lastSize = { x: t, y: e, contentX: r, contentY: i }, this.$config.header ? this._sizeHeader() : this._sizeContent() }, t.prototype._borders = { left: "gantt_layout_cell_border_left", right: "gantt_layout_cell_border_right", top: "gantt_layout_cell_border_top", bottom: "gantt_layout_cell_border_bottom" }, t.prototype._setBorders = function (t, e) { e || (e = this); var n = e.$view; for (var i in this._borders) a.removeClassName(n, this._borders[i]); "string" == typeof t && (t = [t]); var r = {}; for (i = 0; i < t.length; i++)a.addClassName(n, t[i]), r[t[i]] = !0; e._currentBorders = r }, t.prototype._sizeContent = function () { var t = this.$view.childNodes[0]; t && "gantt_layout_content" == t.className && (t.style.height = this.$lastSize.contentY + "px") }, t.prototype._sizeHeader = function () { var t = this.$lastSize; t.contentY -= this.$config.headerHeight; var e = this.$view.childNodes[0], n = this.$view.childNodes[1], i = "x" === this.$config.mode; if (this.$config.collapsed) if (n.style.display = "none", i) { e.className = "gantt_layout_header collapsed_x", e.style.width = t.y + "px"; var r = Math.floor(t.y / 2 - t.x / 2); e.style.transform = "rotate(90deg) translate(" + r + "px, " + r + "px)", n.style.display = "none" } else e.className = "gantt_layout_header collapsed_y"; else e.className = i ? "gantt_layout_header" : "gantt_layout_header vertical", e.style.width = "auto", e.style.transform = "", n.style.display = "", n.style.height = t.contentY + "px"; e.style.height = this.$config.headerHeight + "px" }, t }(); t.exports = o }, function (t, e, n) { (function (e) { var n; n = "undefined" != typeof window ? window : e, t.exports = n }).call(this, n(13)) }, function (t, e) { function n(t) { "@babel/helpers - typeof"; return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } var i; i = function () { return this }(); try { i = i || new Function("return this")() } catch (t) { "object" === ("undefined" == typeof window ? "undefined" : n(window)) && (i = window) } t.exports = i }, function (t, e) { t.exports = function (t) { return t.config.smart_rendering && t._smart_render } }, function (t, e, n) { var i = n(3), r = n(43); t.exports = function (t) { var e = n(6)(t); function a() { return e.apply(this, arguments) || this } return i(a, e), a.prototype.render = function (t) { var e = "<div class='gantt_cal_ltext' style='height:" + ((t.height || "23") + "px") + ";'>"; return e += r.getHtmlSelect(t.options, [{ key: "style", value: "width:100%;" }]), e += "</div>" }, a.prototype.set_value = function (t, e, n, i) { var r = t.firstChild; !r._dhx_onchange && i.onchange && (r.onchange = i.onchange, r._dhx_onchange = !0), void 0 === e && (e = (r.options[0] || {}).value), r.value = e || "" }, a.prototype.get_value = function (t) { return t.firstChild.value }, a.prototype.focus = function (e) { var n = e.firstChild; t._focus(n, !0) }, a } }, function (t, e, n) { }, , function (t, e, n) { var i = n(0); t.exports = function (t) { var e = t.date, n = t.$services; return { getSum: function (t, e, n) { void 0 === n && (n = t.length - 1), void 0 === e && (e = 0); for (var i = 0, r = e; r <= n; r++)i += t[r]; return i }, setSumWidth: function (t, e, n, i) { var r = e.width; void 0 === i && (i = r.length - 1), void 0 === n && (n = 0); var a = i - n + 1; if (!(n > r.length - 1 || a <= 0 || i > r.length - 1)) { var o = t - this.getSum(r, n, i); this.adjustSize(o, r, n, i), this.adjustSize(-o, r, i + 1), e.full_width = this.getSum(r) } }, splitSize: function (t, e) { for (var n = [], i = 0; i < e; i++)n[i] = 0; return this.adjustSize(t, n), n }, adjustSize: function (t, e, n, i) { n || (n = 0), void 0 === i && (i = e.length - 1); for (var r = i - n + 1, a = this.getSum(e, n, i), o = n; o <= i; o++) { var s = Math.floor(t * (a ? e[o] / a : 1 / r)); a -= e[o], t -= s, r--, e[o] += s } e[e.length - 1] += t }, sortScales: function (t) { function n(t, n) { var i = new Date(1970, 0, 1); return e.add(i, n, t) - i } t.sort(function (t, e) { return n(t.unit, t.step) < n(e.unit, e.step) ? 1 : n(t.unit, t.step) > n(e.unit, e.step) ? -1 : 0 }); for (var i = 0; i < t.length; i++)t[i].index = i }, _isLegacyMode: function (e) { var n = e || t.config; return n.scale_unit || n.date_scale || n.subscales }, _prepareScaleObject: function (e) { var n = e.format; return n || (n = e.template || e.date || "%d %M"), "string" == typeof n && (n = t.date.date_to_str(n)), { unit: e.unit || "day", step: e.step || 1, format: n, css: e.css } }, primaryScale: function (e) { var i, r = n.getService("templateLoader"), a = this._isLegacyMode(e), o = e || t.config; if (a) r.initTemplate("date_scale", void 0, void 0, o, t.config.templates), i = { unit: t.config.scale_unit, step: t.config.step, template: t.templates.date_scale, date: t.config.date_scale, css: t.templates.scale_cell_class }; else { var s = o.scales[0]; i = { unit: s.unit, step: s.step, template: s.template, format: s.format, date: s.date, css: s.css || t.templates.scale_cell_class } } return this._prepareScaleObject(i) }, getSubScales: function (e) { var n = this._isLegacyMode(e), i = e || t.config; return (n ? i.subscales || [] : i.scales.slice(1)).map(function (t) { return this._prepareScaleObject(t) }.bind(this)) }, prepareConfigs: function (t, e, n, i, r, a, o) { for (var s = this.splitSize(i, t.length), l = n, c = [], u = t.length - 1; u >= 0; u--) { var d = u == t.length - 1, h = this.initScaleConfig(t[u], r, a); d && this.processIgnores(h), this.initColSizes(h, e, l, s[u]), this.limitVisibleRange(h), d && (l = h.full_width), c.unshift(h) } for (u = 0; u < c.length - 1; u++)this.alineScaleColumns(c[c.length - 1], c[u]); for (u = 0; u < c.length; u++)o && this.reverseScale(c[u]), this.setPosSettings(c[u]); return c }, reverseScale: function (t) { t.width = t.width.reverse(), t.trace_x = t.trace_x.reverse(); var e = t.trace_indexes; t.trace_indexes = {}, t.trace_index_transition = {}, t.rtl = !0; for (var n = 0; n < t.trace_x.length; n++)t.trace_indexes[t.trace_x[n].valueOf()] = n, t.trace_index_transition[e[t.trace_x[n].valueOf()]] = n; return t }, setPosSettings: function (t) { for (var e = 0, n = t.trace_x.length; e < n; e++)t.left.push((t.width[e - 1] || 0) + (t.left[e - 1] || 0)) }, _ignore_time_config: function (n, i) { if (t.config.skip_off_time) { for (var r = !0, a = n, o = 0; o < i.step; o++)o && (a = e.add(n, o, i.unit)), r = r && !this.isWorkTime(a, i.unit); return r } return !1 }, processIgnores: function (t) { t.ignore_x = {}, t.display_count = t.count }, initColSizes: function (t, n, i, r) { var a = i; t.height = r; var o = void 0 === t.display_count ? t.count : t.display_count; o || (o = 1), t.col_width = Math.floor(a / o), n && t.col_width < n && (t.col_width = n, a = t.col_width * o), t.width = []; for (var s = t.ignore_x || {}, l = 0; l < t.trace_x.length; l++)if (s[t.trace_x[l].valueOf()] || t.display_count == t.count) t.width[l] = 0; else { var c = 1; "month" == t.unit && (c = Math.round((e.add(t.trace_x[l], t.step, t.unit) - t.trace_x[l]) / 864e5)), t.width[l] = c } this.adjustSize(a - this.getSum(t.width), t.width), t.full_width = this.getSum(t.width) }, initScaleConfig: function (t, e, n) { var r = i.mixin({ count: 0, col_width: 0, full_width: 0, height: 0, width: [], left: [], trace_x: [], trace_indexes: {}, min_date: new Date(e), max_date: new Date(n) }, t); return this.eachColumn(t.unit, t.step, e, n, function (t) { r.count++, r.trace_x.push(new Date(t)), r.trace_indexes[t.valueOf()] = r.trace_x.length - 1 }), r.trace_x_ascending = r.trace_x.slice(), r }, iterateScales: function (t, e, n, i, r) { for (var a = e.trace_x, o = t.trace_x, s = n || 0, l = i || o.length - 1, c = 0, u = 1; u < a.length; u++) { var d = t.trace_indexes[+a[u]]; void 0 !== d && d <= l && (r && r.apply(this, [c, u, s, d]), s = d, c = u) } }, alineScaleColumns: function (t, e, n, i) { this.iterateScales(t, e, n, i, function (n, i, r, a) { var o = this.getSum(t.width, r, a - 1); this.getSum(e.width, n, i - 1) != o && this.setSumWidth(o, e, n, i - 1) }) }, eachColumn: function (n, i, r, a, o) { var s = new Date(r), l = new Date(a); e[n + "_start"] && (s = e[n + "_start"](s)); var c = new Date(s); for (+c >= +l && (l = e.add(c, i, n)); +c < +l;) { o.call(this, new Date(c)); var u = c.getTimezoneOffset(); c = e.add(c, i, n), c = t._correct_dst_change(c, u, i, n), e[n + "_start"] && (c = e[n + "_start"](c)) } }, limitVisibleRange: function (t) { var n = t.trace_x, i = t.width.length - 1, r = 0; if (+n[0] < +t.min_date && 0 != i) { var a = Math.floor(t.width[0] * ((n[1] - t.min_date) / (n[1] - n[0]))); r += t.width[0] - a, t.width[0] = a, n[0] = new Date(t.min_date) } var o = n.length - 1, s = n[o], l = e.add(s, t.step, t.unit); if (+l > +t.max_date && o > 0 && (a = t.width[o] - Math.floor(t.width[o] * ((l - t.max_date) / (l - s))), r += t.width[o] - a, t.width[o] = a), r) { for (var c = this.getSum(t.width), u = 0, d = 0; d < t.width.length; d++) { var h = Math.floor(r * (t.width[d] / c)); t.width[d] += h, u += h } this.adjustSize(r - u, t.width) } } } } }, function (t, e, n) { var i = n(1), r = n(0), a = n(4), o = n(132), s = n(38), l = n(134), c = n(135).default, u = function (t, e, n, i) { this.$config = r.mixin({}, e || {}), this.$gantt = i, this.$parent = t, a(this), this.$state = {}, r.mixin(this, s(this)) }; u.prototype = { init: function (t) { var e = this.$gantt, i = e._waiAria.gridAttrString(), r = e._waiAria.gridDataAttrString(), a = this.$getConfig(), s = a.reorder_grid_columns || !1; void 0 !== this.$config.reorder_grid_columns && (s = this.$config.reorder_grid_columns), t.innerHTML = "<div class='gantt_grid' style='height:inherit;width:inherit;' " + i + "></div>", this.$grid = t.childNodes[0], this.$grid.innerHTML = "<div class='gantt_grid_scale' " + e._waiAria.gridScaleRowAttrString() + "></div><div class='gantt_grid_data' " + r + "></div>", this.$grid_scale = this.$grid.childNodes[0], this.$grid_data = this.$grid.childNodes[1]; var u = a[this.$config.bind + "_attribute"]; if (!u && this.$config.bind && (u = "data-" + this.$config.bind + "-id"), this.$config.item_attribute = u || null, !this.$config.layers) { var d = this._createLayerConfig(); this.$config.layers = d } var h = o(e, this); h.init(), this._renderHeaderResizers = h.doOnRender, this._mouseDelegates = n(20)(e), l(e, this).init(), this._addLayers(this.$gantt), this._initEvents(), s && (this._columnDND = new c(e, this), this._columnDND.init()), this.callEvent("onReady", []) }, _validateColumnWidth: function (t, e) { var n = t[e]; if (n && "*" != n) { var i = this.$gantt, r = 1 * n; isNaN(r) ? i.assert(!1, "Wrong " + e + " value of column " + t.name) : t[e] = r } }, setSize: function (t, e) { this.$config.width = this.$state.width = t, this.$config.height = this.$state.height = e; for (var n, i = this.getGridColumns(), r = 0, a = (u = this.$getConfig()).grid_elastic_columns, o = 0, s = i.length; o < s; o++)this._validateColumnWidth(i[o], "min_width"), this._validateColumnWidth(i[o], "max_width"), this._validateColumnWidth(i[o], "width"), r += 1 * i[o].width; if (!isNaN(r) && this.$config.scrollable || (r = n = this._setColumnsWidth(t + 1)), this.$config.scrollable && a && !isNaN(r)) { var l = 0; i.forEach(function (t) { l += t.min_width || u.min_grid_column_width }); var c = Math.max(l, t); r = this._setColumnsWidth(c), n = t } this.$config.scrollable ? (this.$grid_scale.style.width = r + "px", this.$grid_data.style.width = r + "px") : (this.$grid_scale.style.width = "inherit", this.$grid_data.style.width = "inherit"), this.$config.width -= 1; var u = this.$getConfig(); n !== t && (void 0 !== n ? (u.grid_width = n, this.$config.width = n - 1) : isNaN(r) || (this._setColumnsWidth(r), u.grid_width = r, this.$config.width = r - 1)); var d = Math.max(this.$state.height - u.scale_height, 0); this.$grid_data.style.height = d + "px", this.refresh() }, getSize: function () { var t = this.$getConfig(), e = this.$config.rowStore ? this.getTotalHeight() : 0, n = this._getGridWidth(); return { x: this.$state.width, y: this.$state.height, contentX: this.isVisible() ? n : 0, contentY: this.isVisible() ? t.scale_height + e : 0, scrollHeight: this.isVisible() ? e : 0, scrollWidth: this.isVisible() ? n : 0 } }, _bindStore: function () { if (this.$config.bind) { var t = this.$gantt.getDatastore(this.$config.bind); if (this.$config.rowStore = t, t && !t._gridCacheAttached) { var e = this; t._gridCacheAttached = t.attachEvent("onBeforeFilter", function () { e._resetTopPositionHeight() }) } } }, _unbindStore: function () { if (this.$config.bind) { var t = this.$gantt.getDatastore(this.$config.bind); t && t._gridCacheAttached && (t.detachEvent(t._gridCacheAttached), t._gridCacheAttached = !1) } }, refresh: function () { this._bindStore(), this._resetTopPositionHeight(), this._resetHeight(), this._initSmartRenderingPlaceholder(), this._calculateGridWidth(), this._renderGridHeader() }, getViewPort: function () { var t = this.$config.scrollLeft || 0, e = this.$config.scrollTop || 0, n = this.$config.height || 0, i = this.$config.width || 0; return { y: e, y_end: e + n, x: t, x_end: t + i, height: n, width: i } }, scrollTo: function (t, e) { if (this.isVisible()) { var n = !1; this.$config.scrollTop = this.$config.scrollTop || 0, this.$config.scrollLeft = this.$config.scrollLeft || 0, 1 * t == t && (this.$config.scrollLeft = this.$state.scrollLeft = this.$grid.scrollLeft = t, n = !0), 1 * e == e && (this.$config.scrollTop = this.$state.scrollTop = this.$grid_data.scrollTop = e, n = !0), n && this.callEvent("onScroll", [this.$config.scrollLeft, this.$config.scrollTop]) } }, getColumnIndex: function (t, e) { for (var n = this.$getConfig().columns, i = 0, r = 0; r < n.length; r++)if (e && n[r].hide && i++, n[r].name == t) return r - i; return null }, getColumn: function (t) { var e = this.getColumnIndex(t); return null === e ? null : this.$getConfig().columns[e] }, getGridColumns: function () { return this.$getConfig().columns.slice() }, isVisible: function () { return this.$parent && this.$parent.$config ? !this.$parent.$config.hidden : this.$grid.offsetWidth }, _createLayerConfig: function () { var t = this.$gantt, e = this; return [{ renderer: t.$ui.layers.gridLine(), container: this.$grid_data, filter: [function () { return e.isVisible() }] }, { renderer: t.$ui.layers.gridTaskRowResizer(), container: this.$grid_data, append: !0, filter: [function () { return t.config.resize_rows }] }] }, _addLayers: function (t) { if (this.$config.bind) { this._taskLayers = []; var e = this, n = this.$gantt.$services.getService("layers"), i = n.getDataRender(this.$config.bind); i || (i = n.createDataRender({ name: this.$config.bind, defaultContainer: function () { return e.$grid_data } })); for (var r = this.$config.layers, a = 0; r && a < r.length; a++) { var o = r[a]; o.view = this; var s = i.addLayer(o); this._taskLayers.push(s) } this._bindStore(), this._initSmartRenderingPlaceholder() } }, _refreshPlaceholderOnStoreUpdate: function (t) { var e = this.$getConfig(), n = this.$config.rowStore; if (n && null === t && this.isVisible() && e.smart_rendering) { var i; if (this.$config.scrollY) { var r = this.$gantt.$ui.getView(this.$config.scrollY); r && (i = r.getScrollState().scrollSize) } if (i || (i = n ? this.getTotalHeight() : 0), i) { this.$rowsPlaceholder && this.$rowsPlaceholder.parentNode && this.$rowsPlaceholder.parentNode.removeChild(this.$rowsPlaceholder); var a = this.$rowsPlaceholder = document.createElement("div"); a.style.visibility = "hidden", a.style.height = i + "px", a.style.width = "1px", this.$grid_data.appendChild(a) } } }, _initSmartRenderingPlaceholder: function () { var t = this.$config.rowStore; t && (this._initSmartRenderingPlaceholder = function () { }, this._staticBgHandler = t.attachEvent("onStoreUpdated", r.bind(this._refreshPlaceholderOnStoreUpdate, this))) }, _initEvents: function () { var t = this.$gantt; this._mouseDelegates.delegate("click", "gantt_close", t.bind(function (t, e, n) { var r = this.$config.rowStore; if (!r) return !0; var a = i.locateAttribute(t, this.$config.item_attribute); return a && r.close(a.getAttribute(this.$config.item_attribute)), !1 }, this), this.$grid), this._mouseDelegates.delegate("click", "gantt_open", t.bind(function (t, e, n) { var r = this.$config.rowStore; if (!r) return !0; var a = i.locateAttribute(t, this.$config.item_attribute); return a && r.open(a.getAttribute(this.$config.item_attribute)), !1 }, this), this.$grid) }, _clearLayers: function (t) { var e = this.$gantt.$services.getService("layers").getDataRender(this.$config.bind); if (this._taskLayers) for (var n = 0; n < this._taskLayers.length; n++)e.removeLayer(this._taskLayers[n]); this._taskLayers = [] }, _getColumnWidth: function (t, e, n) { var i = t.min_width || e.min_grid_column_width, r = Math.max(n, i || 10); return t.max_width && (r = Math.min(r, t.max_width)), r }, _checkGridColumnMinWidthLimits: function (t, e) { for (var n = 0, i = t.length; n < i; n++) { var r = 1 * t[n].width; !t[n].min_width && r < e.min_grid_column_width && (t[n].min_width = r) } }, _getGridWidthLimits: function () { for (var t = this.$getConfig(), e = this.getGridColumns(), n = 0, i = 0, r = 0; r < e.length; r++)n += e[r].min_width ? e[r].min_width : t.min_grid_column_width, void 0 !== i && (i = e[r].max_width ? i + e[r].max_width : void 0); return this._checkGridColumnMinWidthLimits(e, t), [n, i] }, _setColumnsWidth: function (t, e) { var n = this.$getConfig(), i = this.getGridColumns(), r = 0, a = t; e = window.isNaN(e) ? -1 : e; for (var o = 0, s = i.length; o < s; o++)r += 1 * i[o].width; if (window.isNaN(r)) { this._calculateGridWidth(), r = 0; for (o = 0, s = i.length; o < s; o++)r += 1 * i[o].width } var l = a - r, c = 0; for (o = 0; o < e + 1; o++)c += i[o].width; r -= c; for (o = e + 1; o < i.length; o++) { var u = i[o], d = Math.round(l * (u.width / r)); l < 0 ? u.min_width && u.width + d < u.min_width ? d = u.min_width - u.width : !u.min_width && n.min_grid_column_width && u.width + d < n.min_grid_column_width && (d = n.min_grid_column_width - u.width) : u.max_width && u.width + d > u.max_width && (d = u.max_width - u.width), r -= u.width, u.width += d, l -= d } for (var h = l > 0 ? 1 : -1; l > 0 && 1 === h || l < 0 && -1 === h;) { var f = l; for (o = e + 1; o < i.length; o++) { var _; if ((_ = i[o].width + h) == this._getColumnWidth(i[o], n, _) && (l -= h, i[o].width = _), !l) break } if (f == l) break } l && e > -1 && ((_ = i[e].width + l) == this._getColumnWidth(i[e], n, _) && (i[e].width = _)); return this._getColsTotalWidth() }, _getColsTotalWidth: function () { for (var t = this.getGridColumns(), e = 0, n = 0; n < t.length; n++) { var i = parseFloat(t[n].width); if (window.isNaN(i)) return !1; e += i } return e }, _calculateGridWidth: function () { for (var t = this.$getConfig(), e = this.getGridColumns(), n = 0, i = [], r = [], a = 0; a < e.length; a++) { var o = parseFloat(e[a].width); window.isNaN(o) && (o = t.min_grid_column_width || 10, i.push(a)), r[a] = o, n += o } var s = this._getGridWidth() + 1; if (t.autofit || i.length) { var l = s - n; if (t.autofit && !t.grid_elastic_columns) for (a = 0; a < r.length; a++) { var c = Math.round(l / (r.length - a)); r[a] += c, (u = this._getColumnWidth(e[a], t, r[a])) != r[a] && (c = u - r[a], r[a] = u), l -= c } else if (i.length) for (a = 0; a < i.length; a++) { c = Math.round(l / (i.length - a)); var u, d = i[a]; r[d] += c, (u = this._getColumnWidth(e[d], t, r[d])) != r[d] && (c = u - r[d], r[d] = u), l -= c } for (a = 0; a < r.length; a++)e[a].width = r[a] } else { var h = s != n; this.$config.width = n - 1, t.grid_width = n, h && this.$parent._setContentSize(this.$config.width, null) } }, _renderGridHeader: function () { var t = this.$gantt, e = this.$getConfig(), n = this.$gantt.locale, i = this.$gantt.templates, r = this.getGridColumns(); e.rtl && (r = r.reverse()); for (var a = [], o = 0, s = n.labels, l = e.scale_height - 1, c = 0; c < r.length; c++) { var u = c == r.length - 1, d = r[c]; d.name || (d.name = t.uid() + ""); var h = 1 * d.width, f = this._getGridWidth(); u && f > o + h && (d.width = h = f - o), o += h; var _ = t._sort && d.name == t._sort.name ? "<div class='gantt_sort gantt_" + t._sort.direction + "'></div>" : "", g = ["gantt_grid_head_cell", "gantt_grid_head_" + d.name, u ? "gantt_last_cell" : "", i.grid_header_class(d.name, d)].join(" "), p = "width:" + (h - (u ? 1 : 0)) + "px;", v = d.label || s["column_" + d.name] || s[d.name]; v = v || ""; var m = "<div class='" + g + "' style='" + p + "' " + t._waiAria.gridScaleCellAttrString(d, v) + " data-column-id='" + d.name + "' column_id='" + d.name + "' data-column-name='" + d.name + "' data-column-index='" + c + "'>" + v + _ + "</div>"; a.push(m) } this.$grid_scale.style.height = e.scale_height + "px", this.$grid_scale.style.lineHeight = l + "px", this.$grid_scale.innerHTML = a.join(""), this._renderHeaderResizers && this._renderHeaderResizers() }, _getGridWidth: function () { return this.$config.width }, destructor: function () { this._clearLayers(this.$gantt), this._mouseDelegates && (this._mouseDelegates.destructor(), this._mouseDelegates = null), this._unbindStore(), this.$grid = null, this.$grid_scale = null, this.$grid_data = null, this.$gantt = null, this.$config.rowStore && (this.$config.rowStore.detachEvent(this._staticBgHandler), this.$config.rowStore = null), this.callEvent("onDestroy", []), this.detachAllEvents() } }, t.exports = u }, function (t, e) { t.exports = function (t) { var e = []; return { delegate: function (n, i, r, a) { e.push([n, i, r, a]), t.$services.getService("mouseEvents").delegate(n, i, r, a) }, destructor: function () { for (var n = t.$services.getService("mouseEvents"), i = 0; i < e.length; i++) { var r = e[i]; n.detach(r[0], r[1], r[2], r[3]) } e = [] } } } }, function (t, e) { t.exports = function (t, e, n) { return { top: e.getItemTop(t.id), height: e.getItemHeight(t.id), left: 0, right: 1 / 0 } } }, function (t, e, n) { var i = n(18), r = n(4), a = n(0), o = n(2), s = n(38), l = n(211), c = function (t, e, n, o) { this.$config = a.mixin({}, e || {}), this.$scaleHelper = new i(o), this.$gantt = o, this._posFromDateCache = {}, this._timelineDragScroll = null, a.mixin(this, s(this)), r(this) }; c.prototype = { init: function (t) { t.innerHTML += "<div class='gantt_task' style='width:inherit;height:inherit;'></div>", this.$task = t.childNodes[0], this.$task.innerHTML = "<div class='gantt_task_scale'></div><div class='gantt_data_area'></div>", this.$task_scale = this.$task.childNodes[0], this.$task_data = this.$task.childNodes[1], this.$task_data.innerHTML = "<div class='gantt_task_bg'></div><div class='gantt_links_area'></div><div class='gantt_bars_area'></div>", this.$task_bg = this.$task_data.childNodes[0], this.$task_links = this.$task_data.childNodes[1], this.$task_bars = this.$task_data.childNodes[2], this._tasks = { col_width: 0, width: [], full_width: 0, trace_x: [], rendered: {} }; var e = this.$getConfig(), n = e[this.$config.bind + "_attribute"], i = e[this.$config.bindLinks + "_attribute"]; !n && this.$config.bind && (n = "data-" + this.$config.bind + "-id"), !i && this.$config.bindLinks && (i = "data-" + this.$config.bindLinks + "-id"), this.$config.item_attribute = n || null, this.$config.link_attribute = i || null; var r = this._createLayerConfig(); this.$config.layers || (this.$config.layers = r.tasks), this.$config.linkLayers || (this.$config.linkLayers = r.links), this._attachLayers(this.$gantt), this.callEvent("onReady", []), this.$gantt.ext.dragTimeline && (this._timelineDragScroll = this.$gantt.ext.dragTimeline.create(), this._timelineDragScroll.attach(this)) }, setSize: function (t, e) { var n = this.$getConfig(); if (1 * t === t && (this.$config.width = t), 1 * e === e) { this.$config.height = e; var i = Math.max(this.$config.height - n.scale_height); this.$task_data.style.height = i + "px" } this.refresh(), this.$task_bg.style.backgroundImage = "", n.smart_rendering && this.$config.rowStore ? this.$task_bg.style.height = this.getTotalHeight() + "px" : this.$task_bg.style.height = ""; for (var r = this._tasks, a = this.$task_data.childNodes, o = 0, s = a.length; o < s; o++) { var l = a[o]; l.hasAttribute("data-layer") && l.style && (l.style.width = r.full_width + "px") } }, isVisible: function () { return this.$parent && this.$parent.$config ? !this.$parent.$config.hidden : this.$task.offsetWidth }, getSize: function () { var t = this.$getConfig(), e = this.$config.rowStore ? this.getTotalHeight() : 0, n = this.isVisible() ? this._tasks.full_width : 0; return { x: this.isVisible() ? this.$config.width : 0, y: this.isVisible() ? this.$config.height : 0, contentX: this.isVisible() ? n : 0, contentY: this.isVisible() ? t.scale_height + e : 0, scrollHeight: this.isVisible() ? e : 0, scrollWidth: this.isVisible() ? n : 0 } }, scrollTo: function (t, e) { if (this.isVisible()) { var n = !1; this.$config.scrollTop = this.$config.scrollTop || 0, this.$config.scrollLeft = this.$config.scrollLeft || 0, 1 * e === e && (this.$config.scrollTop = e, this.$task_data.scrollTop = this.$config.scrollTop, n = !0), 1 * t === t && (this.$task.scrollLeft = t, this.$config.scrollLeft = this.$task.scrollLeft, this._refreshScales(), n = !0), n && this.callEvent("onScroll", [this.$config.scrollLeft, this.$config.scrollTop]) } }, _refreshScales: function () { if (this.isVisible() && this.$getConfig().smart_scales) { var t = this.getViewPort(), e = this._scales; this.$task_scale.innerHTML = this._getScaleChunkHtml(e, t.x, t.x_end) } }, getViewPort: function () { var t = this.$config.scrollLeft || 0, e = this.$config.scrollTop || 0, n = this.$config.height || 0, i = this.$config.width || 0; return { y: e, y_end: e + n, x: t, x_end: t + i, height: n, width: i } }, _createLayerConfig: function () { var t = this, e = function () { return t.isVisible() }; return { tasks: [{ expose: !0, renderer: this.$gantt.$ui.layers.taskBar(), container: this.$task_bars, filter: [e, function (t, e) { return !e.hide_bar }] }, { renderer: this.$gantt.$ui.layers.taskSplitBar(), filter: [e], container: this.$task_bars, append: !0 }, { renderer: this.$gantt.$ui.layers.taskRollupBar(), filter: [e], container: this.$task_bars, append: !0 }, { renderer: this.$gantt.$ui.layers.taskBg(), container: this.$task_bg, filter: [e] }], links: [{ expose: !0, renderer: this.$gantt.$ui.layers.link(), container: this.$task_links, filter: [e] }] } }, _attachLayers: function (t) { this._taskLayers = [], this._linkLayers = []; var e = this, n = this.$gantt.$services.getService("layers"); if (this.$config.bind) { this._bindStore(); var i = n.getDataRender(this.$config.bind); i || (i = n.createDataRender({ name: this.$config.bind, defaultContainer: function () { return e.$task_data } })), i.container = function () { return e.$task_data }; for (var r = this.$config.layers, a = 0; r && a < r.length; a++) { "string" == typeof (c = r[a]) && (c = this.$gantt.$ui.layers[c]()), ("function" == typeof c || c && c.render && c.update) && (c = { renderer: c }), c.view = this; var o = i.addLayer(c); this._taskLayers.push(o), c.expose && (this._taskRenderer = i.getLayer(o)) } this._initStaticBackgroundRender() } if (this.$config.bindLinks) { e.$config.linkStore = e.$gantt.getDatastore(e.$config.bindLinks); var s = n.getDataRender(this.$config.bindLinks); s || (s = n.createDataRender({ name: this.$config.bindLinks, defaultContainer: function () { return e.$task_data } })); var l = this.$config.linkLayers; for (a = 0; l && a < l.length; a++) { var c; "string" == typeof c && (c = this.$gantt.$ui.layers[c]()), (c = l[a]).view = this; var u = s.addLayer(c); this._taskLayers.push(u), l[a].expose && (this._linkRenderer = s.getLayer(u)) } } }, _initStaticBackgroundRender: function () { var t = this, e = l.create(), n = t.$config.rowStore; n && (this._staticBgHandler = n.attachEvent("onStoreUpdated", function (n, i, r) { if (null === n && t.isVisible()) { var a = t.$getConfig(); if (a.static_background) { var o = t.$gantt.getDatastore(t.$config.bind), s = t.$task_bg_static; s || ((s = document.createElement("div")).className = "gantt_task_bg", t.$task_bg_static = s, t.$task_bg.nextSibling ? t.$task_data.insertBefore(s, t.$task_bg.nextSibling) : t.$task_data.appendChild(s)), o && e.render(s, a, t.getScale(), t.getTotalHeight(), t.getItemHeight(i ? i.id : null)) } else a.static_background && t.$task_bg_static && t.$task_bg_static.parentNode && t.$task_bg_static.parentNode.removeChild(t.$task_bg_static) } }), this.attachEvent("onDestroy", function () { e.destroy() }), this._initStaticBackgroundRender = function () { }) }, _clearLayers: function (t) { var e = this.$gantt.$services.getService("layers"), n = e.getDataRender(this.$config.bind), i = e.getDataRender(this.$config.bindLinks); if (this._taskLayers) for (var r = 0; r < this._taskLayers.length; r++)n.removeLayer(this._taskLayers[r]); if (this._linkLayers) for (r = 0; r < this._linkLayers.length; r++)i.removeLayer(this._linkLayers[r]); this._linkLayers = [], this._taskLayers = [] }, _render_tasks_scales: function () { var t = this.$getConfig(), e = "", n = 0, i = 0, r = this.$gantt.getState(); if (this.isVisible()) { var a = this.$scaleHelper, o = this._getScales(); i = t.scale_height; var s = this.$config.width; "x" != t.autosize && "xy" != t.autosize || (s = Math.max(t.autosize_min_width, 0)); var l = a.prepareConfigs(o, t.min_column_width, s, i - 1, r.min_date, r.max_date, t.rtl), c = this._tasks = l[l.length - 1]; this._scales = l, this._posFromDateCache = {}, e = this._getScaleChunkHtml(l, 0, this.$config.width), n = c.full_width + "px", i += "px" } this.$task_scale.style.height = i, this.$task_data.style.width = this.$task_scale.style.width = n, this.$task_scale.innerHTML = e }, _getScaleChunkHtml: function (t, e, n) { for (var i = [], r = this.$gantt.templates.scale_row_class, a = 0; a < t.length; a++) { var o = "gantt_scale_line", s = r(t[a]); s && (o += " " + s), i.push('<div class="' + o + '" style="height:' + t[a].height + "px;position:relative;line-height:" + t[a].height + 'px">' + this._prepareScaleHtml(t[a], e, n) + "</div>") } return i.join("") }, _prepareScaleHtml: function (t, e, n) { var i = this.$getConfig(), r = this.$gantt.templates, a = [], s = null, l = null, c = t.format || t.template || t.date; "string" == typeof c && (c = this.$gantt.date.date_to_str(c)); var u = 0, d = t.count; !i.smart_scales || isNaN(e) || isNaN(n) || (u = o.findBinary(t.left, e), d = o.findBinary(t.left, n) + 1), l = t.css || function () { }, !t.css && i.inherit_scale_class && (l = r.scale_cell_class); for (var h = u; h < d && t.trace_x[h]; h++) { s = new Date(t.trace_x[h]); var f = c.call(this, s), _ = t.width[h], g = t.height, p = t.left[h], v = "", m = "", y = ""; if (_) { v = "width:" + _ + "px;height:" + g + "px;" + (i.smart_scales ? "position:absolute;left:" + p + "px" : ""), y = "gantt_scale_cell" + (h == t.count - 1 ? " gantt_last_cell" : ""), (m = l.call(this, s)) && (y += " " + m); var k = "<div class='" + y + "'" + this.$gantt._waiAria.getTimelineCellAttr(f) + " style='" + v + "'>" + f + "</div>"; a.push(k) } } return a.join("") }, dateFromPos: function (t) { var e = this._tasks; if (t < 0 || t > e.full_width || !e.full_width) return null; var n = o.findBinary(this._tasks.left, t), i = this._tasks.left[n], r = e.width[n] || e.col_width, a = 0; r && (a = (t - i) / r, e.rtl && (a = 1 - a)); var s = 0; return a && (s = this._getColumnDuration(e, e.trace_x[n])), new Date(e.trace_x[n].valueOf() + Math.round(a * s)) }, posFromDate: function (t) { if (!this.isVisible()) return 0; if (!t) return 0; var e = String(t.valueOf()); if (void 0 !== this._posFromDateCache[e]) return this._posFromDateCache[e]; var n = this.columnIndexByDate(t); this.$gantt.assert(n >= 0, "Invalid day index"); var i = Math.floor(n), r = n % 1, a = this._tasks.left[Math.min(i, this._tasks.width.length - 1)]; i == this._tasks.width.length && (a += this._tasks.width[this._tasks.width.length - 1]), r && (i < this._tasks.width.length ? a += this._tasks.width[i] * (r % 1) : a += 1); var o = Math.round(a); return this._posFromDateCache[e] = o, Math.round(o) }, _getNextVisibleColumn: function (t, e, n) { for (var i = +e[t], r = t; n[i];)i = +e[++r]; return r }, _getPrevVisibleColumn: function (t, e, n) { for (var i = +e[t], r = t; n[i];)i = +e[--r]; return r }, _getClosestVisibleColumn: function (t, e, n) { var i = this._getNextVisibleColumn(t, e, n); return e[i] || (i = this._getPrevVisibleColumn(t, e, n)), i }, columnIndexByDate: function (t) { var e = new Date(t).valueOf(), n = this._tasks.trace_x_ascending, i = this._tasks.ignore_x, r = this.$gantt.getState(); if (e <= r.min_date) return this._tasks.rtl ? n.length : 0; if (e >= r.max_date) return this._tasks.rtl ? 0 : n.length; var a = o.findBinary(n, e), s = this._getClosestVisibleColumn(a, n, i), l = n[s], c = this._tasks.trace_index_transition; if (!l) return c ? c[0] : 0; var u = (t - n[s]) / this._getColumnDuration(this._tasks, n[s]); return c ? c[s] + (1 - u) : s + u }, getItemPosition: function (t, e, n) { var i, r, a; return this._tasks.rtl ? (r = this.posFromDate(e || t.start_date), i = this.posFromDate(n || t.end_date)) : (i = this.posFromDate(e || t.start_date), r = this.posFromDate(n || t.end_date)), a = Math.max(r - i, 0), { left: i, top: this.getItemTop(t.id), height: this.getBarHeight(t.id), width: a, rowHeight: this.getItemHeight(t.id) } }, getBarHeight: function (t, e) { var n = this.$getConfig(), i = this.$config.rowStore.getItem(t), r = i.task_height || i.bar_height || n.bar_height || n.task_height, a = this.getItemHeight(t); "full" == r && (r = a - (n.task_height_offset || 5)); return r = Math.min(r, a), e && (r = Math.round(r / Math.sqrt(2))), Math.max(r, 0) }, getScale: function () { return this._tasks }, _getScales: function () { var t = this.$getConfig(), e = this.$scaleHelper, n = [e.primaryScale(t)].concat(e.getSubScales(t)); return e.sortScales(n), n }, _getColumnDuration: function (t, e) { return this.$gantt.date.add(e, t.step, t.unit) - e }, _bindStore: function () { if (this.$config.bind) { var t = this.$gantt.getDatastore(this.$config.bind); if (this.$config.rowStore = t, t && !t._timelineCacheAttached) { var e = this; t._timelineCacheAttached = t.attachEvent("onBeforeFilter", function () { e._resetTopPositionHeight() }) } } }, _unbindStore: function () { if (this.$config.bind) { var t = this.$gantt.getDatastore(this.$config.bind); t && t._timelineCacheAttached && (t.detachEvent(t._timelineCacheAttached), t._timelineCacheAttached = !1) } }, refresh: function () { this._bindStore(), this.$config.bindLinks && (this.$config.linkStore = this.$gantt.getDatastore(this.$config.bindLinks)), this._resetTopPositionHeight(), this._resetHeight(), this._initStaticBackgroundRender(), this._render_tasks_scales() }, destructor: function () { var t = this.$gantt; this._clearLayers(t), this._unbindStore(), this.$task = null, this.$task_scale = null, this.$task_data = null, this.$task_bg = null, this.$task_links = null, this.$task_bars = null, this.$gantt = null, this.$config.rowStore && (this.$config.rowStore.detachEvent(this._staticBgHandler), this.$config.rowStore = null), this.$config.linkStore && (this.$config.linkStore = null), this._timelineDragScroll && (this._timelineDragScroll.destructor(), this._timelineDragScroll = null), this.callEvent("onDestroy", []), this.detachAllEvents() } }, t.exports = c }, function (t, e) { t.exports = function (t, e, n, i, r) { if (!t.start_date || !t.end_date) return null; var a = n.getItemTop(t.id), o = n.getItemHeight(t.id); if (a > e.y_end || a + o < e.y) return !1; var s = n.posFromDate(t.start_date), l = n.posFromDate(t.end_date), c = Math.min(s, l) - 200, u = Math.max(s, l) + 200; return !(c > e.x_end || u < e.x) } }, function (t, e) { t.exports = function (t) { function e(e, a, o) { if (!t._isAllowedUnscheduledTask(e) && t._isTaskInTimelineLimits(e)) { var s = a.getItemPosition(e), l = o, c = a.$getTemplates(), u = t.getTaskType(e.type), d = a.getBarHeight(e.id, u == l.types.milestone), h = 0; u == l.types.milestone && (h = (d - s.height) / 2); var f = Math.floor((a.getItemHeight(e.id) - d) / 2); u == l.types.milestone && (s.left -= Math.round(d / 2), s.width = d); var _ = document.createElement("div"), g = Math.round(s.width); a.$config.item_attribute && (_.setAttribute(a.$config.item_attribute, e.id), _.setAttribute(a.$config.bind + "_id", e.id)), l.show_progress && u != l.types.milestone && function (e, n, i, r, a) { var o = 1 * e.progress || 0; i = Math.max(i - 2, 0); var s = document.createElement("div"), l = Math.round(i * o); l = Math.min(i, l), e.progressColor && (s.style.backgroundColor = e.progressColor, s.style.opacity = 1), s.style.width = l + "px", s.className = "gantt_task_progress", s.innerHTML = a.progress_text(e.start_date, e.end_date, e), r.rtl && (s.style.position = "absolute", s.style.right = "0px"); var c = document.createElement("div"); if (c.className = "gantt_task_progress_wrapper", c.appendChild(s), n.appendChild(c), t.config.drag_progress && !t.isReadonly(e)) { var u = document.createElement("div"), d = l; r.rtl && (d = i - l), u.style.left = d + "px", u.className = "gantt_task_progress_drag", s.appendChild(u), n.appendChild(u) } }(e, _, g, l, c); var p = function (e, n, i) { var r = document.createElement("div"); return t.getTaskType(e.type) != t.config.types.milestone ? r.innerHTML = i.task_text(e.start_date, e.end_date, e) : t.getTaskType(e.type) == t.config.types.milestone && n && (r.style.height = r.style.width = n + "px"), r.className = "gantt_task_content", r }(e, g, c); e.textColor && (p.style.color = e.textColor), _.appendChild(p); var v = function (e, n, i, r) { var a = r.$getConfig(), o = [e]; n && o.push(n); var s = t.getState(), l = t.getTask(i); if (t.getTaskType(l.type) == a.types.milestone ? o.push("gantt_milestone") : t.getTaskType(l.type) == a.types.project && o.push("gantt_project"), o.push("gantt_bar_" + t.getTaskType(l.type)), t.isSummaryTask(l) && o.push("gantt_dependent_task"), t.isSplitTask(l) && (a.open_split_tasks && !l.$open || !a.open_split_tasks) && o.push("gantt_split_parent"), a.select_task && t.isSelectedTask(i) && o.push("gantt_selected"), i == s.drag_id && (o.push("gantt_drag_" + s.drag_mode), s.touch_drag && o.push("gantt_touch_" + s.drag_mode)), s.link_source_id == i && o.push("gantt_link_source"), s.link_target_id == i && o.push("gantt_link_target"), a.highlight_critical_path && t.isCriticalTask && t.isCriticalTask(l) && o.push("gantt_critical_task"), s.link_landing_area && s.link_target_id && s.link_source_id && s.link_target_id != s.link_source_id && (s.link_target_id == i || s.link_source_id == i)) { var c = s.link_source_id, u = s.link_from_start, d = s.link_to_start, h = t.isLinkAllowed(c, i, u, d), f = ""; f = h ? d ? "link_start_allow" : "link_finish_allow" : d ? "link_start_deny" : "link_finish_deny", o.push(f) } return o.join(" ") }("gantt_task_line", c.task_class(e.start_date, e.end_date, e), e.id, a); (e.color || e.progressColor || e.textColor) && (v += " gantt_task_inline_color"), s.width < 20 && (v += " gantt_thin_task"), _.className = v; var m = ["left:" + s.left + "px", "top:" + (f + s.top) + "px", "height:" + (u == l.types.milestone ? s.height : d) + "px", "line-height:" + Math.max(d < 30 ? d - 2 : d, 0) + "px", "width:" + g + "px"]; e.color && m.push("background-color:" + e.color), e.textColor && m.push("color:" + e.textColor), _.style.cssText = m.join(";"); var y = function (t, e, r, a) { var o = "gantt_left " + i(!e.rtl, t), s = null; return a && (s = { type: "marginRight", value: a }), n(t, r.leftside_text, o, s) }(e, l, c, h); y && _.appendChild(y), (y = function (t, e, r, a) { var o = "gantt_right " + i(!!e.rtl, t), s = null; return a && (s = { type: "marginLeft", value: a }), n(t, r.rightside_text, o, s) }(e, l, c, h)) && _.appendChild(y), t._waiAria.setTaskBarAttr(e, _); var k = t.getState(); return t.isReadonly(e) || (l.drag_resize && !t.isSummaryTask(e) && u != l.types.milestone && r(_, "gantt_task_drag", e, function (t) { var e = document.createElement("div"); return e.className = t, e }, l), l.drag_links && l.show_links && r(_, "gantt_link_control", e, function (t) { var e = document.createElement("div"); e.className = t, e.style.cssText = ["height:" + d + "px", "line-height:" + d + "px"].join(";"); var n = document.createElement("div"); n.className = "gantt_link_point"; var i = !1; return k.link_source_id && l.touch && (i = !0), n.style.display = i ? "block" : "", e.appendChild(n), e }, l, h)), _ } } function n(t, e, n, i) { if (!e) return null; var r = e(t.start_date, t.end_date, t); if (!r) return null; var a = document.createElement("div"); return a.className = "gantt_side_content " + n, a.innerHTML = r, i && (a.style[i.type] = Math.abs(i.value) + "px"), a } function i(e, n) { var i = function (e) { return e ? { $source: [t.config.links.start_to_start], $target: [t.config.links.start_to_start, t.config.links.finish_to_start] } : { $source: [t.config.links.finish_to_start, t.config.links.finish_to_finish], $target: [t.config.links.finish_to_finish] } }(e); for (var r in i) for (var a = n[r], o = 0; o < a.length; o++)for (var s = t.getLink(a[o]), l = 0; l < i[r].length; l++)if (s.type == i[r][l]) return "gantt_link_crossing"; return "" } function r(e, n, i, r, a, o) { var s, l = t.getState(); +i.start_date >= +l.min_date && ((s = r([n, a.rtl ? "task_right" : "task_left", "task_start_date"].join(" "))).setAttribute("data-bind-property", "start_date"), o && (s.style.marginLeft = o + "px"), e.appendChild(s)), +i.end_date <= +l.max_date && ((s = r([n, a.rtl ? "task_left" : "task_right", "task_end_date"].join(" "))).setAttribute("data-bind-property", "end_date"), o && (s.style.marginRight = o + "px"), e.appendChild(s)) } return function (n, i, r) { var a = (r = i.$getConfig()).type_renderers[t.getTaskType(n.type)], o = e; return a ? a.call(t, n, function (e) { return o.call(t, e, i, r) }, i) : o.call(t, n, i, r) } } }, function (t, e) { t.exports = function (t, e, n) { return { top: e.getItemTop(t.id), height: e.getItemHeight(t.id), left: 0, right: 1 / 0 } } }, function (t, e) { t.exports = function (t, e) { var n = 0, i = t.left.length - 1; if (e) for (var r = 0; r < t.left.length; r++) { var a = t.left[r]; if (a < e.x && (n = r), a > e.x_end) { i = r; break } } return { start: n, end: i } } }, function (t, e, n) { var i = n(14); t.exports = function (t, e, n, r) { var a = e.width[t]; if (a <= 0) return !1; if (!r.config.smart_rendering || i(r)) return !0; var o = e.left[t] - a, s = e.left[t] + a; return o <= n.x_end && s >= n.x } }, function (t, e, n) { var i = n(0); t.exports = { createDropTargetObject: function (t) { var e = { targetParent: null, targetIndex: 0, targetId: null, child: !1, nextSibling: !1, prevSibling: !1 }; return t && i.mixin(e, t, !0), e }, nextSiblingTarget: function (t, e, n) { var i = this.createDropTargetObject(); return i.targetId = e, i.nextSibling = !0, i.targetParent = n.getParent(i.targetId), i.targetIndex = n.getBranchIndex(i.targetId), (n.getParent(t) != i.targetParent || i.targetIndex < n.getBranchIndex(t)) && (i.targetIndex += 1), i }, prevSiblingTarget: function (t, e, n) { var i = this.createDropTargetObject(); return i.targetId = e, i.prevSibling = !0, i.targetParent = n.getParent(i.targetId), i.targetIndex = n.getBranchIndex(i.targetId), n.getParent(t) == i.targetParent && i.targetIndex > n.getBranchIndex(t) && (i.targetIndex -= 1), i }, firstChildTarget: function (t, e, n) { var i = this.createDropTargetObject(); return i.targetId = e, i.targetParent = i.targetId, i.targetIndex = 0, i.child = !0, i }, lastChildTarget: function (t, e, n) { var i = n.getChildren(e), r = this.createDropTargetObject(); return r.targetId = i[i.length - 1], r.targetParent = e, r.targetIndex = i.length, r.nextSibling = !0, r } } }, function (t, e, n) { var i = n(0); t.exports = function t(e, n) { e = e || i.event, n = n || i.eventRemove; var r = [], a = { attach: function (t, n, i, a) { r.push({ element: t, event: n, callback: i, capture: a }), e(t, n, i, a) }, detach: function (t, e, i, a) { n(t, e, i, a); for (var o = 0; o < r.length; o++) { var s = r[o]; s.element === t && s.event === e && s.callback === i && s.capture === a && (r.splice(o, 1), o--) } }, detachAll: function () { for (var t = r.slice(), e = 0; e < t.length; e++) { var n = t[e]; a.detach(n.element, n.event, n.callback, n.capture), a.detach(n.element, n.event, n.callback, void 0), a.detach(n.element, n.event, n.callback, !1), a.detach(n.element, n.event, n.callback, !0) } r.splice(0, r.length) }, extend: function () { return t(this.event, this.eventRemove) } }; return a } }, function (t, e) { t.exports = function (t, e) { if (!e) return !0; if (t._on_timeout) return !1; var n = Math.ceil(1e3 / e); return n < 2 || (setTimeout(function () { delete t._on_timeout }, n), t._on_timeout = !0, !0) } }, function (t, e) { var n, i, r = t.exports = {}; function a() { throw new Error("setTimeout has not been defined") } function o() { throw new Error("clearTimeout has not been defined") } function s(t) { if (n === setTimeout) return setTimeout(t, 0); if ((n === a || !n) && setTimeout) return n = setTimeout, setTimeout(t, 0); try { return n(t, 0) } catch (e) { try { return n.call(null, t, 0) } catch (e) { return n.call(this, t, 0) } } } !function () { try { n = "function" == typeof setTimeout ? setTimeout : a } catch (t) { n = a } try { i = "function" == typeof clearTimeout ? clearTimeout : o } catch (t) { i = o } }(); var l, c = [], u = !1, d = -1; function h() { u && l && (u = !1, l.length ? c = l.concat(c) : d = -1, c.length && f()) } function f() { if (!u) { var t = s(h); u = !0; for (var e = c.length; e;) { for (l = c, c = []; ++d < e;)l && l[d].run(); d = -1, e = c.length } l = null, u = !1, function (t) { if (i === clearTimeout) return clearTimeout(t); if ((i === o || !i) && clearTimeout) return i = clearTimeout, clearTimeout(t); try { i(t) } catch (e) { try { return i.call(null, t) } catch (e) { return i.call(this, t) } } }(t) } } function _(t, e) { this.fun = t, this.array = e } function g() { } r.nextTick = function (t) { var e = new Array(arguments.length - 1); if (arguments.length > 1) for (var n = 1; n < arguments.length; n++)e[n - 1] = arguments[n]; c.push(new _(t, e)), 1 !== c.length || u || s(f) }, _.prototype.run = function () { this.fun.apply(null, this.array) }, r.title = "browser", r.browser = !0, r.env = {}, r.argv = [], r.version = "", r.versions = {}, r.on = g, r.addListener = g, r.once = g, r.off = g, r.removeListener = g, r.removeAllListeners = g, r.emit = g, r.prependListener = g, r.prependOnceListener = g, r.listeners = function (t) { return [] }, r.binding = function (t) { throw new Error("process.binding is not supported") }, r.cwd = function () { return "/" }, r.chdir = function (t) { throw new Error("process.chdir is not supported") }, r.umask = function () { return 0 } }, function (t, e, n) { var i = n(33), r = n(0), a = n(4), o = n(9), s = function (t) { return this.pull = {}, this.$initItem = t.initItem, this.visibleOrder = i.$create(), this.fullOrder = i.$create(), this._skip_refresh = !1, this._filterRule = null, this._searchVisibleOrder = {}, this._indexRangeCache = {}, this._getItemsCache = null, this.$config = t, a(this), this._attachDataChange(function () { return this._indexRangeCache = {}, this._getItemsCache = null, !0 }), this }; s.prototype = { _attachDataChange: function (t) { this.attachEvent("onClearAll", t), this.attachEvent("onBeforeParse", t), this.attachEvent("onBeforeUpdate", t), this.attachEvent("onBeforeDelete", t), this.attachEvent("onBeforeAdd", t), this.attachEvent("onParse", t), this.attachEvent("onBeforeFilter", t) }, _parseInner: function (t) { for (var e = null, n = [], i = 0, a = t.length; i < a; i++)e = t[i], this.$initItem && (this.$config.copyOnParse() && (e = r.copy(e)), e = this.$initItem(e)), this.callEvent("onItemLoading", [e]) && (this.pull.hasOwnProperty(e.id) || this.fullOrder.push(e.id), n.push(e), this.pull[e.id] = e); return n }, parse: function (t) { this.isSilent() || this.callEvent("onBeforeParse", [t]); var e = this._parseInner(t); this.isSilent() || (this.refresh(), this.callEvent("onParse", [e])) }, getItem: function (t) { return this.pull[t] }, _updateOrder: function (t) { t.call(this.visibleOrder), t.call(this.fullOrder) }, updateItem: function (t, e) { if (r.defined(e) || (e = this.getItem(t)), !this.isSilent() && !1 === this.callEvent("onBeforeUpdate", [e.id, e])) return !1; r.mixin(this.pull[t], e, !0), this.isSilent() || (this.callEvent("onAfterUpdate", [e.id, e]), this.callEvent("onStoreUpdated", [e.id, e, "update"])) }, _removeItemInner: function (t) { this._updateOrder(function () { this.$remove(t) }), delete this.pull[t] }, removeItem: function (t) { var e = this.getItem(t); if (!this.isSilent() && !1 === this.callEvent("onBeforeDelete", [e.id, e])) return !1; this.callEvent("onAfterDeleteConfirmed", [e.id, e]), this._removeItemInner(t), this.isSilent() || (this.filter(), this.callEvent("onAfterDelete", [e.id, e]), this.callEvent("onStoreUpdated", [e.id, e, "delete"])) }, _addItemInner: function (t, e) { if (this.exists(t.id)) this.silent(function () { this.updateItem(t.id, t) }); else { var n = this.visibleOrder, i = n.length; (!r.defined(e) || e < 0) && (e = i), e > i && (e = Math.min(n.length, e)) } this.pull[t.id] = t, this.isSilent() || this._updateOrder(function () { -1 === this.$find(t.id) && this.$insertAt(t.id, e) }), this.filter() }, isVisible: function (t) { return this.visibleOrder.$find(t) > -1 }, getVisibleItems: function () { return this.getIndexRange() }, addItem: function (t, e) { return r.defined(t.id) || (t.id = r.uid()), this.$initItem && (t = this.$initItem(t)), !(!this.isSilent() && !1 === this.callEvent("onBeforeAdd", [t.id, t])) && (this._addItemInner(t, e), this.isSilent() || (this.callEvent("onAfterAdd", [t.id, t]), this.callEvent("onStoreUpdated", [t.id, t, "add"])), t.id) }, _changeIdInner: function (t, e) { this.pull[t] && (this.pull[e] = this.pull[t]); var n = this._searchVisibleOrder[t]; this.pull[e].id = e, this._updateOrder(function () { this[this.$find(t)] = e }), this._searchVisibleOrder[e] = n, delete this._searchVisibleOrder[t], delete this.pull[t] }, changeId: function (t, e) { this._changeIdInner(t, e), this.callEvent("onIdChange", [t, e]) }, exists: function (t) { return !!this.pull[t] }, _moveInner: function (t, e) { var n = this.getIdByIndex(t); this._updateOrder(function () { this.$removeAt(t), this.$insertAt(n, Math.min(this.length, e)) }) }, move: function (t, e) { var n = this.getIdByIndex(t), i = this.getItem(n); this._moveInner(t, e), this.isSilent() || this.callEvent("onStoreUpdated", [i.id, i, "move"]) }, clearAll: function () { this.$destroyed || (this.silent(function () { this.unselect() }), this.pull = {}, this.visibleOrder = i.$create(), this.fullOrder = i.$create(), this.isSilent() || (this.callEvent("onClearAll", []), this.refresh())) }, silent: function (t, e) { var n = !1; this.isSilent() && (n = !0), this._skip_refresh = !0, t.call(e || this), n || (this._skip_refresh = !1) }, isSilent: function () { return !!this._skip_refresh }, arraysEqual: function (t, e) { if (t.length !== e.length) return !1; for (var n = 0; n < t.length; n++)if (t[n] !== e[n]) return !1; return !0 }, refresh: function (t, e) { var n, i; if (!this.isSilent() && (t && (n = this.getItem(t)), i = t ? [t, n, "paint"] : [null, null, null], !1 !== this.callEvent("onBeforeStoreUpdate", i))) { var r = this._quick_refresh && !this._mark_recompute; if (this._mark_recompute = !1, t) { if (!e && !r) { var a = this.visibleOrder; this.filter(), this.arraysEqual(a, this.visibleOrder) || (t = void 0) } } else r || this.filter(); i = t ? [t, n, "paint"] : [null, null, null], this.callEvent("onStoreUpdated", i) } }, count: function () { return this.fullOrder.length }, countVisible: function () { return this.visibleOrder.length }, sort: function (t) { }, serialize: function () { }, eachItem: function (t) { for (var e = 0; e < this.fullOrder.length; e++) { var n = this.getItem(this.fullOrder[e]); t.call(this, n) } }, find: function (t) { var e = []; return this.eachItem(function (n) { t(n) && e.push(n) }), e }, filter: function (t) { this.isSilent() || this.callEvent("onBeforeFilter", []), this.callEvent("onPreFilter", []); var e = i.$create(), n = []; this.eachItem(function (t) { this.callEvent("onFilterItem", [t.id, t]) && (o(t.id, null, this, this._ganttConfig) ? n.push(t.id) : e.push(t.id)) }); for (var r = 0; r < n.length; r++)e.push(n[r]); this.visibleOrder = e, this._searchVisibleOrder = {}; for (r = 0; r < this.visibleOrder.length; r++)this._searchVisibleOrder[this.visibleOrder[r]] = r; this.isSilent() || this.callEvent("onFilter", []) }, getIndexRange: function (t, e) { var n = Math.min(e || 1 / 0, this.countVisible() - 1), i = t || 0, r = i + "-" + n; if (this._indexRangeCache[r]) return this._indexRangeCache[r].slice(); for (var a = [], o = i; o <= n; o++)a.push(this.getItem(this.visibleOrder[o])); return this._indexRangeCache[r] = a.slice(), a }, getItems: function () { if (this._getItemsCache) return this._getItemsCache.slice(); var t = []; for (var e in this.pull) t.push(this.pull[e]); return this._getItemsCache = t.slice(), t }, getIdByIndex: function (t) { return this.visibleOrder[t] }, getIndexById: function (t) { var e = this._searchVisibleOrder[t]; return void 0 === e && (e = -1), e }, _getNullIfUndefined: function (t) { return void 0 === t ? null : t }, getFirst: function () { return this._getNullIfUndefined(this.visibleOrder[0]) }, getLast: function () { return this._getNullIfUndefined(this.visibleOrder[this.visibleOrder.length - 1]) }, getNext: function (t) { return this._getNullIfUndefined(this.visibleOrder[this.getIndexById(t) + 1]) }, getPrev: function (t) { return this._getNullIfUndefined(this.visibleOrder[this.getIndexById(t) - 1]) }, destructor: function () { this.callEvent("onDestroy", []), this.detachAllEvents(), this.$destroyed = !0, this.pull = null, this.$initItem = null, this.visibleOrder = null, this.fullOrder = null, this._skip_refresh = null, this._filterRule = null, this._searchVisibleOrder = null, this._indexRangeCache = {} } }, t.exports = s }, function (t, e, n) { var i = n(0), r = { $create: function (t) { return i.mixin(t || [], this) }, $removeAt: function (t, e) { t >= 0 && this.splice(t, e || 1) }, $remove: function (t) { this.$removeAt(this.$find(t)) }, $insertAt: function (t, e) { if (e || 0 === e) { var n = this.splice(e, this.length - e); this[e] = t, this.push.apply(this, n) } else this.push(t) }, $find: function (t) { for (var e = 0; e < this.length; e++)if (t == this[e]) return e; return -1 }, $each: function (t, e) { for (var n = 0; n < this.length; n++)t.call(e || this, this[n]) }, $map: function (t, e) { for (var n = 0; n < this.length; n++)this[n] = t.call(e || this, this[n]); return this }, $filter: function (t, e) { for (var n = 0; n < this.length; n++)t.call(e || this, this[n]) || (this.splice(n, 1), n--); return this } }; t.exports = r }, function (t, e, n) { var i = n(33), r = n(0), a = n(2), o = n(32), s = n(9), l = n(2).replaceValidZeroId; o.default && (o = o.default); var c = function (t) { o.apply(this, [t]), this._branches = {}, this.pull = {}, this.$initItem = function (e) { var n = e; t.initItem && (n = t.initItem(n)); var i = this.getItem(e.id); return i && i.parent != n.parent && this.move(n.id, n.$index || -1, n.parent || this._ganttConfig.root_id), n }, this.$parentProperty = t.parentProperty || "parent", "function" != typeof t.rootId ? this.$getRootId = function (t) { return function () { return t } }(t.rootId || 0) : this.$getRootId = t.rootId, this.$openInitially = t.openInitially, this.visibleOrder = i.$create(), this.fullOrder = i.$create(), this._searchVisibleOrder = {}, this._indexRangeCache = {}, this._eachItemMainRangeCache = null, this._getItemsCache = null, this._skip_refresh = !1, this._ganttConfig = null, t.getConfig && (this._ganttConfig = t.getConfig()); var e = {}, n = {}, r = {}, a = {}, s = !1; return this._attachDataChange(function () { return this._indexRangeCache = {}, this._eachItemMainRangeCache = null, this._getItemsCache = null, !0 }), this.attachEvent("onPreFilter", function () { this._indexRangeCache = {}, this._eachItemMainRangeCache = null, e = {}, n = {}, r = {}, a = {}, s = !1, this.eachItem(function (t) { var i = this.getParent(t.id); t.$open && !1 !== r[i] ? r[t.id] = !0 : r[t.id] = !1, this._isSplitItem(t) && (s = !0, e[t.id] = !0, n[t.id] = !0), s && n[i] && (n[t.id] = !0), r[i] || void 0 === r[i] ? a[t.id] = !0 : a[t.id] = !1 }) }), this.attachEvent("onFilterItem", function (t, i) { var r = !1; if (this._ganttConfig) r = this._ganttConfig.open_split_tasks; var o = a[i.id]; return s && (o && n[i.id] && !e[i.id] && (o = !!r), n[i.id] && !e[i.id] && (i.$split_subtask = !0)), i.$expanded_branch = !!a[i.id], !!o }), this.attachEvent("onFilter", function () { e = {}, n = {}, r = {}, a = {} }), this }; c.prototype = r.mixin({ _buildTree: function (t) { for (var e = null, n = this.$getRootId(), i = 0, a = t.length; i < a; i++)e = t[i], this.setParent(e, l(this.getParent(e), n) || n); for (i = 0, a = t.length; i < a; i++)e = t[i], this._add_branch(e), e.$level = this.calculateItemLevel(e), e.$local_index = this.getBranchIndex(e.id), r.defined(e.$open) || (e.$open = r.defined(e.open) ? e.open : this.$openInitially()); this._updateOrder() }, _isSplitItem: function (t) { return "split" == t.render && this.hasChild(t.id) }, parse: function (t) { this._skip_refresh || this.callEvent("onBeforeParse", [t]); var e = this._parseInner(t); this._buildTree(e), this.filter(), this._skip_refresh || this.callEvent("onParse", [e]) }, _addItemInner: function (t, e) { var n = this.getParent(t); r.defined(n) || (n = this.$getRootId(), this.setParent(t, n)); var i = this.getIndexById(n) + Math.min(Math.max(e, 0), this.visibleOrder.length); 1 * i !== i && (i = void 0), o.prototype._addItemInner.call(this, t, i), this.setParent(t, n), t.hasOwnProperty("$rendered_parent") && this._move_branch(t, t.$rendered_parent), this._add_branch(t, e) }, _changeIdInner: function (t, e) { var n = this.getChildren(t), i = this._searchVisibleOrder[t]; o.prototype._changeIdInner.call(this, t, e); var r = this.getParent(e); this._replace_branch_child(r, t, e), this._branches[t] && (this._branches[e] = this._branches[t]); for (var a = 0; a < n.length; a++) { var s = this.getItem(n[a]); s[this.$parentProperty] = e, s.$rendered_parent = e } this._searchVisibleOrder[e] = i, delete this._branches[t] }, _traverseBranches: function (t, e) { r.defined(e) || (e = this.$getRootId()); var n = this._branches[e]; if (n) for (var i = 0; i < n.length; i++) { var a = n[i]; t.call(this, a), this._branches[a] && this._traverseBranches(t, a) } }, _updateOrder: function (t) { this.fullOrder = i.$create(), this._traverseBranches(function (t) { this.fullOrder.push(t) }), t && o.prototype._updateOrder.call(this, t) }, _removeItemInner: function (t) { var e = []; this.eachItem(function (t) { e.push(t) }, t), e.push(this.getItem(t)); for (var n = 0; n < e.length; n++)this._move_branch(e[n], this.getParent(e[n]), null), o.prototype._removeItemInner.call(this, e[n].id), this._move_branch(e[n], this.getParent(e[n]), null) }, move: function (t, e, n) { var i = arguments[3], a = (this._ganttConfig || {}).root_id || 0; if (i = l(i, a)) { if (i === t) return; n = this.getParent(i), e = this.getBranchIndex(i) } if (t != n) { r.defined(n) || (n = this.$getRootId()); var o = this.getItem(t), c = this.getParent(o.id), u = this.getChildren(n); if (-1 == e && (e = u.length + 1), c == n) if (this.getBranchIndex(t) == e) return; if (!1 === this.callEvent("onBeforeItemMove", [t, n, e])) return !1; for (var d = [], h = 0; h < u.length; h++)s(u[h], null, this, this._ganttConfig) && (d.push(u[h]), u.splice(h, 1), h--); this._replace_branch_child(c, t); var f = (u = this.getChildren(n))[e]; (f = l(f, a)) ? u = u.slice(0, e).concat([t]).concat(u.slice(e)) : u.push(t), d.length && (u = u.concat(d)), this.setParent(o, n), this._branches[n] = u; var _ = this.calculateItemLevel(o) - o.$level; o.$level += _, this.eachItem(function (t) { t.$level += _ }, o.id, this), this._moveInner(this.getIndexById(t), this.getIndexById(n) + e), this.callEvent("onAfterItemMove", [t, n, e]), this.refresh() } }, getBranchIndex: function (t) { for (var e = this.getChildren(this.getParent(t)), n = 0; n < e.length; n++)if (e[n] == t) return n; return -1 }, hasChild: function (t) { var e = this._branches[t]; return e && e.length }, getChildren: function (t) { var e = this._branches[t]; return e || i.$create() }, isChildOf: function (t, e) { if (!this.exists(t)) return !1; if (e === this.$getRootId()) return !0; if (!this.hasChild(e)) return !1; var n = this.getItem(t), i = this.getParent(t); if (this.getItem(e).$level >= n.$level) return !1; for (; n && this.exists(i);) { if ((n = this.getItem(i)) && n.id == e) return !0; i = this.getParent(n) } return !1 }, getSiblings: function (t) { if (!this.exists(t)) return i.$create(); var e = this.getParent(t); return this.getChildren(e) }, getNextSibling: function (t) { for (var e = this.getSiblings(t), n = 0, i = e.length; n < i; n++)if (e[n] == t) { var r = e[n + 1]; return 0 === r && n > 0 && (r = "0"), r || null } return null }, getPrevSibling: function (t) { for (var e = this.getSiblings(t), n = 0, i = e.length; n < i; n++)if (e[n] == t) { var r = e[n - 1]; return 0 === r && n > 0 && (r = "0"), r || null } return null }, getParent: function (t) { var e = null; return (e = void 0 !== t.id ? t : this.getItem(t)) ? e[this.$parentProperty] : this.$getRootId() }, clearAll: function () { this._branches = {}, o.prototype.clearAll.call(this) }, calculateItemLevel: function (t) { var e = 0; return this.eachParent(function () { e++ }, t), e }, _setParentInner: function (t, e, n) { n || (t.hasOwnProperty("$rendered_parent") ? this._move_branch(t, t.$rendered_parent, e) : this._move_branch(t, t[this.$parentProperty], e)) }, setParent: function (t, e, n) { this._setParentInner(t, e, n), t[this.$parentProperty] = e }, _eachItemCached: function (t, e) { for (var n = 0, i = e.length; n < i; n++)t.call(this, e[n]) }, _eachItemIterate: function (t, e, n) { var i = this.getChildren(e); for (i.length && (i = i.slice().reverse()); i.length;) { var r = i.pop(), a = this.getItem(r); if (t.call(this, a), n && n.push(a), this.hasChild(a.id)) for (var o = this.getChildren(a.id), s = o.length - 1; s >= 0; s--)i.push(o[s]) } }, eachItem: function (t, e) { var n = this.$getRootId(); r.defined(e) || (e = n); var i = l(e, n) || n, a = !1, o = !1, s = null; i === n && (this._eachItemMainRangeCache ? (a = !0, s = this._eachItemMainRangeCache) : (o = !0, s = this._eachItemMainRangeCache = [])), a ? this._eachItemCached(t, s) : this._eachItemIterate(t, i, o ? s : null) }, eachParent: function (t, e) { for (var n = {}, i = e, r = this.getParent(i); this.exists(r);) { if (n[r]) throw new Error("Invalid tasks tree. Cyclic reference has been detected on task " + r); n[r] = !0, i = this.getItem(r), t.call(this, i), r = this.getParent(i) } }, _add_branch: function (t, e, n) { var r = void 0 === n ? this.getParent(t) : n; this.hasChild(r) || (this._branches[r] = i.$create()); for (var a = this.getChildren(r), o = !1, s = 0, l = a.length; s < l; s++)if (a[s] == t.id) { o = !0; break } o || (1 * e == e ? a.splice(e, 0, t.id) : a.push(t.id), t.$rendered_parent = r) }, _move_branch: function (t, e, n) { this._eachItemMainRangeCache = null, this._replace_branch_child(e, t.id), this.exists(n) || n == this.$getRootId() ? this._add_branch(t, void 0, n) : delete this._branches[t.id], t.$level = this.calculateItemLevel(t), this.eachItem(function (t) { t.$level = this.calculateItemLevel(t) }, t.id) }, _replace_branch_child: function (t, e, n) { var r = this.getChildren(t); if (r && void 0 !== t) { for (var a = i.$create(), o = 0; o < r.length; o++)r[o] != e ? a.push(r[o]) : n && a.push(n); this._branches[t] = a } }, sort: function (t, e, n) { this.exists(n) || (n = this.$getRootId()), t || (t = "order"); var i = "string" == typeof t ? function (e, n) { return e[t] == n[t] || a.isDate(e[t]) && a.isDate(n[t]) && e[t].valueOf() == n[t].valueOf() ? 0 : e[t] > n[t] ? 1 : -1 } : t; if (e) { var r = i; i = function (t, e) { return r(e, t) } } var o = this.getChildren(n); if (o) { for (var s = [], l = o.length - 1; l >= 0; l--)s[l] = this.getItem(o[l]); s.sort(i); for (l = 0; l < s.length; l++)o[l] = s[l].id, this.sort(t, e, o[l]) } }, filter: function (t) { for (var e in this.pull) this.pull[e].$rendered_parent !== this.getParent(this.pull[e]) && this._move_branch(this.pull[e], this.pull[e].$rendered_parent, this.getParent(this.pull[e])); return o.prototype.filter.apply(this, arguments) }, open: function (t) { this.exists(t) && (this.getItem(t).$open = !0, this.callEvent("onItemOpen", [t])) }, close: function (t) { this.exists(t) && (this.getItem(t).$open = !1, this.callEvent("onItemClose", [t])) }, destructor: function () { o.prototype.destructor.call(this), this._branches = null, this._indexRangeCache = {}, this._eachItemMainRangeCache = null } }, o.prototype), t.exports = c }, function (t, e, n) { var i = n(18), r = n(18); function a(t) { var e = function (t) { var e = new r(t).primaryScale(), n = e.unit, a = e.step; if (t.config.scale_offset_minimal) { var o = new i(t), s = [o.primaryScale()].concat(o.getSubScales()); o.sortScales(s), n = s[s.length - 1].unit, a = s[s.length - 1].step || 1 } return { unit: n, step: a } }(t), n = e.unit, a = e.step, o = function (t, e) { var n = { start_date: null, end_date: null }; if (e.config.start_date && e.config.end_date) { n.start_date = e.date[t + "_start"](new Date(e.config.start_date)); var i = new Date(e.config.end_date), r = e.date[t + "_start"](new Date(i)); i = +i != +r ? e.date.add(r, 1, t) : r, n.end_date = i } return n }(n, t); if (!o.start_date || !o.end_date) { for (var s = !0, l = t.getTaskByTime(), c = 0; c < l.length; c++) { if (l[c].type !== t.config.types.project) { s = !1; break } } if (l.length && s) { var u = l[0].start_date, d = t.date.add(u, 1, t.config.duration_unit); o = { start_date: new Date(u), end_date: new Date(d) } } else o = t.getSubtaskDates(); o.start_date && o.end_date || (o = { start_date: new Date, end_date: new Date }), o.start_date = t.date[n + "_start"](o.start_date), o.start_date = t.calculateEndDate({ start_date: t.date[n + "_start"](o.start_date), duration: -1, unit: n, step: a }), o.end_date = t.date[n + "_start"](o.end_date), o.end_date = t.calculateEndDate({ start_date: o.end_date, duration: 2, unit: n, step: a }) } t._min_date = o.start_date, t._max_date = o.end_date } t.exports = function (t) { a(t), function (t) { if (t.config.fit_tasks) { var e = +t._min_date, n = +t._max_date; if (+t._min_date != e || +t._max_date != n) return t.render(), t.callEvent("onScaleAdjusted", []), !0 } }(t) } }, function (t, e) { function n(t, e, n) { for (var i = 0; i < e.length; i++)t.isLinkExists(e[i]) && (n[e[i]] = t.getLink(e[i])) } function i(t, e, i) { n(t, e.$source, i), n(t, e.$target, i) } t.exports = { getSubtreeLinks: function (t, e) { var n = {}; return t.isTaskExists(e) && i(t, t.getTask(e), n), t.eachTask(function (e) { i(t, e, n) }, e), n }, getSubtreeTasks: function (t, e) { var n = {}; return t.eachTask(function (t) { n[t.id] = t }, e), n } } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }); var i = function () { function t() { var t = this; this.canParse = function (e) { return !isNaN(t.parse(e)) }, this.format = function (t) { return String(t) }, this.parse = function (t) { return parseInt(t, 10) } } return t.create = function (e) { return void 0 === e && (e = null), new t }, t }(); e.default = i }, function (t, e, n) { var i = n(133); t.exports = function (t) { var e = {}, n = {}, r = null, a = -1, o = null, s = i(t); return { _resetTopPositionHeight: function () { e = {}, n = {}, s.resetCache() }, _resetHeight: function () { var t = this.$config.rowStore, e = this.getCacheStateTotalHeight(t); o ? this.shouldClearHeightCache(o, e) && (o = e, r = null) : o = e, a = -1, s.resetCache() }, getRowTop: function (t) { if (s.canUseSimpleCalculation()) return s.getRowTop(t); var e = this.$config.rowStore; if (!e) return 0; if (void 0 !== n[t]) return n[t]; for (var i = e.getIndexRange(), r = 0, a = 0, o = 0; o < i.length; o++)n[o] = r, r += this.getItemHeight(i[o].id), o < t && (a = r); return a }, getItemTop: function (t) { if (this.$config.rowStore) { if (void 0 !== e[t]) return e[t]; var n = this.$config.rowStore; if (!n) return 0; var i = n.getIndexById(t); if (-1 === i && n.getParent && n.exists(t)) { var r = n.getParent(t); if (n.exists(r)) { var a = n.getItem(r); if (this.$gantt.isSplitTask(a)) return this.getItemTop(r) } } return e[t] = this.getRowTop(i), e[t] } return 0 }, getItemHeight: function (t) { if (s.canUseSimpleCalculation()) return s.getItemHeight(t); if (!r && this.$config.rowStore && this._fillHeightCache(this.$config.rowStore), void 0 !== r[t]) return r[t]; var e = this.$getConfig().row_height; if (this.$config.rowStore) { var n = this.$config.rowStore; if (!n) return e; var i = n.getItem(t); return r[t] = i && i.row_height || e } return e }, _fillHeightCache: function (t) { if (t) { r = {}; var e = this.$getConfig().row_height; t.eachItem(function (t) { return r[t.id] = t && t.row_height || e }) } }, getCacheStateTotalHeight: function (t) { var e = this.$getConfig().row_height, n = {}, i = [], r = 0; return t && t.eachItem(function (t) { i.push(t), n[t.id] = t.row_height, r += t.row_height || e }), { globalHeight: e, items: i, count: i.length, sumHeight: r } }, shouldClearHeightCache: function (t, e) { if (t.count != e.count) return !0; if (t.globalHeight != e.globalHeight) return !0; if (t.sumHeight != e.sumHeight) return !0; for (var n in t.items) { var i = e.items[n]; if (void 0 !== i && i != t.items[n]) return !0 } return !1 }, getTotalHeight: function () { if (s.canUseSimpleCalculation()) return s.getTotalHeight(); if (-1 != a) return a; if (this.$config.rowStore) { var t = this.$config.rowStore; this._fillHeightCache(t); var e = this.getItemHeight.bind(this), n = 0; return t.getVisibleItems().forEach(function (t) { n += e(t.id) }), a = n, n } return 0 }, getItemIndexByTopPosition: function (t) { if (!this.$config.rowStore) return 0; if (s.canUseSimpleCalculation()) return s.getItemIndexByTopPosition(t); for (var e = this.$config.rowStore, n = 0; n < e.countVisible(); n++) { var i = this.getRowTop(n), r = this.getRowTop(n + 1); if (!r) { var a = e.getIdByIndex(n); r = i + this.getItemHeight(a) } if (t >= i && t < r) return n } } } } }, function (t, e, n) { var i = n(0), r = n(2); function a(t, e, n, i, r) { return this.date = t, this.unit = e, this.task = n, this.id = i, this.calendar = r, this } function o(t, e, n, i, r, a) { return this.date = t, this.dir = e, this.unit = n, this.task = i, this.id = r, this.calendar = a, this } function s(t, e, n, i, r, a, o) { return this.start_date = t, this.duration = e, this.unit = n, this.step = i, this.task = r, this.id = a, this.calendar = o, this } function l(t, e, n, i) { return this.start_date = t, this.end_date = e, this.task = n, this.calendar = i, this.unit = null, this.step = null, this } t.exports = function (t) { return { getWorkHoursArguments: function () { var e = arguments[0]; if (e = r.isDate(e) ? { date: e } : i.mixin({}, e), !r.isValidDate(e.date)) throw t.assert(!1, "Invalid date argument for getWorkHours method"), new Error("Invalid date argument for getWorkHours method"); return e }, setWorkTimeArguments: function () { return arguments[0] }, unsetWorkTimeArguments: function () { return arguments[0] }, isWorkTimeArguments: function () { var e, n = arguments[0]; if (n instanceof a) return n; if ((e = n.date ? new a(n.date, n.unit, n.task, null, n.calendar) : new a(arguments[0], arguments[1], arguments[2], null, arguments[3])).unit = e.unit || t.config.duration_unit, !r.isValidDate(e.date)) throw t.assert(!1, "Invalid date argument for isWorkTime method"), new Error("Invalid date argument for isWorkTime method"); return e }, getClosestWorkTimeArguments: function (e) { var n, i = arguments[0]; if (i instanceof o) return i; if (n = r.isDate(i) ? new o(i) : new o(i.date, i.dir, i.unit, i.task, null, i.calendar), i.id && (n.task = i), n.dir = i.dir || "any", n.unit = i.unit || t.config.duration_unit, !r.isValidDate(n.date)) throw t.assert(!1, "Invalid date argument for getClosestWorkTime method"), new Error("Invalid date argument for getClosestWorkTime method"); return n }, _getStartEndConfig: function (e) { var n, i = l; if (e instanceof i) return e; if (r.isDate(e) ? n = new i(arguments[0], arguments[1], arguments[2], arguments[3]) : (n = new i(e.start_date, e.end_date, e.task), null !== e.id && void 0 !== e.id && (n.task = e)), n.unit = n.unit || t.config.duration_unit, n.step = n.step || t.config.duration_step, n.start_date = n.start_date || n.start || n.date, !r.isValidDate(n.start_date)) throw t.assert(!1, "Invalid start_date argument for getDuration method"), new Error("Invalid start_date argument for getDuration method"); if (!r.isValidDate(n.end_date)) throw t.assert(!1, "Invalid end_date argument for getDuration method"), new Error("Invalid end_date argument for getDuration method"); return n }, getDurationArguments: function (t, e, n, i) { return this._getStartEndConfig.apply(this, arguments) }, hasDurationArguments: function (t, e, n, i) { return this._getStartEndConfig.apply(this, arguments) }, calculateEndDateArguments: function (e, n, i, a) { var o, l = arguments[0]; if (l instanceof s) return l; if (o = r.isDate(l) ? new s(arguments[0], arguments[1], arguments[2], void 0, arguments[3], void 0, arguments[4]) : new s(l.start_date, l.duration, l.unit, l.step, l.task, null, l.calendar), null !== l.id && void 0 !== l.id && (o.task = l, o.unit = null, o.step = null), o.unit = o.unit || t.config.duration_unit, o.step = o.step || t.config.duration_step, !r.isValidDate(o.start_date)) throw t.assert(!1, "Invalid start_date argument for calculateEndDate method"), new Error("Invalid start_date argument for calculateEndDate method"); return o } } } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.createCacheObject = void 0; var i = n(145), r = n(146), a = n(147); Object.defineProperty(e, "LargerUnitsCache", { enumerable: !0, get: function () { return a.LargerUnitsCache } }), e.createCacheObject = function () { return "undefined" != typeof Map ? new i.WorkUnitsMapCache : new r.WorkUnitsObjectCache } }, function (t, e, n) { var i = n(3), r = n(1), a = function (t) { "use strict"; function e(e, n, i) { var r = t.apply(this, arguments) || this; return e && (r.$root = !0), r._parseConfig(n), r.$name = "layout", r } return i(e, t), e.prototype.destructor = function () { this.$container && this.$view && r.removeNode(this.$view); for (var e = 0; e < this.$cells.length; e++) { this.$cells[e].destructor() } this.$cells = [], t.prototype.destructor.call(this) }, e.prototype._resizeScrollbars = function (t, e) { var n, i = !1, r = [], a = []; function o(t) { t.$parent.show(), i = !0, r.push(t) } function s(t) { t.$parent.hide(), i = !0, a.push(t) } for (var l = 0; l < e.length; l++)t[(n = e[l]).$config.scroll] ? s(n) : n.shouldHide() ? s(n) : n.shouldShow() ? o(n) : n.isVisible() ? r.push(n) : a.push(n); var c = {}; for (l = 0; l < r.length; l++)r[l].$config.group && (c[r[l].$config.group] = !0); for (l = 0; l < a.length; l++)if ((n = a[l]).$config.group && c[n.$config.group]) { o(n); for (var u = 0; u < r.length; u++)if (r[u] == n) { this.$gantt.$scrollbarRepaint = !0; break } } return i }, e.prototype._syncCellSizes = function (t, e) { if (t) { var n = {}; return this._eachChild(function (t) { t.$config.group && "scrollbar" != t.$name && "resizer" != t.$name && (n[t.$config.group] || (n[t.$config.group] = []), n[t.$config.group].push(t)) }), n[t] && this._syncGroupSize(n[t], e), n[t] } }, e.prototype._syncGroupSize = function (t, e) { if (t.length) for (var n = t[0].$parent._xLayout ? "width" : "height", i = t[0].$parent.getNextSibling(t[0].$id) ? 1 : -1, r = e.value, a = e.isGravity, o = 0; o < t.length; o++) { var s = t[o].getSize(), l = i > 0 ? t[o].$parent.getNextSibling(t[o].$id) : t[o].$parent.getPrevSibling(t[o].$id); "resizer" == l.$name && (l = i > 0 ? l.$parent.getNextSibling(l.$id) : l.$parent.getPrevSibling(l.$id)); var c = l.getSize(); if (a) t[o].$config.gravity = r; else if (l[n]) { var u = s.gravity + c.gravity, d = s[n] + c[n], h = u / d; t[o].$config.gravity = h * r, l.$config[n] = d - r, l.$config.gravity = u - h * r } else t[o].$config[n] = r; var f = this.$gantt.$ui.getView("grid"); !f || t[o].$content !== f || f.$config.scrollable || a || (this.$gantt.config.grid_width = r) } }, e.prototype.resize = function (e) { var n = !1; if (this.$root && !this._resizeInProgress && (this.callEvent("onBeforeResize", []), n = !0, this._resizeInProgress = !0), t.prototype.resize.call(this, !0), t.prototype.resize.call(this, !1), n) { var i = []; i = (i = (i = i.concat(this.getCellsByType("viewCell"))).concat(this.getCellsByType("viewLayout"))).concat(this.getCellsByType("hostCell")); for (var r = this.getCellsByType("scroller"), a = 0; a < i.length; a++)i[a].$config.hidden || i[a].setContentSize(); var o = this._getAutosizeMode(this.$config.autosize), s = this._resizeScrollbars(o, r); if (this.$config.autosize && (this.autosize(this.$config.autosize), i.forEach(function (t) { var e = t.$parent, n = e.getContentSize(o); o.x && (e.$config.$originalWidthStored || (e.$config.$originalWidthStored = !0, e.$config.$originalWidth = e.$config.width), e.$config.width = n.width), o.y && (e.$config.$originalHeightStored || (e.$config.$originalHeightStored = !0, e.$config.$originalHeight = e.$config.height), e.$config.height = n.height) }), s = !0), s) { this.resize(); for (a = 0; a < i.length; a++)i[a].$config.hidden || i[a].setContentSize() } this.callEvent("onResize", []) } n && (this._resizeInProgress = !1) }, e.prototype._eachChild = function (t, e) { if (t(e = e || this), e.$cells) for (var n = 0; n < e.$cells.length; n++)this._eachChild(t, e.$cells[n]) }, e.prototype.isChild = function (t) { var e = !1; return this._eachChild(function (n) { n !== t && n.$content !== t || (e = !0) }), e }, e.prototype.getCellsByType = function (t) { var n = []; if (t === this.$name && n.push(this), this.$content && this.$content.$name == t && n.push(this.$content), this.$cells) for (var i = 0; i < this.$cells.length; i++) { var r = e.prototype.getCellsByType.call(this.$cells[i], t); r.length && n.push.apply(n, r) } return n }, e.prototype.getNextSibling = function (t) { var e = this.cellIndex(t); return e >= 0 && this.$cells[e + 1] ? this.$cells[e + 1] : null }, e.prototype.getPrevSibling = function (t) { var e = this.cellIndex(t); return e >= 0 && this.$cells[e - 1] ? this.$cells[e - 1] : null }, e.prototype.cell = function (t) { for (var e = 0; e < this.$cells.length; e++) { var n = this.$cells[e]; if (n.$id === t) return n; var i = n.cell(t); if (i) return i } }, e.prototype.cellIndex = function (t) { for (var e = 0; e < this.$cells.length; e++)if (this.$cells[e].$id === t) return e; return -1 }, e.prototype.moveView = function (t, e) { if (this.$cells[e] !== t) return window.alert("Not implemented"); e += this.$config.header ? 1 : 0; var n = this.$view; e >= n.childNodes.length ? n.appendChild(t.$view) : n.insertBefore(t.$view, n.childNodes[e]) }, e.prototype._parseConfig = function (t) { this.$cells = [], this._xLayout = !t.rows; for (var e = t.rows || t.cols || t.views, n = 0; n < e.length; n++) { var i = e[n]; i.mode = this._xLayout ? "x" : "y"; var r = this.$factory.initUI(i, this); r ? (r.$parent = this, this.$cells.push(r)) : (e.splice(n, 1), n--) } }, e.prototype.getCells = function () { return this.$cells }, e.prototype.render = function () { var t = r.insertNode(this.$container, this.$toHTML()); this.$fill(t, null), this.callEvent("onReady", []), this.resize(), this.render = this.resize }, e.prototype.$fill = function (t, e) { this.$view = t, this.$parent = e; for (var n = r.getChildNodes(t, "gantt_layout_cell"), i = n.length - 1; i >= 0; i--) { var a = this.$cells[i]; a.$fill(n[i], this), a.$config.hidden && a.$view.parentNode.removeChild(a.$view) } }, e.prototype.$toHTML = function () { for (var e = this._xLayout ? "x" : "y", n = [], i = 0; i < this.$cells.length; i++)n.push(this.$cells[i].$toHTML()); return t.prototype.$toHTML.call(this, n.join(""), (this.$root ? "gantt_layout_root " : "") + "gantt_layout gantt_layout_" + e) }, e.prototype.getContentSize = function (t) { for (var e, n, i, r = 0, a = 0, o = 0; o < this.$cells.length; o++)(n = this.$cells[o]).$config.hidden || (e = n.getContentSize(t), "scrollbar" === n.$config.view && t[n.$config.scroll] && (e.height = 0, e.width = 0), n.$config.resizer && (this._xLayout ? e.height = 0 : e.width = 0), i = n._getBorderSizes(), this._xLayout ? (r += e.width + i.horizontal, a = Math.max(a, e.height + i.vertical)) : (r = Math.max(r, e.width + i.horizontal), a += e.height + i.vertical)); return { width: r += (i = this._getBorderSizes()).horizontal, height: a += i.vertical } }, e.prototype._cleanElSize = function (t) { return 1 * (t || "").toString().replace("px", "") || 0 }, e.prototype._getBoxStyles = function (t) { var e = null, n = ["width", "height", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth"], i = { boxSizing: "border-box" == (e = window.getComputedStyle ? window.getComputedStyle(t, null) : { width: t.clientWidth, height: t.clientHeight }).boxSizing }; e.MozBoxSizing && (i.boxSizing = "border-box" == e.MozBoxSizing); for (var r = 0; r < n.length; r++)i[n[r]] = e[n[r]] ? this._cleanElSize(e[n[r]]) : 0; var a = { horPaddings: i.paddingLeft + i.paddingRight + i.borderLeftWidth + i.borderRightWidth, vertPaddings: i.paddingTop + i.paddingBottom + i.borderTopWidth + i.borderBottomWidth, borderBox: i.boxSizing, innerWidth: i.width, innerHeight: i.height, outerWidth: i.width, outerHeight: i.height }; return a.borderBox ? (a.innerWidth -= a.horPaddings, a.innerHeight -= a.vertPaddings) : (a.outerWidth += a.horPaddings, a.outerHeight += a.vertPaddings), a }, e.prototype._getAutosizeMode = function (t) { var e = { x: !1, y: !1 }; return "xy" === t ? e.x = e.y = !0 : "y" === t || !0 === t ? e.y = !0 : "x" === t && (e.x = !0), e }, e.prototype.autosize = function (t) { var e = this._getAutosizeMode(t), n = this._getBoxStyles(this.$container), i = this.getContentSize(t), r = this.$container; e.x && (n.borderBox && (i.width += n.horPaddings), r.style.width = i.width + "px"), e.y && (n.borderBox && (i.height += n.vertPaddings), r.style.height = i.height + "px") }, e.prototype.getSize = function () { this._sizes = []; for (var e = 0, n = 0, i = 1e11, r = 0, a = 1e11, o = 0, s = 0; s < this.$cells.length; s++) { var l = this._sizes[s] = this.$cells[s].getSize(); this.$cells[s].$config.hidden || (this._xLayout ? (!l.width && l.minWidth ? e += l.minWidth : e += l.width, i += l.maxWidth, n += l.minWidth, r = Math.max(r, l.height), a = Math.min(a, l.maxHeight), o = Math.max(o, l.minHeight)) : (!l.height && l.minHeight ? r += l.minHeight : r += l.height, a += l.maxHeight, o += l.minHeight, e = Math.max(e, l.width), i = Math.min(i, l.maxWidth), n = Math.max(n, l.minWidth))) } var c = t.prototype.getSize.call(this); return c.maxWidth >= 1e5 && (c.maxWidth = i), c.maxHeight >= 1e5 && (c.maxHeight = a), c.minWidth = c.minWidth != c.minWidth ? 0 : c.minWidth, c.minHeight = c.minHeight != c.minHeight ? 0 : c.minHeight, this._xLayout ? (c.minWidth += this.$config.margin * this.$cells.length || 0, c.minWidth += 2 * this.$config.padding || 0, c.minHeight += 2 * this.$config.padding || 0) : (c.minHeight += this.$config.margin * this.$cells.length || 0, c.minHeight += 2 * this.$config.padding || 0), c }, e.prototype._calcFreeSpace = function (t, e, n) { var i = n ? e.minWidth : e.minHeight, r = e.maxWidth, a = t; return a ? (a > r && (a = r), a < i && (a = i), this._free -= a) : ((a = Math.floor(this._free / this._gravity * e.gravity)) > r && (a = r, this._free -= a, this._gravity -= e.gravity), a < i && (a = i, this._free -= a, this._gravity -= e.gravity)), a }, e.prototype._calcSize = function (t, e, n) { var i = t, r = n ? e.minWidth : e.minHeight, a = n ? e.maxWidth : e.maxHeight; return i || (i = Math.floor(this._free / this._gravity * e.gravity)), i > a && (i = a), i < r && (i = r), i }, e.prototype._configureBorders = function () { this.$root && this._setBorders([this._borders.left, this._borders.top, this._borders.right, this._borders.bottom], this); for (var t = this._xLayout ? this._borders.right : this._borders.bottom, e = this.$cells, n = e.length - 1, i = n; i >= 0; i--)if (!e[i].$config.hidden) { n = i; break } for (i = 0; i < e.length; i++)if (!e[i].$config.hidden) { var r = i >= n, a = ""; !r && e[i + 1] && "scrollbar" == e[i + 1].$config.view && (this._xLayout ? r = !0 : a = "gantt_layout_cell_border_transparent"), this._setBorders(r ? [] : [t, a], e[i]) } }, e.prototype._updateCellVisibility = function () { for (var t = this._visibleCells || {}, e = !this._visibleCells, n = {}, i = null, r = [], a = 0; a < this._sizes.length; a++)(i = this.$cells[a]).$config.hide_empty && r.push(i), !e && i.$config.hidden && t[i.$id] ? i._hide(!0) : i.$config.hidden || t[i.$id] || i._hide(!1), i.$config.hidden || (n[i.$id] = !0); this._visibleCells = n; for (a = 0; a < r.length; a++) { var o = !0; (i = r[a]).$cells.forEach(function (t) { t.$config.hidden || t.$config.resizer || (o = !1) }), i.$config.hidden = o } }, e.prototype.setSize = function (e, n) { this._configureBorders(), t.prototype.setSize.call(this, e, n), n = this.$lastSize.contentY, e = this.$lastSize.contentX; var i, r, a = this.$config.padding || 0; this.$view.style.padding = a + "px", this._gravity = 0, this._free = this._xLayout ? e : n, this._free -= 2 * a, this._updateCellVisibility(); for (var o = 0; o < this._sizes.length; o++)if (!(i = this.$cells[o]).$config.hidden) { var s = this.$config.margin || 0; "resizer" != i.$name || s || (s = -1); var l = i.$view, c = this._xLayout ? "marginRight" : "marginBottom"; o !== this.$cells.length - 1 && (l.style[c] = s + "px", this._free -= s), r = this._sizes[o], this._xLayout ? r.width || (this._gravity += r.gravity) : r.height || (this._gravity += r.gravity) } for (o = 0; o < this._sizes.length; o++)if (!(i = this.$cells[o]).$config.hidden) { var u = (r = this._sizes[o]).width, d = r.height; this._xLayout ? this._calcFreeSpace(u, r, !0) : this._calcFreeSpace(d, r, !1) } for (o = 0; o < this.$cells.length; o++)if (!(i = this.$cells[o]).$config.hidden) { r = this._sizes[o]; var h = void 0, f = void 0; this._xLayout ? (h = this._calcSize(r.width, r, !0), f = n - 2 * a) : (h = e - 2 * a, f = this._calcSize(r.height, r, !1)), i.setSize(h, f) } }, e }(n(11)); t.exports = a }, function (t, e, n) { var i = n(2); t.exports = function (t) { var e = {}; return t.$data.tasksStore.attachEvent("onStoreUpdated", function () { e = {} }), function (n, r, a, o) { var s = n.id + "_" + r + "_" + a.unit + "_" + a.step; return e[s] ? e[s] : e[s] = function (e, n, r, a) { var o, s = !1, l = {}; t.config.process_resource_assignments && n === t.config.resource_property ? (o = "task" == e.$role ? t.getResourceAssignments(e.$resource_id, e.$task_id) : t.getResourceAssignments(e.id), s = !0) : o = "task" == e.$role ? [] : t.getTaskBy(n, e.id); for (var c, u, d, h, f, l = function (e, n, r) { for (var a = n.unit, o = n.step, s = {}, l = {}, c = 0; c < e.length; c++) { var u = e[c], d = u; r && (d = t.getTask(u.task_id)); var h = u.start_date || d.start_date, f = u.end_date || d.end_date; r && (u.start_date && (h = new Date(Math.max(u.start_date.valueOf(), d.start_date.valueOf()))), u.end_date && (f = new Date(Math.min(u.end_date.valueOf(), d.end_date.valueOf())))); var _ = i.findBinary(n.trace_x, h.valueOf()), g = new Date(n.trace_x[_] || t.date[a + "_start"](new Date(h))), p = t.config.work_time ? t.getTaskCalendar(d) : t; for (l[p.id] = {}; g < f;) { var v = l[p.id], m = g, y = m.valueOf(); if (g = t.date.add(g, o, a), !1 !== v[y]) { var k = p.isWorkTime({ date: m, task: d, unit: a }); k ? (s[y] || (s[y] = { tasks: [], assignments: [] }), s[y].tasks.push(d), r && s[y].assignments.push(u)) : v[y] = !1 } } } return s }(o, r, s), _ = r.unit, g = r.step, p = [], v = a.$getConfig(), m = 0; m < r.trace_x.length; m++)c = new Date(r.trace_x[m]), u = t.date.add(c, g, _), f = l[c.valueOf()] || {}, d = f.tasks || [], h = f.assignments || [], d.length || v.resource_render_empty_cells ? p.push({ start_date: c, end_date: u, tasks: d, assignments: h }) : p.push(null); return p }(n, r, a, o) } } }, function (t, e, n) { var i = n(2), r = { getHtmlSelect: function (t, e, n) { var r = "", o = this; return t = t || [], i.forEach(t, function (t) { var e = [{ key: "value", value: t.key }]; n == t.key && (e[e.length] = { key: "selected", value: "selected" }), t.attributes && (e = e.concat(t.attributes)), r += o.getHtmlOption({ innerHTML: t.label }, e) }), a("select", { innerHTML: r }, e) }, getHtmlOption: function (t, e) { return a("option", t, e) }, getHtmlButton: function (t, e) { return a("button", t, e) }, getHtmlDiv: function (t, e) { return a("div", t, e) }, getHtmlLabel: function (t, e) { return a("label", t, e) }, getHtmlInput: function (t) { return "<input" + o(t || []) + ">" } }; function a(t, e, n) { return e = e || [], "<" + t + o(n || []) + ">" + (e.innerHTML || "") + "</" + t + ">" } function o(t) { var e = ""; return i.forEach(t, function (t) { e += " " + t.key + "='" + t.value + "'" }), e } t.exports = r }, , , , , , , , , , , , , , , , , , , , function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.gantt = void 0; var i = n(64), r = n(92), a = n(12).gantt = r(i.default); e.gantt = a, e.default = a }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }); var i = n(65), r = n(68), a = n(70), o = n(71), s = n(82), l = n(83), c = n(84), u = n(86), d = n(89); e.default = { click_drag: i.default, drag_timeline: r.default, fullscreen: a.default, keyboard_navigation: o, quick_info: c.default, tooltip: u.default, undo: d.default, marker: s, multiselect: l } }, function (t, e, n) { "use strict"; var i = this && this.__assign || function () { return (i = Object.assign || function (t) { for (var e, n = 1, i = arguments.length; n < i; n++)for (var r in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]); return t }).apply(this, arguments) }; Object.defineProperty(e, "__esModule", { value: !0 }); var r = n(66), a = n(67); e.default = function (t) { t.ext || (t.ext = {}); var e = { className: "gantt_click_drag_rect", useRequestAnimationFrame: !0, callback: void 0, singleRow: !1 }, n = new r.EventsManager(t); t.ext.clickDrag = n, t.attachEvent("onGanttReady", function () { var n = i({ viewPort: t.$task_data }, e); if (t.config.click_drag) { var r = t.config.click_drag; n.render = r.render || e.render, n.className = r.className || e.className, n.callback = r.callback || e.callback, n.viewPort = r.viewPort || t.$task_data, n.useRequestAnimationFrame = void 0 === r.useRequestAnimationFrame ? e.useRequestAnimationFrame : r.useRequestAnimationFrame, n.singleRow = void 0 === r.singleRow ? e.singleRow : r.singleRow; var o = t.$ui.getView("timeline"), s = new a.SelectedRegion(n, t, o); t.ext.clickDrag.attach(s, r.useKey, r.ignore) } }), t.attachEvent("onDestroy", function () { n.destructor() }) } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.EventsManager = void 0; var i = n(1), r = function () { function t(t) { this._mouseDown = !1, this._gantt = t, this._domEvents = t._createDomEventScope() } return t.prototype.attach = function (t, e, n) { var r = this, a = this._gantt, o = t.getViewPort(); this._originPosition = window.getComputedStyle(o).display, this._restoreOriginPosition = function () { o.style.position = r._originPosition }, "static" === this._originPosition && (o.style.position = "relative"); var s = a.$services.getService("state"); s.registerProvider("clickDrag", function () { return { autoscroll: !1 } }); var l = null; this._domEvents.attach(o, "mousedown", function (i) { l = null; var o = ".gantt_task_line, .gantt_task_link"; void 0 !== n && (o = n instanceof Array ? n.join(", ") : n), o && a.utils.dom.closest(i.target, o) || (s.registerProvider("clickDrag", function () { return { autoscroll: r._mouseDown } }), e && !0 !== i[e] || (l = r._getCoordinates(i, t))) }); var c = i.getRootNode(a.$root) || document.body; this._domEvents.attach(c, "mouseup", function (n) { if (l = null, (!e || !0 === n[e]) && !0 === r._mouseDown) { r._mouseDown = !1; var i = r._getCoordinates(n, t); t.dragEnd(i) } }), this._domEvents.attach(o, "mousemove", function (n) { if (!e || !0 === n[e]) { var i = r._gantt.ext.clickDrag, o = (r._gantt.config.drag_timeline || {}).useKey; if (!i || !o || e || !n[o]) { var s = null; if (!r._mouseDown && l) return s = r._getCoordinates(n, t), void (Math.abs(l.relative.left - s.relative.left) > 5 && l && (r._mouseDown = !0, t.setStart(a.copy(l)), t.setPosition(a.copy(l)), t.setEnd(a.copy(l)), l = null)); !0 === r._mouseDown && (s = r._getCoordinates(n, t), t.setEnd(s), t.render()) } } }) }, t.prototype.detach = function () { var t = this._gantt; this._domEvents.detachAll(), this._restoreOriginPosition && this._restoreOriginPosition(), t.$services.getService("state").unregisterProvider("clickDrag") }, t.prototype.destructor = function () { this.detach() }, t.prototype._getCoordinates = function (t, e) { var n = e.getViewPort(), i = n.getBoundingClientRect(), r = t.clientX, a = t.clientY; return { absolute: { left: r, top: a }, relative: { left: r - i.left + n.scrollLeft, top: a - i.top + n.scrollTop } } }, t }(); e.EventsManager = r }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.SelectedRegion = void 0; var i = n(4), r = n(2), a = function () { function t(t, e, n) { var a = this; this._el = document.createElement("div"), this.defaultRender = function (t, e) { a._el || (a._el = document.createElement("div")); var n = a._el, i = Math.min(t.relative.top, e.relative.top), r = Math.max(t.relative.top, e.relative.top), o = Math.min(t.relative.left, e.relative.left), s = Math.max(t.relative.left, e.relative.left); if (a._singleRow) { var l = a._getTaskPositionByTop(a._startPoint.relative.top); n.style.height = l.height + "px", n.style.top = l.top + "px" } else n.style.height = Math.abs(r - i) + "px", n.style.top = i + "px"; return n.style.width = Math.abs(s - o) + "px", n.style.left = o + "px", n }, this._gantt = e, this._view = n, this._viewPort = t.viewPort, this._el.classList.add(t.className), "function" == typeof t.callback && (this._callback = t.callback), this.render = function () { var e; (e = t.render ? t.render(a._startPoint, a._endPoint) : a.defaultRender(a._startPoint, a._endPoint)) !== a._el && (a._el && a._el.parentNode && a._el.parentNode.removeChild(a._el), a._el = e), "" !== t.className && a._el.classList.add(t.className), a.draw() }, r.isEventable(this._viewPort) || i(this._viewPort), this._singleRow = t.singleRow, this._useRequestAnimationFrame = t.useRequestAnimationFrame } return t.prototype.draw = function () { var t = this; if (this._useRequestAnimationFrame) return requestAnimationFrame(function () { t._viewPort.appendChild(t.getElement()) }); this._viewPort.appendChild(this.getElement()) }, t.prototype.clear = function () { var t = this; if (this._useRequestAnimationFrame) return requestAnimationFrame(function () { t._el.parentNode && t._viewPort.removeChild(t._el) }); this._el.parentNode && this._viewPort.removeChild(this._el) }, t.prototype.getElement = function () { return this._el }, t.prototype.getViewPort = function () { return this._viewPort }, t.prototype.setStart = function (t) { var e = this._gantt; this._startPoint = t, this._startDate = e.dateFromPos(this._startPoint.relative.left), this._viewPort.callEvent("onBeforeDrag", [this._startPoint]) }, t.prototype.setEnd = function (t) { var e = this._gantt; if (this._endPoint = t, this._singleRow) { var n = this._getTaskPositionByTop(this._startPoint.relative.top); this._endPoint.relative.top = n.top } this._endDate = e.dateFromPos(this._endPoint.relative.left), this._startPoint.relative.left > this._endPoint.relative.left && (this._positionPoint = { relative: { left: this._endPoint.relative.left, top: this._positionPoint.relative.top }, absolute: { left: this._endPoint.absolute.left, top: this._positionPoint.absolute.top } }), this._startPoint.relative.top > this._endPoint.relative.top && (this._positionPoint = { relative: { left: this._positionPoint.relative.left, top: this._endPoint.relative.top }, absolute: { left: this._positionPoint.absolute.left, top: this._endPoint.absolute.top } }), this._viewPort.callEvent("onDrag", [this._startPoint, this._endPoint]) }, t.prototype.setPosition = function (t) { this._positionPoint = t }, t.prototype.dragEnd = function (t) { var e, n = this._gantt; t.relative.left < 0 && (t.relative.left = 0), this._viewPort.callEvent("onBeforeDragEnd", [this._startPoint, t]), this.setEnd(t), this._endDate = this._endDate || n.getState().max_date, this._startDate.valueOf() > this._endDate.valueOf() && (e = [this._endDate, this._startDate], this._startDate = e[0], this._endDate = e[1]), this.clear(); var i = n.getTaskByTime(this._startDate, this._endDate), r = this._getTasksByTop(this._startPoint.relative.top, this._endPoint.relative.top); this._viewPort.callEvent("onDragEnd", [this._startPoint, this._endPoint]), this._callback && this._callback(this._startPoint, this._endPoint, this._startDate, this._endDate, i, r) }, t.prototype.getInBounds = function () { return this._singleRow }, t.prototype._getTasksByTop = function (t, e) { var n = this._gantt, i = t, r = e; t > e && (i = e, r = t); for (var a = this._getTaskPositionByTop(i).index, o = this._getTaskPositionByTop(r).index, s = [], l = a; l <= o; l++) { n.getTaskByIndex(l) && s.push(n.getTaskByIndex(l)) } return s }, t.prototype._getTaskPositionByTop = function (t) { var e = this._gantt, n = this._view, i = n.getItemIndexByTopPosition(t), r = e.getTaskByIndex(i); if (r) { var a = n.getItemHeight(r.id); return { top: n.getItemTop(r.id) || 0, height: a || 0, index: i } } var o = n.getTotalHeight(); return { top: t > o ? o : 0, height: e.config.row_height, index: t > o ? e.getTaskCount() : 0 } }, t }(); e.SelectedRegion = a }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }); var i = n(69); e.default = function (t) { t.ext || (t.ext = {}), t.ext.dragTimeline = { create: function () { return i.EventsManager.create(t) } }, t.config.drag_timeline = { enabled: !0 } } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.EventsManager = void 0; var i = function () { function t(t) { var e = this; this._mouseDown = !1, this._calculateDirectionVector = function () { if (e._trace.length >= 10) { for (var t = e._trace.slice(e._trace.length - 10), n = [], i = 1; i < t.length; i++)n.push({ x: t[i].x - t[i - 1].x, y: t[i].y - t[i - 1].y }); var r = { x: 0, y: 0 }; return n.forEach(function (t) { r.x += t.x, r.y += t.y }), { magnitude: Math.sqrt(r.x * r.x + r.y * r.y), angleDegrees: 180 * Math.atan2(Math.abs(r.y), Math.abs(r.x)) / Math.PI } } return null }, this._applyDndReadyStyles = function () { e._timeline.$task.classList.add("gantt_timeline_move_available") }, this._clearDndReadyStyles = function () { e._timeline.$task.classList.remove("gantt_timeline_move_available") }, this._getScrollPosition = function (t) { var n = e._gantt; return { x: n.$ui.getView(t.$config.scrollX).getScrollState().position, y: n.$ui.getView(t.$config.scrollY).getScrollState().position } }, this._countNewScrollPosition = function (t) { var n = e._calculateDirectionVector(), i = e._startPoint.x - t.x, r = e._startPoint.y - t.y; return n && (n.angleDegrees < 15 ? r = 0 : n.angleDegrees > 75 && (i = 0)), { x: e._scrollState.x + i, y: e._scrollState.y + r } }, this._setScrollPosition = function (t, n) { var i = e._gantt; requestAnimationFrame(function () { i.$ui.getView(t.$config.scrollX).scroll(n.x), i.$ui.getView(t.$config.scrollY).scroll(n.y) }) }, this._stopDrag = function (t) { var n = e._gantt; if (e._trace = [], n.$root.classList.remove("gantt_noselect"), void 0 !== e._originalReadonly && (n.config.readonly = e._originalReadonly), void 0 !== e._originAutoscroll && (n.config.autoscroll = e._originAutoscroll), n.config.drag_timeline) { var i = n.config.drag_timeline.useKey; if (i && !0 !== t[i]) return } e._mouseDown = !1 }, this._startDrag = function (t) { var n = e._gantt; e._originAutoscroll = n.config.autoscroll, n.config.autoscroll = !1, n.$root.classList.add("gantt_noselect"), e._originalReadonly = n.config.readonly, n.config.readonly = !0, e._trace = [], e._mouseDown = !0; var i = e._getScrollPosition(e._timeline), r = i.x, a = i.y; e._scrollState = { x: r, y: a }, e._startPoint = { x: t.clientX, y: t.clientY }, e._trace.push(e._startPoint) }, this._gantt = t, this._domEvents = t._createDomEventScope(), this._trace = [] } return t.create = function (e) { return new t(e) }, t.prototype.destructor = function () { this._domEvents.detachAll() }, t.prototype.attach = function (t) { var e = this; this._timeline = t; var n = this._gantt; this._domEvents.attach(t.$task, "mousedown", function (t) { if (n.config.drag_timeline) { var i = n.config.drag_timeline, r = i.useKey, a = i.ignore; if (!1 !== i.enabled) { var o = ".gantt_task_line, .gantt_task_link"; void 0 !== a && (o = a instanceof Array ? a.join(", ") : a), o && n.utils.dom.closest(t.target, o) || r && !0 !== t[r] || e._startDrag(t) } } }), this._domEvents.attach(document, "keydown", function (t) { if (n.config.drag_timeline) { var i = n.config.drag_timeline.useKey; i && !0 === t[i] && e._applyDndReadyStyles() } }), this._domEvents.attach(document, "keyup", function (t) { if (n.config.drag_timeline) { var i = n.config.drag_timeline.useKey; i && !1 === t[i] && (e._clearDndReadyStyles(), e._stopDrag(t)) } }), this._domEvents.attach(document, "mouseup", function (t) { e._stopDrag(t) }), this._domEvents.attach(n.$root, "mouseup", function (t) { e._stopDrag(t) }), this._domEvents.attach(document, "mouseleave", function (t) { e._stopDrag(t) }), this._domEvents.attach(n.$root, "mouseleave", function (t) { e._stopDrag(t) }), this._domEvents.attach(n.$root, "mousemove", function (i) { if (n.config.drag_timeline) { var r = n.config.drag_timeline.useKey; if (!r || !0 === i[r]) { var a = e._gantt.ext.clickDrag, o = (e._gantt.config.click_drag || {}).useKey; if ((!a || !o || r || !i[o]) && !0 === e._mouseDown) { e._trace.push({ x: i.clientX, y: i.clientY }); var s = e._countNewScrollPosition({ x: i.clientX, y: i.clientY }); e._setScrollPosition(t, s), e._scrollState = s, e._startPoint = { x: i.clientX, y: i.clientY } } } } }) }, t }(); e.EventsManager = i }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.default = function (t) { function e() { var t = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement; return !(!t || t !== document.body) } t.$services.getService("state").registerProvider("fullscreen", function () { return { fullscreen: e() } }); var n = { overflow: null, padding: null, paddingTop: null, paddingRight: null, paddingBottom: null, paddingLeft: null }, i = { width: null, height: null, top: null, left: null, position: null, zIndex: null, modified: !1 }, r = null; function a(t, e) { e.width = t.width, e.height = t.height, e.top = t.top, e.left = t.left, e.position = t.position, e.zIndex = t.zIndex } var o = !1; function s() { var s; t.$container && (e() ? o && (s = "onExpand", function () { var e = t.ext.fullscreen.getFullscreenElement(), o = document.body; a(e.style, i), n = { overflow: o.style.overflow, padding: o.style.padding ? o.style.padding : null, paddingTop: o.style.paddingTop ? o.style.paddingTop : null, paddingRight: o.style.paddingRight ? o.style.paddingRight : null, paddingBottom: o.style.paddingBottom ? o.style.paddingBottom : null, paddingLeft: o.style.paddingLeft ? o.style.paddingLeft : null }, o.style.padding && (o.style.padding = "0"), o.style.paddingTop && (o.style.paddingTop = "0"), o.style.paddingRight && (o.style.paddingRight = "0"), o.style.paddingBottom && (o.style.paddingBottom = "0"), o.style.paddingLeft && (o.style.paddingLeft = "0"), o.style.overflow = "hidden", e.style.width = "100vw", e.style.height = "100vh", e.style.top = "0px", e.style.left = "0px", e.style.position = "absolute", e.style.zIndex = 1, i.modified = !0, r = function (t) { for (var e = t.parentNode, n = []; e && e.style;)n.push({ element: e, originalPositioning: e.style.position }), e.style.position = "static", e = e.parentNode; return n }(e) }()) : o && (o = !1, s = "onCollapse", function () { var e = t.ext.fullscreen.getFullscreenElement(), o = document.body; i.modified && (n.padding && (o.style.padding = n.padding), n.paddingTop && (o.style.paddingTop = n.paddingTop), n.paddingRight && (o.style.paddingRight = n.paddingRight), n.paddingBottom && (o.style.paddingBottom = n.paddingBottom), n.paddingLeft && (o.style.paddingLeft = n.paddingLeft), o.style.overflow = n.overflow, n = { overflow: null, padding: null, paddingTop: null, paddingRight: null, paddingBottom: null, paddingLeft: null }, a(i, e.style), i.modified = !1), function (t) { t.forEach(function (t) { t.element.style.position = t.originalPositioning }) }(r), r = null }()), setTimeout(function () { t.render() }), setTimeout(function () { t.callEvent(s, [t.ext.fullscreen.getFullscreenElement()]) })) } function l() { return !(t.$container && t.ext.fullscreen.getFullscreenElement() && (document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled || ((console.warning || console.log)("The `fullscreen` feature not being allowed, or full-screen mode not being supported"), 0))) } t.ext.fullscreen = { expand: function () { if (!l() && !e() && t.callEvent("onBeforeExpand", [this.getFullscreenElement()])) { o = !0; var n = document.body, i = n.webkitRequestFullscreen ? [Element.ALLOW_KEYBOARD_INPUT] : [], r = n.msRequestFullscreen || n.mozRequestFullScreen || n.webkitRequestFullscreen || n.requestFullscreen; r && r.apply(n, i) } }, collapse: function () { if (!l() && e() && t.callEvent("onBeforeCollapse", [this.getFullscreenElement()])) { var n = document.msExitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen || document.exitFullscreen; n && n.apply(document) } }, toggle: function () { l() || (e() ? this.collapse() : this.expand()) }, getFullscreenElement: function () { return t.$root } }, t.expand = function () { t.ext.fullscreen.expand() }, t.collapse = function () { t.ext.fullscreen.collapse() }, t.attachEvent("onGanttReady", function () { t.event(document, "webkitfullscreenchange", s), t.event(document, "mozfullscreenchange", s), t.event(document, "MSFullscreenChange", s), t.event(document, "fullscreenChange", s), t.event(document, "fullscreenchange", s) }) } }, function (t, e, n) { t.exports = function (t) { var e = n(4); !function (t) { t.config.keyboard_navigation = !0, t.config.keyboard_navigation_cells = !1, t.$keyboardNavigation = {}, t._compose = function () { for (var t = Array.prototype.slice.call(arguments, 0), e = {}, n = 0; n < t.length; n++) { var i = t[n]; for (var r in "function" == typeof i && (i = new i), i) e[r] = i[r] } return e }, n(72)(t), n(73)(t), n(74)(t), n(75)(t), n(76)(t), n(77)(t), n(78)(t), n(79)(t), n(80)(t), n(81)(t); var i = n(1); !function () { var n = t.$keyboardNavigation.dispatcher; n.isTaskFocused = function (e) { var i = n.activeNode; return (i instanceof t.$keyboardNavigation.TaskRow || i instanceof t.$keyboardNavigation.TaskCell) && i.taskId == e }; var r = function (e) { if (t.config.keyboard_navigation && (t.config.keyboard_navigation_cells || !s(e))) return n.keyDownHandler(e) }, a = function (e) { if (n.$preventDefault) return e.preventDefault(), t.$container.blur(), !1; n.awaitsFocus() || n.focusGlobalNode() }, o = function () { if (n.isEnabled()) { var t = n.getActiveNode(); if (t) { var e, i, r = t.getNode(); r && r.parentNode && (e = r.parentNode.scrollTop, i = r.parentNode.scrollLeft), t.focus(!0), r && r.parentNode && (r.parentNode.scrollTop = e, r.parentNode.scrollLeft = i) } } }; function s(t) { return !!i.closest(t.target, ".gantt_grid_editor_placeholder") } function l(e) { if (!t.config.keyboard_navigation) return !0; if (!t.config.keyboard_navigation_cells && s(e)) return !0; var r, a = n.fromDomElement(e); a && (n.activeNode instanceof t.$keyboardNavigation.TaskCell && i.isChildOf(e.target, t.$task) && (a = new t.$keyboardNavigation.TaskCell(a.taskId, n.activeNode.columnIndex)), r = a), r ? n.isEnabled() ? n.delay(function () { n.setActiveNode(r) }) : n.activeNode = r : (n.$preventDefault = !0, setTimeout(function () { n.$preventDefault = !1 }, 300)) } t.attachEvent("onDataRender", function () { t.config.keyboard_navigation && o() }), t.attachEvent("onGanttRender", function () { t.eventRemove(t.$root, "keydown", r), t.eventRemove(t.$container, "focus", a), t.eventRemove(t.$container, "mousedown", l), t.config.keyboard_navigation ? (t.event(t.$root, "keydown", r), t.event(t.$container, "focus", a), t.event(t.$container, "mousedown", l), t.$container.setAttribute("tabindex", "0")) : t.$container.removeAttribute("tabindex") }); var c = t.attachEvent("onGanttReady", function () { if (t.detachEvent(c), t.$data.tasksStore.attachEvent("onStoreUpdated", function (e) { if (t.config.keyboard_navigation && n.isEnabled()) { var i = n.getActiveNode(); i && i.taskId == e && o() } }), t._smart_render) { var e = t._smart_render._redrawTasks; t._smart_render._redrawTasks = function (i, r) { if (t.config.keyboard_navigation && n.isEnabled()) { var a = n.getActiveNode(); if (a && void 0 !== a.taskId) { for (var o = !1, s = 0; s < r.length; s++)if (r[s].id == a.taskId && r[s].start_date) { o = !0; break } o || r.push(t.getTask(a.taskId)) } } return e.apply(this, arguments) } } }); t.attachEvent("onAfterTaskAdd", function (e, i) { if (!t.config.keyboard_navigation) return !0; if (n.isEnabled()) { var r = 0, a = n.activeNode; a instanceof t.$keyboardNavigation.TaskCell && (r = a.columnIndex); var o = t.config.keyboard_navigation_cells ? t.$keyboardNavigation.TaskCell : t.$keyboardNavigation.TaskRow; n.setActiveNode(new o(e, r)) } }), t.attachEvent("onTaskIdChange", function (e, i) { if (!t.config.keyboard_navigation) return !0; var r = n.activeNode; return n.isTaskFocused(e) && (r.taskId = i), !0 }); var u = setInterval(function () { t.config.keyboard_navigation && (n.isEnabled() || n.enable()) }, 500); function d(e) { var n = { gantt: t.$keyboardNavigation.GanttNode, headerCell: t.$keyboardNavigation.HeaderCell, taskRow: t.$keyboardNavigation.TaskRow, taskCell: t.$keyboardNavigation.TaskCell }; return n[e] || n.gantt } function h(e) { for (var n = t.getGridColumns(), i = 0; i < n.length; i++)if (n[i].name == e) return i; return 0 } t.attachEvent("onDestroy", function () { clearInterval(u) }); var f = {}; e(f), t.mixin(f, { addShortcut: function (t, e, n) { var i = d(n); i && i.prototype.bind(t, e) }, getShortcutHandler: function (e, n) { var i = t.$keyboardNavigation.shortcuts.parse(e); if (i.length) return f.getCommandHandler(i[0], n) }, getCommandHandler: function (t, e) { var n = d(e); if (n && t) return n.prototype.findHandler(t) }, removeShortcut: function (t, e) { var n = d(e); n && n.prototype.unbind(t) }, focus: function (t) { var e, i = t ? t.type : null, r = d(i); switch (i) { case "taskCell": e = new r(t.id, h(t.column)); break; case "taskRow": e = new r(t.id); break; case "headerCell": e = new r(h(t.column)) }n.delay(function () { e ? n.setActiveNode(e) : (n.enable(), n.getActiveNode() ? n.awaitsFocus() || n.enable() : n.setDefaultNode()) }) }, getActiveNode: function () { if (n.isEnabled()) { var e = n.getActiveNode(), i = function (e) { return e instanceof t.$keyboardNavigation.GanttNode ? "gantt" : e instanceof t.$keyboardNavigation.HeaderCell ? "headerCell" : e instanceof t.$keyboardNavigation.TaskRow ? "taskRow" : e instanceof t.$keyboardNavigation.TaskCell ? "taskCell" : null }(e), r = t.getGridColumns(); switch (i) { case "taskCell": return { type: "taskCell", id: e.taskId, column: r[e.columnIndex].name }; case "taskRow": return { type: "taskRow", id: e.taskId }; case "headerCell": return { type: "headerCell", column: r[e.index].name } } } return null } }), t.$keyboardNavigation.facade = f, t.ext.keyboardNavigation = f, t.focus = function () { f.focus() }, t.addShortcut = f.addShortcut, t.getShortcutHandler = f.getShortcutHandler, t.removeShortcut = f.removeShortcut }() }(t) } }, function (t, e) { t.exports = function (t) { t.$keyboardNavigation.shortcuts = { createCommand: function () { return { modifiers: { shift: !1, alt: !1, ctrl: !1, meta: !1 }, keyCode: null } }, parse: function (t) { for (var e = [], n = this.getExpressions(this.trim(t)), i = 0; i < n.length; i++) { for (var r = this.getWords(n[i]), a = this.createCommand(), o = 0; o < r.length; o++)this.commandKeys[r[o]] ? a.modifiers[r[o]] = !0 : this.specialKeys[r[o]] ? a.keyCode = this.specialKeys[r[o]] : a.keyCode = r[o].charCodeAt(0); e.push(a) } return e }, getCommandFromEvent: function (t) { var e = this.createCommand(); e.modifiers.shift = !!t.shiftKey, e.modifiers.alt = !!t.altKey, e.modifiers.ctrl = !!t.ctrlKey, e.modifiers.meta = !!t.metaKey, e.keyCode = t.which || t.keyCode, e.keyCode >= 96 && e.keyCode <= 105 && (e.keyCode -= 48); var n = String.fromCharCode(e.keyCode); return n && (e.keyCode = n.toLowerCase().charCodeAt(0)), e }, getHashFromEvent: function (t) { return this.getHash(this.getCommandFromEvent(t)) }, getHash: function (t) { var e = []; for (var n in t.modifiers) t.modifiers[n] && e.push(n); return e.push(t.keyCode), e.join(this.junctionChar) }, getExpressions: function (t) { return t.split(this.junctionChar) }, getWords: function (t) { return t.split(this.combinationChar) }, trim: function (t) { return t.replace(/\s/g, "") }, junctionChar: ",", combinationChar: "+", commandKeys: { shift: 16, alt: 18, ctrl: 17, meta: !0 }, specialKeys: { backspace: 8, tab: 9, enter: 13, esc: 27, space: 32, up: 38, down: 40, left: 37, right: 39, home: 36, end: 35, pageup: 33, pagedown: 34, delete: 46, insert: 45, plus: 107, f1: 112, f2: 113, f3: 114, f4: 115, f5: 116, f6: 117, f7: 118, f8: 119, f9: 120, f10: 121, f11: 122, f12: 123 } } } }, function (t, e) { t.exports = function (t) { t.$keyboardNavigation.EventHandler = { _handlers: null, findHandler: function (e) { this._handlers || (this._handlers = {}); var n = t.$keyboardNavigation.shortcuts.getHash(e); return this._handlers[n] }, doAction: function (e, n) { var i = this.findHandler(e); if (i) { if (!1 === t.$keyboardNavigation.facade.callEvent("onBeforeAction", [e, n])) return; i.call(this, n), n.preventDefault ? n.preventDefault() : n.returnValue = !1 } }, bind: function (e, n) { this._handlers || (this._handlers = {}); for (var i = t.$keyboardNavigation.shortcuts, r = i.parse(e), a = 0; a < r.length; a++)this._handlers[i.getHash(r[a])] = n }, unbind: function (e) { for (var n = t.$keyboardNavigation.shortcuts, i = n.parse(e), r = 0; r < i.length; r++)this._handlers[n.getHash(i[r])] && delete this._handlers[n.getHash(i[r])] }, bindAll: function (t) { for (var e in t) this.bind(e, t[e]) }, initKeys: function () { this._handlers || (this._handlers = {}), this.keys && this.bindAll(this.keys) } } } }, function (t, e, n) { t.exports = function (t) { !function () { var e = n(1); t.$keyboardNavigation.getFocusableNodes = e.getFocusableNodes, t.$keyboardNavigation.trapFocus = function (n, i) { if (9 != i.keyCode) return !1; for (var r = t.$keyboardNavigation.getFocusableNodes(n), a = e.getActiveElement(), o = -1, s = 0; s < r.length; s++)if (r[s] == a) { o = s; break } if (i.shiftKey) { if (o <= 0) { var l = r[r.length - 1]; if (l) return l.focus(), i.preventDefault(), !0 } } else if (o >= r.length - 1) { var c = r[0]; if (c) return c.focus(), i.preventDefault(), !0 } return !1 } }() } }, function (t, e) { t.exports = function (t) { t.$keyboardNavigation.GanttNode = function () { }, t.$keyboardNavigation.GanttNode.prototype = t._compose(t.$keyboardNavigation.EventHandler, { focus: function () { t.focus() }, blur: function () { }, isEnabled: function () { return t.$container.hasAttribute("tabindex") }, scrollHorizontal: function (e) { var n = t.dateFromPos(t.getScrollState().x), i = t.getScale(), r = e < 0 ? -i.step : i.step; n = t.date.add(n, r, i.unit), t.scrollTo(t.posFromDate(n)) }, scrollVertical: function (e) { var n = t.getScrollState().y, i = t.config.row_height; t.scrollTo(null, n + (e < 0 ? -1 : 1) * i) }, keys: { "alt+left": function (t) { this.scrollHorizontal(-1) }, "alt+right": function (t) { this.scrollHorizontal(1) }, "alt+up": function (t) { this.scrollVertical(-1) }, "alt+down": function (t) { this.scrollVertical(1) }, "ctrl+z": function () { t.undo && t.undo() }, "ctrl+r": function () { t.redo && t.redo() } } }), t.$keyboardNavigation.GanttNode.prototype.bindAll(t.$keyboardNavigation.GanttNode.prototype.keys) } }, function (t, e) { t.exports = function (t) { t.$keyboardNavigation.KeyNavNode = function () { }, t.$keyboardNavigation.KeyNavNode.prototype = t._compose(t.$keyboardNavigation.EventHandler, { isValid: function () { return !0 }, fallback: function () { return null }, moveTo: function (e) { t.$keyboardNavigation.dispatcher.setActiveNode(e) }, compareTo: function (t) { if (!t) return !1; for (var e in this) { if (!!this[e] != !!t[e]) return !1; var n = !(!this[e] || !this[e].toString), i = !(!t[e] || !t[e].toString); if (i != n) return !1; if (i && n) { if (t[e].toString() != this[e].toString()) return !1 } else if (t[e] != this[e]) return !1 } return !0 }, getNode: function () { }, focus: function () { var e = this.getNode(); if (e) { var n = t.$keyboardNavigation.facade; !1 !== n.callEvent("onBeforeFocus", [e]) && e && (e.setAttribute("tabindex", "-1"), e.$eventAttached || (e.$eventAttached = !0, t.event(e, "focus", function (t) { return t.preventDefault(), !1 }, !1)), e.focus && e.focus(), n.callEvent("onFocus", [this.getNode()])) } }, blur: function () { var e = this.getNode(); e && (t.$keyboardNavigation.facade.callEvent("onBlur", [e]), e.setAttribute("tabindex", "-1")) } }) } }, function (t, e, n) { t.exports = function (t) { var e = n(1); t.$keyboardNavigation.HeaderCell = function (t) { this.index = t || 0 }, t.$keyboardNavigation.HeaderCell.prototype = t._compose(t.$keyboardNavigation.KeyNavNode, { _handlers: null, isValid: function () { return !(!t.config.show_grid && t.getVisibleTaskCount()) && (!!t.getGridColumns()[this.index] || !t.getVisibleTaskCount()) }, fallback: function () { if (!t.config.show_grid) return t.getVisibleTaskCount() ? new t.$keyboardNavigation.TaskRow : null; for (var e = t.getGridColumns(), n = this.index; n >= 0 && !e[n];)n--; return e[n] ? new t.$keyboardNavigation.HeaderCell(n) : null }, fromDomElement: function (n) { var i = e.locateClassName(n, "gantt_grid_head_cell"); if (i) { for (var r = 0; i && i.previousSibling;)i = i.previousSibling, r += 1; return new t.$keyboardNavigation.HeaderCell(r) } return null }, getNode: function () { return t.$grid_scale.childNodes[this.index] }, keys: { left: function () { this.index > 0 && this.moveTo(new t.$keyboardNavigation.HeaderCell(this.index - 1)) }, right: function () { var e = t.getGridColumns(); this.index < e.length - 1 && this.moveTo(new t.$keyboardNavigation.HeaderCell(this.index + 1)) }, down: function () { var e, n = t.getChildren(t.config.root_id); t.isTaskExists(n[0]) && (e = n[0]), e && (t.config.keyboard_navigation_cells ? this.moveTo(new t.$keyboardNavigation.TaskCell(e, this.index)) : this.moveTo(new t.$keyboardNavigation.TaskRow(e))) }, end: function () { var e = t.getGridColumns(); this.moveTo(new t.$keyboardNavigation.HeaderCell(e.length - 1)) }, home: function () { this.moveTo(new t.$keyboardNavigation.HeaderCell(0)) }, "enter, space": function () { e.getActiveElement().click() }, "ctrl+enter": function () { t.isReadonly(this) || t.createTask({}, this.taskId) } } }), t.$keyboardNavigation.HeaderCell.prototype.bindAll(t.$keyboardNavigation.HeaderCell.prototype.keys) } }, function (t, e) { t.exports = function (t) { t.$keyboardNavigation.TaskRow = function (e) { if (!e) { var n = t.getChildren(t.config.root_id); n[0] && (e = n[0]) } this.taskId = e, t.isTaskExists(this.taskId) && (this.index = t.getTaskIndex(this.taskId)) }, t.$keyboardNavigation.TaskRow.prototype = t._compose(t.$keyboardNavigation.KeyNavNode, { _handlers: null, isValid: function () { return t.isTaskExists(this.taskId) && t.getTaskIndex(this.taskId) > -1 }, fallback: function () { if (!t.getVisibleTaskCount()) { var e = new t.$keyboardNavigation.HeaderCell; return e.isValid() ? e : null } var n = -1; if (t.getTaskByIndex(this.index - 1)) n = this.index - 1; else if (t.getTaskByIndex(this.index + 1)) n = this.index + 1; else for (var i = this.index; i >= 0;) { if (t.getTaskByIndex(i)) { n = i; break } i-- } if (n > -1) return new t.$keyboardNavigation.TaskRow(t.getTaskByIndex(n).id) }, fromDomElement: function (e) { if (t.config.keyboard_navigation_cells) return null; var n = t.locate(e); return t.isTaskExists(n) ? new t.$keyboardNavigation.TaskRow(n) : null }, getNode: function () { if (t.isTaskExists(this.taskId) && t.isTaskVisible(this.taskId)) return t.config.show_grid ? t.$grid.querySelector(".gantt_row[" + t.config.task_attribute + "='" + this.taskId + "']") : t.getTaskNode(this.taskId) }, focus: function (e) { if (!e) { var n, i, r = t.getTaskPosition(t.getTask(this.taskId)), a = t.getTaskHeight(this.taskId), o = t.getScrollState(); n = t.$task ? t.$task.offsetWidth : o.inner_width, i = t.$grid_data || t.$task_data ? (t.$grid_data || t.$task_data).offsetHeight : o.inner_height, r.top < o.y || r.top + a > o.y + i ? t.scrollTo(null, r.top - 5 * a) : t.config.scroll_on_click && t.config.show_chart && (r.left > o.x + n ? t.scrollTo(r.left - t.config.task_scroll_offset) : r.left + r.width < o.x && t.scrollTo(r.left + r.width - t.config.task_scroll_offset)) } t.$keyboardNavigation.KeyNavNode.prototype.focus.apply(this, [e]), function () { var e = t.$ui.getView("grid"), n = parseInt(e.$grid.scrollLeft), i = parseInt(e.$grid_data.scrollTop), r = e.$config.scrollX; if (r && e.$config.scrollable) { var a = t.$ui.getView(r); a && a.scrollTo(n, i) } var o = e.$config.scrollY; if (o) { var s = t.$ui.getView(o); s && s.scrollTo(n, i) } }() }, keys: { pagedown: function () { t.getVisibleTaskCount() && this.moveTo(new t.$keyboardNavigation.TaskRow(t.getTaskByIndex(t.getVisibleTaskCount() - 1).id)) }, pageup: function () { t.getVisibleTaskCount() && this.moveTo(new t.$keyboardNavigation.TaskRow(t.getTaskByIndex(0).id)) }, up: function () { var e = null, n = t.getPrev(this.taskId); e = t.isTaskExists(n) ? new t.$keyboardNavigation.TaskRow(n) : new t.$keyboardNavigation.HeaderCell, this.moveTo(e) }, down: function () { var e = t.getNext(this.taskId); t.isTaskExists(e) && this.moveTo(new t.$keyboardNavigation.TaskRow(e)) }, "shift+down": function () { t.hasChild(this.taskId) && !t.getTask(this.taskId).$open && t.open(this.taskId) }, "shift+up": function () { t.hasChild(this.taskId) && t.getTask(this.taskId).$open && t.close(this.taskId) }, "shift+right": function () { if (!t.isReadonly(this)) { var e = t.getPrevSibling(this.taskId); if (t.isTaskExists(e) && !t.isChildOf(this.taskId, e)) t.getTask(e).$open = !0, !1 !== t.moveTask(this.taskId, -1, e) && t.updateTask(this.taskId) } }, "shift+left": function () { if (!t.isReadonly(this)) { var e = t.getParent(this.taskId); if (t.isTaskExists(e)) !1 !== t.moveTask(this.taskId, t.getTaskIndex(e) + 1, t.getParent(e)) && t.updateTask(this.taskId) } }, space: function (e) { t.isSelectedTask(this.taskId) ? t.unselectTask(this.taskId) : t.selectTask(this.taskId) }, "ctrl+left": function (e) { t.close(this.taskId) }, "ctrl+right": function (e) { t.open(this.taskId) }, delete: function (e) { t.isReadonly(this) || t.$click.buttons.delete(this.taskId) }, enter: function () { t.isReadonly(this) || t.showLightbox(this.taskId) }, "ctrl+enter": function () { t.isReadonly(this) || t.createTask({}, this.taskId) } } }), t.$keyboardNavigation.TaskRow.prototype.bindAll(t.$keyboardNavigation.TaskRow.prototype.keys) } }, function (t, e, n) { t.exports = function (t) { var e = n(1), i = n(2).replaceValidZeroId; t.$keyboardNavigation.TaskCell = function (e, n) { if (!(e = i(e, t.config.root_id))) { var r = t.getChildren(t.config.root_id); r[0] && (e = r[0]) } this.taskId = e, this.columnIndex = n || 0, t.isTaskExists(this.taskId) && (this.index = t.getTaskIndex(this.taskId)) }, t.$keyboardNavigation.TaskCell.prototype = t._compose(t.$keyboardNavigation.TaskRow, { _handlers: null, isValid: function () { return t.$keyboardNavigation.TaskRow.prototype.isValid.call(this) && !!t.getGridColumns()[this.columnIndex] }, fallback: function () { var e = t.$keyboardNavigation.TaskRow.prototype.fallback.call(this), n = e; if (e instanceof t.$keyboardNavigation.TaskRow) { for (var i = t.getGridColumns(), r = this.columnIndex; r >= 0 && !i[r];)r--; i[r] && (n = new t.$keyboardNavigation.TaskCell(e.taskId, r)) } return n }, fromDomElement: function (n) { if (!t.config.keyboard_navigation_cells) return null; var i = t.locate(n); if (t.isTaskExists(i)) { var r = 0, a = e.locateAttribute(n, "data-column-index"); return a && (r = 1 * a.getAttribute("data-column-index")), new t.$keyboardNavigation.TaskCell(i, r) } return null }, getNode: function () { if (t.isTaskExists(this.taskId) && t.isTaskVisible(this.taskId)) { if (t.config.show_grid) { var e = t.$grid.querySelector(".gantt_row[" + t.config.task_attribute + "='" + this.taskId + "']"); return e ? e.querySelector("[data-column-index='" + this.columnIndex + "']") : null } return t.getTaskNode(this.taskId) } }, keys: { up: function () { var e = null, n = t.getPrev(this.taskId); e = t.isTaskExists(n) ? new t.$keyboardNavigation.TaskCell(n, this.columnIndex) : new t.$keyboardNavigation.HeaderCell(this.columnIndex), this.moveTo(e) }, down: function () { var e = t.getNext(this.taskId); t.isTaskExists(e) && this.moveTo(new t.$keyboardNavigation.TaskCell(e, this.columnIndex)) }, left: function () { this.columnIndex > 0 && this.moveTo(new t.$keyboardNavigation.TaskCell(this.taskId, this.columnIndex - 1)) }, right: function () { var e = t.getGridColumns(); this.columnIndex < e.length - 1 && this.moveTo(new t.$keyboardNavigation.TaskCell(this.taskId, this.columnIndex + 1)) }, end: function () { var e = t.getGridColumns(); this.moveTo(new t.$keyboardNavigation.TaskCell(this.taskId, e.length - 1)) }, home: function () { this.moveTo(new t.$keyboardNavigation.TaskCell(this.taskId, 0)) }, pagedown: function () { t.getVisibleTaskCount() && this.moveTo(new t.$keyboardNavigation.TaskCell(t.getTaskByIndex(t.getVisibleTaskCount() - 1).id, this.columnIndex)) }, pageup: function () { t.getVisibleTaskCount() && this.moveTo(new t.$keyboardNavigation.TaskCell(t.getTaskByIndex(0).id, this.columnIndex)) } } }), t.$keyboardNavigation.TaskCell.prototype.bindAll(t.$keyboardNavigation.TaskRow.prototype.keys), t.$keyboardNavigation.TaskCell.prototype.bindAll(t.$keyboardNavigation.TaskCell.prototype.keys) } }, function (t, e) { t.exports = function (t) { !function () { var e = []; function n() { return !!e.length } function i(e) { setTimeout(function () { n() || t.$destroyed || t.focus() }, 1) } function r(n) { t.eventRemove(n, "keydown", o), t.event(n, "keydown", o), e.push(n) } function a() { var n = e.pop(); n && t.eventRemove(n, "keydown", o), i() } function o(n) { var i = n.currentTarget; (function (t) { return t == e[e.length - 1] })(i) && t.$keyboardNavigation.trapFocus(i, n) } function s() { r(t.getLightbox()) } t.attachEvent("onLightbox", s), t.attachEvent("onAfterLightbox", a), t.attachEvent("onLightboxChange", function () { a(), s() }), t.attachEvent("onAfterQuickInfo", function () { i() }), t.attachEvent("onMessagePopup", function (e) { l = t.utils.dom.getActiveElement(), r(e) }), t.attachEvent("onAfterMessagePopup", function () { a(), setTimeout(function () { l && (l.focus(), l = null) }, 1) }); var l = null; t.$keyboardNavigation.isModal = n }() } }, function (t, e) { t.exports = function (t) { t.$keyboardNavigation.dispatcher = { isActive: !1, activeNode: null, globalNode: new t.$keyboardNavigation.GanttNode, enable: function () { this.isActive = !0, this.setActiveNode(this.getActiveNode()) }, disable: function () { this.isActive = !1 }, isEnabled: function () { return !!this.isActive }, getDefaultNode: function () { var e; return (e = t.config.keyboard_navigation_cells ? new t.$keyboardNavigation.TaskCell : new t.$keyboardNavigation.TaskRow).isValid() || (e = e.fallback()), e }, setDefaultNode: function () { this.setActiveNode(this.getDefaultNode()) }, getActiveNode: function () { var t = this.activeNode; return t && !t.isValid() && (t = t.fallback()), t }, fromDomElement: function (e) { for (var n = [t.$keyboardNavigation.TaskRow, t.$keyboardNavigation.TaskCell, t.$keyboardNavigation.HeaderCell], i = 0; i < n.length; i++)if (n[i].prototype.fromDomElement) { var r = n[i].prototype.fromDomElement(e); if (r) return r } return null }, focusGlobalNode: function () { this.blurNode(this.globalNode), this.focusNode(this.globalNode) }, setActiveNode: function (t) { var e = !0; this.activeNode && this.activeNode.compareTo(t) && (e = !1), this.isEnabled() && (e && this.blurNode(this.activeNode), this.activeNode = t, this.focusNode(this.activeNode, !e)) }, focusNode: function (t, e) { t && t.focus && t.focus(e) }, blurNode: function (t) { t && t.blur && t.blur() }, keyDownHandler: function (e) { if (!t.$keyboardNavigation.isModal() && this.isEnabled() && !e.defaultPrevented) { var n = this.globalNode, i = t.$keyboardNavigation.shortcuts.getCommandFromEvent(e), r = this.getActiveNode(); !1 !== t.$keyboardNavigation.facade.callEvent("onKeyDown", [i, e]) && (r ? r.findHandler(i) ? r.doAction(i, e) : n.findHandler(i) && n.doAction(i, e) : this.setDefaultNode()) } }, _timeout: null, awaitsFocus: function () { return null !== this._timeout }, delay: function (e, n) { clearTimeout(this._timeout), this._timeout = setTimeout(t.bind(function () { this._timeout = null, e() }, this), n || 1) }, clearDelay: function () { clearTimeout(this._timeout) } } } }, function (t, e) { t.exports = function (t) { function e(e) { if (!t.config.show_markers) return !1; if (!e.start_date) return !1; var n = t.getState(); if (!(+e.start_date > +n.max_date || (!e.end_date || +e.end_date < +n.min_date) && +e.start_date < +n.min_date)) { var i = document.createElement("div"); i.setAttribute("data-marker-id", e.id); var r = "gantt_marker"; t.templates.marker_class && (r += " " + t.templates.marker_class(e)), e.css && (r += " " + e.css), e.title && (i.title = e.title), i.className = r; var a = t.posFromDate(e.start_date); if (i.style.left = a + "px", i.style.height = Math.max(t.getRowTop(t.getVisibleTaskCount()), 0) + "px", e.end_date) { var o = t.posFromDate(e.end_date); i.style.width = Math.max(o - a, 0) + "px" } return e.text && (i.innerHTML = "<div class='gantt_marker_content' >" + e.text + "</div>"), i } } function n() { if (t.$task_data) { var e = document.createElement("div"); e.className = "gantt_marker_area", t.$task_data.appendChild(e), t.$marker_area = e } } t._markers || (t._markers = t.createDatastore({ name: "marker", initItem: function (e) { return e.id = e.id || t.uid(), e } })), t.config.show_markers = !0, t.attachEvent("onBeforeGanttRender", function () { t.$marker_area || n() }), t.attachEvent("onDataRender", function () { t.$marker_area || (n(), t.renderMarkers()) }), t.attachEvent("onGanttLayoutReady", function () { t.attachEvent("onBeforeGanttRender", function () { n(), t.$services.getService("layers").createDataRender({ name: "marker", defaultContainer: function () { return t.$marker_area } }).addLayer(e) }, { once: !0 }) }), t.getMarker = function (t) { return this._markers ? this._markers.getItem(t) : null }, t.addMarker = function (t) { return this._markers.addItem(t) }, t.deleteMarker = function (t) { return !!this._markers.exists(t) && (this._markers.removeItem(t), !0) }, t.updateMarker = function (t) { this._markers.refresh(t) }, t._getMarkers = function () { return this._markers.getItems() }, t.renderMarkers = function () { this._markers.refresh() } } }, function (t, e, n) { var i = n(2).replaceValidZeroId; t.exports = function (t) { t.config.multiselect = !0, t.config.multiselect_one_level = !1, t._multiselect = { _selected: {}, _one_level: !1, _active: !0, _first_selected_when_shift: null, getDefaultSelected: function () { var t = this.getSelected(); return t.length ? t[t.length - 1] : null }, setFirstSelected: function (t) { this._first_selected_when_shift = t }, getFirstSelected: function () { return this._first_selected_when_shift }, isActive: function () { return this.updateState(), this._active }, updateState: function () { this._one_level = t.config.multiselect_one_level; var e = this._active; this._active = t.config.select_task, this._active != e && this.reset() }, reset: function () { this._selected = {} }, setLastSelected: function (e) { t.$data.tasksStore.silent(function () { var n = t.$data.tasksStore; e ? n.select(e + "") : n.unselect(null) }) }, getLastSelected: function () { var e = t.$data.tasksStore.getSelectedId(); return e && t.isTaskExists(e) ? e : null }, select: function (e, n) { return !!(e && t.callEvent("onBeforeTaskMultiSelect", [e, !0, n]) && t.callEvent("onBeforeTaskSelected", [e])) && (this._selected[e] = !0, this.setLastSelected(e), this.afterSelect(e), t.callEvent("onTaskMultiSelect", [e, !0, n]), t.callEvent("onTaskSelected", [e]), !0) }, toggle: function (t, e) { this._selected[t] ? this.unselect(t, e) : this.select(t, e) }, unselect: function (e, n) { e && t.callEvent("onBeforeTaskMultiSelect", [e, !1, n]) && (this._selected[e] = !1, this.getLastSelected() == e && this.setLastSelected(this.getDefaultSelected()), this.afterSelect(e), t.callEvent("onTaskMultiSelect", [e, !1, n]), t.callEvent("onTaskUnselected", [e])) }, isSelected: function (e) { return !(!t.isTaskExists(e) || !this._selected[e]) }, getSelected: function () { var e = []; for (var n in this._selected) this._selected[n] && t.isTaskExists(n) ? e.push(n) : this._selected[n] = !1; return e.sort(function (e, n) { return t.getGlobalTaskIndex(e) > t.getGlobalTaskIndex(n) ? 1 : -1 }), e }, forSelected: function (t) { for (var e = this.getSelected(), n = 0; n < e.length; n++)t(e[n]) }, isSameLevel: function (e) { if (!this._one_level) return !0; var n = this.getLastSelected(); return !n || (!t.isTaskExists(n) || !t.isTaskExists(e) || !(t.calculateTaskLevel(t.getTask(n)) != t.calculateTaskLevel(t.getTask(e)))) }, afterSelect: function (e) { t.isTaskExists(e) && t._quickRefresh(function () { t.refreshTask(e) }) }, doSelection: function (e) { if (!this.isActive()) return !1; if (t._is_icon_open_click(e)) return !1; var n = t.locate(e); if (!n) return !1; if (!t.callEvent("onBeforeMultiSelect", [e])) return !1; var i = this.getSelected(), r = this.getFirstSelected(), a = !1, o = this.getLastSelected(), s = t.config.multiselect, l = function () { var r = t.ext.inlineEditors, a = r.getState(), o = r.locateCell(e.target); t.config.inline_editors_multiselect_open && o && r.getEditorConfig(o.columnName) && (r.isVisible() && a.id == o.id && a.columnName == o.columnName || r.startEdit(o.id, o.columnName)), this.setFirstSelected(n), this.isSelected(n) || this.select(n, e), i = this.getSelected(); for (var s = 0; s < i.length; s++)i[s] !== n && this.unselect(i[s], e) }.bind(this), c = function () { if (o) { if (n) { for (var i = t.getGlobalTaskIndex(this.getFirstSelected()), s = t.getGlobalTaskIndex(n), l = t.getGlobalTaskIndex(o), c = o; t.getGlobalTaskIndex(c) !== i;)this.unselect(c, e), c = i > l ? t.getNext(c) : t.getPrev(c); for (c = n; t.getGlobalTaskIndex(c) !== i;)this.select(c, e) && !a && (a = !0, r = c), c = i > s ? t.getNext(c) : t.getPrev(c) } } else o = n }.bind(this); return s && (e.ctrlKey || e.metaKey) ? (this.isSelected(n) || this.setFirstSelected(n), n && this.toggle(n, e)) : s && e.shiftKey ? (t.isTaskExists(this.getFirstSelected()) && null !== this.getFirstSelected() || this.setFirstSelected(n), i.length ? c() : l()) : l(), this.isSelected(n) ? this.setLastSelected(n) : r ? n == o && this.setLastSelected(e.shiftKey ? r : this.getDefaultSelected()) : this.setLastSelected(null), this.getSelected().length || this.setLastSelected(null), this.getLastSelected() && this.isSelected(this.getFirstSelected()) || this.setFirstSelected(this.getLastSelected()), !0 } }, function () { var e = t.selectTask; t.selectTask = function (n) { if (!(n = i(n, this.config.root_id))) return !1; var r = t._multiselect, a = n; return r.isActive() ? (r.select(n, null) && r.setLastSelected(n), r.setFirstSelected(r.getLastSelected())) : a = e.call(this, n), a }; var n = t.unselectTask; t.unselectTask = function (e) { var i = t._multiselect, r = i.isActive(); (e = e || i.getLastSelected()) && r && (i.unselect(e, null), e == i.getLastSelected() && i.setLastSelected(null), t.refreshTask(e), i.setFirstSelected(i.getLastSelected())); var a = e; return r || (a = n.call(this, e)), a }, t.toggleTaskSelection = function (e) { var n = t._multiselect; e && n.isActive() && (n.toggle(e), n.setFirstSelected(n.getLastSelected())) }, t.getSelectedTasks = function () { var e = t._multiselect; return e.isActive(), e.getSelected() }, t.eachSelectedTask = function (t) { return this._multiselect.forSelected(t) }, t.isSelectedTask = function (t) { return this._multiselect.isSelected(t) }, t.getLastSelectedTask = function () { return this._multiselect.getLastSelected() }, t.attachEvent("onGanttReady", function () { var e = t.$data.tasksStore.isSelected; t.$data.tasksStore.isSelected = function (n) { return t._multiselect.isActive() ? t._multiselect.isSelected(n) : e.call(this, n) } }) }(), t.attachEvent("onTaskIdChange", function (e, n) { var i = t._multiselect; if (!i.isActive()) return !0; t.isSelectedTask(e) && (i.unselect(e, null), i.select(n, null)) }), t.attachEvent("onAfterTaskDelete", function (e, n) { var i = t._multiselect; if (!i.isActive()) return !0; i._selected[e] && (i.unselect(e, null), i._selected[e] = !1, i.setLastSelected(i.getDefaultSelected())), i.forSelected(function (e) { t.isTaskExists(e) || i.unselect(e, null) }) }), t.attachEvent("onBeforeTaskMultiSelect", function (e, n, i) { var r = t._multiselect; return !(n && r.isActive() && r._one_level) || r.isSameLevel(e) }), t.attachEvent("onTaskClick", function (e, n) { return t._multiselect.doSelection(n) && t.callEvent("onMultiSelect", [n]), !0 }) } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }); var i = n(85); e.default = function (t) { t.ext || (t.ext = {}), t.ext.quickInfo = new i.QuickInfo(t), t.config.quickinfo_buttons = ["icon_delete", "icon_edit"], t.config.quick_info_detached = !0, t.config.show_quick_info = !0, t.templates.quick_info_title = function (t, e, n) { return n.text.substr(0, 50) }, t.templates.quick_info_content = function (t, e, n) { return n.details || n.text }, t.templates.quick_info_date = function (e, n, i) { return t.templates.task_time(e, n, i) }, t.templates.quick_info_class = function (t, e, n) { return "" }, t.attachEvent("onTaskClick", function (e, n) { return t.utils.dom.closest(n.target, ".gantt_add") || setTimeout(function () { t.ext.quickInfo.show(e) }, 0), !0 }); for (var e = ["onViewChange", "onLightbox", "onBeforeTaskDelete", "onBeforeDrag"], n = function () { return t.ext.quickInfo.hide(), !0 }, r = 0; r < e.length; r++)t.attachEvent(e[r], n); function a() { return t.ext.quickInfo.hide(), t.ext.quickInfo._quickInfoBox = null, !0 } t.attachEvent("onEmptyClick", function (e) { var i = !0, r = document.querySelector(".gantt_cal_quick_info"); r && t.utils.dom.isChildOf(e.target, r) && (i = !1), i && n() }), t.attachEvent("onGanttReady", a), t.attachEvent("onDestroy", a), t.event(window, "keydown", function (e) { 27 === e.keyCode && t.ext.quickInfo.hide() }) } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.QuickInfo = void 0; var i = function () { function t(t) { var e = this; this.show = function (t, n) { void 0 === n ? e._showForTask(t) : e._showAtCoordinates(t, n) }, this.hide = function (t) { var n = e._gantt, i = e._quickInfoBox; e._quickInfoBoxId = 0; var r = e._quickInfoTask; if (e._quickInfoTask = null, i && i.parentNode) { if (n.config.quick_info_detached) return n.callEvent("onAfterQuickInfo", [r]), i.parentNode.removeChild(i); i.className += " gantt_qi_hidden", "auto" === i.style.right ? i.style.left = "-350px" : i.style.right = "-350px", t && (i.style.left = i.style.right = "", i.parentNode.removeChild(i)), n.callEvent("onAfterQuickInfo", [r]) } }, this.getNode = function () { return e._quickInfoBox ? e._quickInfoBox : null }, this.setContainer = function (t) { t && (e._container = "string" == typeof t ? document.getElementById(t) : t) }, this.setContent = function (t) { var n = e._gantt, i = { taskId: null, header: { title: "", date: "" }, content: "", buttons: n.config.quickinfo_buttons }; t || (t = i), t.taskId || (t.taskId = i.taskId), t.header || (t.header = i.header), t.header.title || (t.header.title = i.header.title), t.header.date || (t.header.date = i.header.date), t.content || (t.content = i.content), t.buttons || (t.buttons = i.buttons); var r = e.getNode(); r || (r = e._createQuickInfoElement()), t.taskId && (e._quickInfoBoxId = t.taskId); var a = r.querySelector(".gantt_cal_qi_title"), o = a.querySelector(".gantt_cal_qi_tcontent"), s = a.querySelector(".gantt_cal_qi_tdate"), l = r.querySelector(".gantt_cal_qi_content"), c = r.querySelector(".gantt_cal_qi_controls"); n._waiAria.quickInfoHeader(r, [t.header.title, t.header.date].join(" ")), o.innerHTML = t.header.title, s.innerHTML = t.header.date, t.header.title || t.header.date ? a.style.display = "" : a.style.display = "none", l.innerHTML = t.content; var u = t.buttons; u.length ? c.style.display = "" : c.style.display = "none"; for (var d = "", h = 0; h < u.length; h++) { var f = n._waiAria.quickInfoButtonAttrString(n.locale.labels[u[h]]); d += '<div class="gantt_qi_big_icon ' + u[h] + '" title="' + n.locale.labels[u[h]] + '" ' + f + "><div class='gantt_menu_icon " + u[h] + "'></div><div>" + n.locale.labels[u[h]] + "</div></div>" } c.innerHTML = d, n.eventRemove(r, "click", e._qiButtonClickHandler), n.eventRemove(r, "keypress", e._qiKeyPressHandler), n.event(r, "click", e._qiButtonClickHandler), n.event(r, "keypress", e._qiKeyPressHandler) }, this._qiButtonClickHandler = function (t) { t = t || event, e._qi_button_click(t.target || t.srcElement) }, this._qiKeyPressHandler = function (t) { var n = (t = t || event).which || event.keyCode; 13 !== n && 32 !== n || setTimeout(function () { e._qi_button_click(t.target || t.srcElement) }, 1) }, this._gantt = t } return t.prototype._showAtCoordinates = function (t, e) { this.hide(!0), this._quickInfoBoxId = 0, this._quickInfoTask = null, this._quickInfoBox || (this._createQuickInfoElement(), this.setContent()), this._appendAtCoordinates(t, e), this._gantt.callEvent("onQuickInfo", [null]) }, t.prototype._showForTask = function (t) { var e = this._gantt; if ((t !== this._quickInfoBoxId || !e.utils.dom.isChildOf(this._quickInfoBox, document.body)) && e.config.show_quick_info) { this.hide(!0); var n = this._getContainer(), i = this._get_event_counter_part(t, 6, n.xViewport, n.yViewport); i && (this._quickInfoBox = this._init_quick_info(t), this._quickInfoTask = t, this._quickInfoBox.className = this._prepare_quick_info_classname(t), this._fill_quick_data(t), this._show_quick_info(i, 6), e.callEvent("onQuickInfo", [t])) } }, t.prototype._get_event_counter_part = function (t, e, n, i) { var r = this._gantt, a = r.getTaskNode(t); if (!a && !(a = r.getTaskRowNode(t))) return null; var o = 0, s = e + a.offsetTop + a.offsetHeight, l = a; if (r.utils.dom.isChildOf(l, n)) for (; l && l !== n;)o += l.offsetLeft, l = l.offsetParent; var c = r.getScrollState(); return l ? { left: o, top: s, dx: o + a.offsetWidth / 2 - c.x > n.offsetWidth / 2 ? 1 : 0, dy: s + a.offsetHeight / 2 - c.y > i.offsetHeight / 2 ? 1 : 0, width: a.offsetWidth, height: a.offsetHeight } : null }, t.prototype._createQuickInfoElement = function () { var t = this, e = this._gantt, n = document.createElement("div"); n.className += "gantt_cal_quick_info", e._waiAria.quickInfoAttr(n); var i = '<div class="gantt_cal_qi_title" ' + e._waiAria.quickInfoHeaderAttrString() + '><div class="gantt_cal_qi_tcontent"></div><div  class="gantt_cal_qi_tdate"></div></div><div class="gantt_cal_qi_content"></div>'; if (i += '<div class="gantt_cal_qi_controls">', i += "</div>", n.innerHTML = i, e.config.quick_info_detached) { var r = this._getContainer(); e.event(r.parent, "scroll", function () { t.hide() }) } return this._quickInfoBox = n, n }, t.prototype._init_quick_info = function (t) { var e = this._gantt, n = e.getTask(t); return "boolean" == typeof this._quickInfoReadonly && e.isReadonly(n) !== this._quickInfoReadonly && (this.hide(!0), this._quickInfoBox = null), this._quickInfoReadonly = e.isReadonly(n), this._quickInfoBox || (this._quickInfoBox = this._createQuickInfoElement()), this._quickInfoBox }, t.prototype._prepare_quick_info_classname = function (t) { var e = this._gantt, n = e.getTask(t), i = "gantt_cal_quick_info", r = e.templates.quick_info_class(n.start_date, n.end_date, n); return r && (i += " " + r), i }, t.prototype._fill_quick_data = function (t) { var e = this._gantt, n = e.getTask(t); this._quickInfoBoxId = t; var i = []; if (this._quickInfoReadonly) for (var r = e.config.quickinfo_buttons, a = { icon_delete: !0, icon_edit: !0 }, o = 0; o < r.length; o++)this._quickInfoReadonly && a[r[o]] || i.push(r[o]); else i = e.config.quickinfo_buttons; this.setContent({ header: { title: e.templates.quick_info_title(n.start_date, n.end_date, n), date: e.templates.quick_info_date(n.start_date, n.end_date, n) }, content: e.templates.quick_info_content(n.start_date, n.end_date, n), buttons: i }) }, t.prototype._appendAtCoordinates = function (t, e) { var n = this._quickInfoBox, i = this._getContainer(); n.parentNode && "#document-fragment" !== n.parentNode.nodeName.toLowerCase() || i.parent.appendChild(n), n.style.left = t + "px", n.style.top = e + "px" }, t.prototype._show_quick_info = function (t, e) { var n = this._gantt, i = this._quickInfoBox; if (n.config.quick_info_detached) { var r = this._getContainer(); i.parentNode && "#document-fragment" !== i.parentNode.nodeName.toLowerCase() || r.parent.appendChild(i); var a = i.offsetWidth, o = i.offsetHeight, s = n.getScrollState(), l = r.xViewport, c = r.yViewport, u = l.offsetWidth + s.x - a, d = t.top - s.y + o, h = t.top; d > c.offsetHeight / 2 && (h = t.top - (o + t.height + 2 * e)) < s.y && d <= c.offsetHeight && (h = t.top), h < s.y && (h = s.y); var f = Math.min(Math.max(s.x, t.left - t.dx * (a - t.width)), u), _ = h; this._appendAtCoordinates(f, _) } else i.style.top = "20px", 1 === t.dx ? (i.style.right = "auto", i.style.left = "-300px", setTimeout(function () { i.style.left = "10px" }, 1)) : (i.style.left = "auto", i.style.right = "-300px", setTimeout(function () { i.style.right = "10px" }, 1)), i.className += " gantt_qi_" + (1 === t.dx ? "left" : "right"), n.$root.appendChild(i) }, t.prototype._qi_button_click = function (t) { var e = this._gantt, n = this._quickInfoBox; if (t && t !== n) { var i = t.className; if (-1 !== i.indexOf("_icon")) { var r = this._quickInfoBoxId; e.$click.buttons[i.split(" ")[1].replace("icon_", "")](r) } else this._qi_button_click(t.parentNode) } }, t.prototype._getContainer = function () { var t = this._gantt, e = this._container ? this._container : t.$task_data; return e && e.offsetHeight && e.offsetWidth ? { parent: e, xViewport: t.$task, yViewport: t.$task_data } : (e = this._container ? this._container : t.$grid_data) && e.offsetHeight && e.offsetWidth ? { parent: e, xViewport: t.$grid, yViewport: t.$grid_data } : { parent: this._container ? this._container : t.$layout, xViewport: t.$layout, yViewport: t.$layout } }, t }(); e.QuickInfo = i }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }); var i = n(87); e.default = function (t) { t.config.tooltip_timeout = 30, t.config.tooltip_offset_y = 20, t.config.tooltip_offset_x = 10, t.config.tooltip_hide_timeout = 30; var e = new i.TooltipManager(t); t.ext.tooltips = e, t.attachEvent("onGanttReady", function () { e.tooltipFor({ selector: "[" + t.config.task_attribute + "]:not(.gantt_task_row)", html: function (e) { if (!t.config.touch || t.config.touch_tooltip) { var n = t.locate(e); if (t.isTaskExists(n)) { var i = t.getTask(n); return t.templates.tooltip_text(i.start_date, i.end_date, i) } return null } }, global: !1 }) }), t.attachEvent("onDestroy", function () { e.destructor() }), t.attachEvent("onLightbox", function () { e.hideTooltip() }), t.attachEvent("onBeforeTooltip", function () { if (t.getState().link_source_id) return !1 }), t.attachEvent("onGanttScroll", function () { e.hideTooltip() }) } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.TooltipManager = void 0; var i = n(29), r = n(1), a = n(2), o = n(88), s = function () { function t(t) { this._listeners = {}, this.tooltip = new o.Tooltip(t), this._gantt = t, this._domEvents = i(), this._initDelayedFunctions() } return t.prototype.destructor = function () { this.tooltip.hide(), this._domEvents.detachAll() }, t.prototype.hideTooltip = function () { this.delayHide() }, t.prototype.attach = function (t) { var e = this, n = document.body, i = this._gantt; t.global || (n = i.$root); var a = null, o = function (n) { var i = r.getTargetNode(n), o = r.closest(i, t.selector); if (!r.isChildOf(i, e.tooltip.getNode())) { var s = function () { a = o, t.onmouseenter(n, o) }; a ? o && o === a ? t.onmousemove(n, o) : (t.onmouseleave(n, a), a = null, o && o !== a && s()) : o && s() } }; this.detach(t.selector), this._domEvents.attach(n, "mousemove", o), this._listeners[t.selector] = { node: n, handler: o } }, t.prototype.detach = function (t) { var e = this._listeners[t]; e && this._domEvents.detach(e.node, "mousemove", e.handler) }, t.prototype.tooltipFor = function (t) { var e = this, n = function (t) { var e = t; return document.createEventObject && !document.createEvent && (e = document.createEventObject(t)), e }; this._initDelayedFunctions(), this.attach({ selector: t.selector, global: t.global, onmouseenter: function (i, r) { var a = t.html(i, r); a && e.delayShow(n(i), a) }, onmousemove: function (i, r) { var a = t.html(i, r); a ? e.delayShow(n(i), a) : (e.delayShow.$cancelTimeout(), e.delayHide()) }, onmouseleave: function () { e.delayShow.$cancelTimeout(), e.delayHide() } }) }, t.prototype._initDelayedFunctions = function () { var t = this, e = this._gantt; this.delayShow && this.delayShow.$cancelTimeout(), this.delayHide && this.delayHide.$cancelTimeout(), this.tooltip.hide(), this.delayShow = a.delay(function (n, i) { !1 === e.callEvent("onBeforeTooltip", [n]) ? t.tooltip.hide() : (t.tooltip.setContent(i), t.tooltip.show(n)) }, e.config.tooltip_timeout || 1), this.delayHide = a.delay(function () { t.delayShow.$cancelTimeout(), t.tooltip.hide() }, e.config.tooltip_hide_timeout || 1) }, t }(); e.TooltipManager = s }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.Tooltip = void 0; var i = n(1), r = function () { function t(t) { this._gantt = t } return t.prototype.getNode = function () { var t = this._gantt; return this._tooltipNode || (this._tooltipNode = document.createElement("div"), this._tooltipNode.className = "gantt_tooltip", t._waiAria.tooltipAttr(this._tooltipNode)), this._tooltipNode }, t.prototype.setViewport = function (t) { return this._root = t, this }, t.prototype.show = function (t, e) { var n = this._gantt, r = document.body, a = this.getNode(); if (i.isChildOf(a, r) || (this.hide(), r.appendChild(a)), this._isLikeMouseEvent(t)) { var o = this._calculateTooltipPosition(t); e = o.top, t = o.left } return a.style.top = e + "px", a.style.left = t + "px", n._waiAria.tooltipVisibleAttr(a), this }, t.prototype.hide = function () { var t = this._gantt, e = this.getNode(); return e && e.parentNode && e.parentNode.removeChild(e), t._waiAria.tooltipHiddenAttr(e), this }, t.prototype.setContent = function (t) { return this.getNode().innerHTML = t, this }, t.prototype._isLikeMouseEvent = function (t) { return !(!t || "object" != typeof t) && ("clientX" in t && "clientY" in t) }, t.prototype._getViewPort = function () { return this._root || document.body }, t.prototype._calculateTooltipPosition = function (t) { var e = this._gantt, n = this._getViewPortSize(), r = this.getNode(), a = { top: 0, left: 0, width: r.offsetWidth, height: r.offsetHeight, bottom: 0, right: 0 }, o = e.config.tooltip_offset_x, s = e.config.tooltip_offset_y, l = document.body, c = i.getRelativeEventPosition(t, l), u = i.getNodePosition(l); c.y += u.y, a.top = c.y, a.left = c.x, a.top += s, a.left += o, a.bottom = a.top + a.height, a.right = a.left + a.width; var d = window.scrollY + l.scrollTop; return a.top < n.top - d ? (a.top = n.top, a.bottom = a.top + a.height) : a.bottom > n.bottom && (a.bottom = n.bottom, a.top = a.bottom - a.height), a.left < n.left ? (a.left = n.left, a.right = n.left + a.width) : a.right > n.right && (a.right = n.right, a.left = a.right - a.width), c.x >= a.left && c.x <= a.right && (a.left = c.x - a.width - o, a.right = a.left + a.width), c.y >= a.top && c.y <= a.bottom && (a.top = c.y - a.height - s, a.bottom = a.top + a.height), a }, t.prototype._getViewPortSize = function () { var t, e = this._gantt, n = this._getViewPort(), r = n, a = window.scrollY + document.body.scrollTop, o = window.scrollX + document.body.scrollLeft; return n === e.$task_data ? (r = e.$task, a = 0, o = 0, t = i.getNodePosition(e.$task)) : t = i.getNodePosition(r), { left: t.x + o, top: t.y + a, width: t.width, height: t.height, bottom: t.y + t.height + a, right: t.x + t.width + o } }, t }(); e.Tooltip = r }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }); var i = n(90), r = n(91); e.default = function (t) { var e = new r.Undo(t), n = new i.Monitor(e, t); function a(t, e, n) { t && (t.id === e && (t.id = n), t.parent === e && (t.parent = n)) } function o(t, e, n) { a(t.value, e, n), a(t.oldValue, e, n) } function s(t, e, n) { t && (t.source === e && (t.source = n), t.target === e && (t.target = n)) } function l(t, e, n) { s(t.value, e, n), s(t.oldValue, e, n) } function c(t, n, i) { for (var r = e, a = 0; a < t.length; a++)for (var s = t[a], c = 0; c < s.commands.length; c++)s.commands[c].entity === r.command.entity.task ? o(s.commands[c], n, i) : s.commands[c].entity === r.command.entity.link && l(s.commands[c], n, i) } function u(t, n, i) { for (var r = e, a = 0; a < t.length; a++)for (var o = t[a], s = 0; s < o.commands.length; s++) { var l = o.commands[s]; l.entity === r.command.entity.link && (l.value && l.value.id === n && (l.value.id = i), l.oldValue && l.oldValue.id === n && (l.oldValue.id = i)) } } t.config.undo = !0, t.config.redo = !0, t.config.undo_types = { link: "link", task: "task" }, t.config.undo_actions = { update: "update", remove: "remove", add: "add", move: "move" }, t.ext || (t.ext = {}), t.ext.undo = { undo: function () { return e.undo() }, redo: function () { return e.redo() }, getUndoStack: function () { return e.getUndoStack() }, getRedoStack: function () { return e.getRedoStack() }, clearUndoStack: function () { return e.clearUndoStack() }, clearRedoStack: function () { return e.clearRedoStack() }, saveState: function (t, e) { return n.store(t, e, !0) } }, t.undo = t.ext.undo.undo, t.redo = t.ext.undo.redo, t.getUndoStack = t.ext.undo.getUndoStack, t.getRedoStack = t.ext.undo.getRedoStack, t.clearUndoStack = t.ext.undo.clearUndoStack, t.clearRedoStack = t.ext.undo.clearRedoStack, t.attachEvent("onTaskIdChange", function (t, n) { var i = e; c(i.getUndoStack(), t, n), c(i.getRedoStack(), t, n) }), t.attachEvent("onLinkIdChange", function (t, n) { var i = e; u(i.getUndoStack(), t, n), u(i.getRedoStack(), t, n) }), t.attachEvent("onGanttReady", function () { e.updateConfigs() }) } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.Monitor = void 0; var i = { onBeforeUndo: "onAfterUndo", onBeforeRedo: "onAfterRedo" }, r = ["onTaskDragStart", "onAfterTaskUpdate", "onAfterTaskDelete", "onBeforeBatchUpdate"], a = function () { function t(t, e) { this._batchAction = null, this._batchMode = !1, this._ignore = !1, this._ignoreMoveEvents = !1, this._initialTasks = {}, this._initialLinks = {}, this._nestedTasks = {}, this._nestedLinks = {}, this._undo = t, this._gantt = e, this._attachEvents() } return t.prototype.store = function (t, e, n) { return void 0 === n && (n = !1), e === this._gantt.config.undo_types.task ? this._storeTask(t, n) : e === this._gantt.config.undo_types.link && this._storeLink(t, n) }, t.prototype.isMoveEventsIgnored = function () { return this._ignoreMoveEvents }, t.prototype.toggleIgnoreMoveEvents = function (t) { this._ignoreMoveEvents = t || !1 }, t.prototype.startIgnore = function () { this._ignore = !0 }, t.prototype.stopIgnore = function () { this._ignore = !1 }, t.prototype.startBatchAction = function () { var t = this; this._timeout || (this._timeout = setTimeout(function () { t.stopBatchAction(), t._timeout = null }, 10)), this._ignore || this._batchMode || (this._batchMode = !0, this._batchAction = this._undo.action.create()) }, t.prototype.stopBatchAction = function () { if (!this._ignore) { var t = this._undo; this._batchAction && t.logAction(this._batchAction), this._batchMode = !1, this._batchAction = null } }, t.prototype.onTaskAdded = function (t) { this._ignore || this._storeTaskCommand(t, this._undo.command.type.add) }, t.prototype.onTaskUpdated = function (t) { this._ignore || this._storeTaskCommand(t, this._undo.command.type.update) }, t.prototype.onTaskMoved = function (t) { if (!this._ignore) { t.$local_index = this._gantt.getTaskIndex(t.id); var e = this.getInitialTask(t.id); if (t.$local_index === e.$local_index && this._gantt.getParent(t) === this._gantt.getParent(e)) return; this._storeEntityCommand(t, this.getInitialTask(t.id), this._undo.command.type.move, this._undo.command.entity.task) } }, t.prototype.onTaskDeleted = function (t) { if (!this._ignore) { if (this._storeTaskCommand(t, this._undo.command.type.remove), this._nestedTasks[t.id]) for (var e = this._nestedTasks[t.id], n = 0; n < e.length; n++)this._storeTaskCommand(e[n], this._undo.command.type.remove); if (this._nestedLinks[t.id]) { var i = this._nestedLinks[t.id]; for (n = 0; n < i.length; n++)this._storeLinkCommand(i[n], this._undo.command.type.remove) } } }, t.prototype.onLinkAdded = function (t) { this._ignore || this._storeLinkCommand(t, this._undo.command.type.add) }, t.prototype.onLinkUpdated = function (t) { this._ignore || this._storeLinkCommand(t, this._undo.command.type.update) }, t.prototype.onLinkDeleted = function (t) { this._ignore || this._storeLinkCommand(t, this._undo.command.type.remove) }, t.prototype.setNestedTasks = function (t, e) { for (var n = this._gantt, i = null, r = [], a = this._getLinks(n.getTask(t)), o = 0; o < e.length; o++)i = this.setInitialTask(e[o]), a = a.concat(this._getLinks(i)), r.push(i); var s = {}; for (o = 0; o < a.length; o++)s[a[o]] = !0; var l = []; for (var o in s) l.push(this.setInitialLink(o)); this._nestedTasks[t] = r, this._nestedLinks[t] = l }, t.prototype.setInitialTask = function (t, e) { var n = this._gantt; if (e || !this._initialTasks[t] || !this._batchMode) { var i = n.copy(n.getTask(t)); i.$index = n.getGlobalTaskIndex(t), i.$local_index = n.getTaskIndex(t), this.setInitialTaskObject(t, i) } return this._initialTasks[t] }, t.prototype.getInitialTask = function (t) { return this._initialTasks[t] }, t.prototype.clearInitialTasks = function () { this._initialTasks = {} }, t.prototype.setInitialTaskObject = function (t, e) { this._initialTasks[t] = e }, t.prototype.setInitialLink = function (t, e) { return this._initialLinks[t] && this._batchMode || (this._initialLinks[t] = this._gantt.copy(this._gantt.getLink(t))), this._initialLinks[t] }, t.prototype.getInitialLink = function (t) { return this._initialLinks[t] }, t.prototype.clearInitialLinks = function () { this._initialLinks = {} }, t.prototype._attachEvents = function () { var t = this, e = null, n = this._gantt, a = function () { e || (e = setTimeout(function () { e = null }), t.clearInitialTasks(), n.eachTask(function (e) { t.setInitialTask(e.id) }), t.clearInitialLinks(), n.getLinks().forEach(function (e) { t.setInitialLink(e.id) })) }, o = function (t) { return n.copy(n.getTask(t)) }; for (var s in i) n.attachEvent(s, function () { return t.startIgnore(), !0 }), n.attachEvent(i[s], function () { return t.stopIgnore(), !0 }); for (s = 0; s < r.length; s++)n.attachEvent(r[s], function () { return t.startBatchAction(), !0 }); n.attachEvent("onParse", function () { t._undo.clearUndoStack(), t._undo.clearRedoStack(), a() }), n.attachEvent("onAfterTaskAdd", function (e, n) { t.setInitialTask(e, !0), t.onTaskAdded(n) }), n.attachEvent("onAfterTaskUpdate", function (e, n) { t.onTaskUpdated(n) }), n.attachEvent("onAfterTaskDelete", function (e, n) { t.onTaskDeleted(n) }), n.attachEvent("onAfterLinkAdd", function (e, n) { t.setInitialLink(e, !0), t.onLinkAdded(n) }), n.attachEvent("onAfterLinkUpdate", function (e, n) { t.onLinkUpdated(n) }), n.attachEvent("onAfterLinkDelete", function (e, n) { t.onLinkDeleted(n) }), n.attachEvent("onRowDragEnd", function (e, n) { return t.onTaskMoved(o(e)), t.toggleIgnoreMoveEvents(), !0 }), n.attachEvent("onBeforeTaskDelete", function (e) { t.store(e, n.config.undo_types.task); var i = []; return a(), n.eachTask(function (t) { i.push(t.id) }, e), t.setNestedTasks(e, i), !0 }); var l = n.getDatastore("task"); l.attachEvent("onBeforeItemMove", function (e, n, i) { return t.isMoveEventsIgnored() || a(), !0 }), l.attachEvent("onAfterItemMove", function (e, n, i) { return t.isMoveEventsIgnored() || t.onTaskMoved(o(e)), !0 }), n.attachEvent("onRowDragStart", function (e, n, i) { return t.toggleIgnoreMoveEvents(!0), a(), !0 }), n.attachEvent("onBeforeTaskDrag", function (e) { return t.store(e, n.config.undo_types.task) }), n.attachEvent("onLightbox", function (e) { return t.store(e, n.config.undo_types.task) }), n.attachEvent("onBeforeTaskAutoSchedule", function (e) { return t.store(e.id, n.config.undo_types.task), !0 }), n.ext.inlineEditors && n.ext.inlineEditors.attachEvent("onEditStart", function (e) { t.store(e.id, n.config.undo_types.task) }) }, t.prototype._storeCommand = function (t) { var e = this._undo; if (e.updateConfigs(), e.undoEnabled) if (this._batchMode) this._batchAction.commands.push(t); else { var n = e.action.create([t]); e.logAction(n) } }, t.prototype._storeEntityCommand = function (t, e, n, i) { var r = this._undo.command.create(t, e, n, i); this._storeCommand(r) }, t.prototype._storeTaskCommand = function (t, e) { this._gantt.isTaskExists(t.id) && (t.$local_index = this._gantt.getTaskIndex(t.id)), this._storeEntityCommand(t, this.getInitialTask(t.id), e, this._undo.command.entity.task) }, t.prototype._storeLinkCommand = function (t, e) { this._storeEntityCommand(t, this.getInitialLink(t.id), e, this._undo.command.entity.link) }, t.prototype._getLinks = function (t) { return t.$source.concat(t.$target) }, t.prototype._storeTask = function (t, e) { var n = this; void 0 === e && (e = !1); var i = this._gantt; return this.setInitialTask(t, e), i.eachTask(function (t) { n.setInitialTask(t.id) }, t), !0 }, t.prototype._storeLink = function (t, e) { return void 0 === e && (e = !1), this.setInitialLink(t, e), !0 }, t }(); e.Monitor = a }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.Undo = void 0; var i = 10, r = function () { function t(t) { var e = this; this.maxSteps = i, this.undoEnabled = !0, this.redoEnabled = !0, this.action = { create: function (t) { return { commands: t ? t.slice() : [] } }, invert: function (t) { for (var n, i = e._gantt.copy(t), r = e.command, a = 0; a < t.commands.length; a++) { var o = i.commands[a] = r.invert(i.commands[a]); o.type !== r.type.update && o.type !== r.type.move || (n = [o.oldValue, o.value], o.value = n[0], o.oldValue = n[1]) } return i } }, this.command = { entity: null, type: null, create: function (t, n, i, r) { var a = e._gantt; return { entity: r, type: i, value: a.copy(t), oldValue: a.copy(n || t) } }, invert: function (t) { var n = e._gantt.copy(t); return n.type = e.command.inverseCommands(t.type), n }, inverseCommands: function (t) { var n = e._gantt, i = e.command.type; switch (t) { case i.update: return i.update; case i.remove: return i.add; case i.add: return i.remove; case i.move: return i.move; default: return n.assert(!1, "Invalid command " + t), null } } }, this._undoStack = [], this._redoStack = [], this._gantt = t } return t.prototype.getUndoStack = function () { return this._undoStack }, t.prototype.getRedoStack = function () { return this._redoStack }, t.prototype.clearUndoStack = function () { this._undoStack = [] }, t.prototype.clearRedoStack = function () { this._redoStack = [] }, t.prototype.updateConfigs = function () { var t = this._gantt; this.maxSteps = t.config.undo_steps || i, this.command.entity = t.config.undo_types, this.command.type = t.config.undo_actions, this.undoEnabled = !!t.config.undo, this.redoEnabled = !!t.config.redo }, t.prototype.undo = function () { var t = this._gantt; if (this.updateConfigs(), this.undoEnabled) { var e = this._pop(this._undoStack); if (e && this._reorderCommands(e), !1 !== t.callEvent("onBeforeUndo", [e]) && e) return this._applyAction(this.action.invert(e)), this._push(this._redoStack, t.copy(e)), void t.callEvent("onAfterUndo", [e]); t.callEvent("onAfterUndo", [null]) } }, t.prototype.redo = function () { var t = this._gantt; if (this.updateConfigs(), this.redoEnabled) { var e = this._pop(this._redoStack); if (e && this._reorderCommands(e), !1 !== t.callEvent("onBeforeRedo", [e]) && e) return this._applyAction(e), this._push(this._undoStack, t.copy(e)), void t.callEvent("onAfterRedo", [e]); t.callEvent("onAfterRedo", [null]) } }, t.prototype.logAction = function (t) { this._push(this._undoStack, t), this._redoStack = [] }, t.prototype._push = function (t, e) { var n = this._gantt; if (e.commands.length) { var i = t === this._undoStack ? "onBeforeUndoStack" : "onBeforeRedoStack"; if (!1 !== n.callEvent(i, [e]) && e.commands.length) { for (t.push(e); t.length > this.maxSteps;)t.shift(); return e } } }, t.prototype._pop = function (t) { return t.pop() }, t.prototype._reorderCommands = function (t) { var e = { any: 0, link: 1, task: 2 }, n = { move: 1, any: 0 }; t.commands.sort(function (t, i) { if ("task" === t.entity && "task" === i.entity) return t.type !== i.type ? (n[i.type] || 0) - (n[t.type] || 0) : "move" === t.type && t.oldValue && i.oldValue && i.oldValue.parent === t.oldValue.parent ? t.oldValue.$index - i.oldValue.$index : 0; var r = e[t.entity] || e.any; return (e[i.entity] || e.any) - r }) }, t.prototype._applyAction = function (t) { var e = null, n = this.command.entity, i = this.command.type, r = this._gantt, a = {}; a[n.task] = { add: "addTask", get: "getTask", update: "updateTask", remove: "deleteTask", move: "moveTask", isExists: "isTaskExists" }, a[n.link] = { add: "addLink", get: "getLink", update: "updateLink", remove: "deleteLink", isExists: "isLinkExists" }, r.batchUpdate(function () { for (var n = 0; n < t.commands.length; n++) { e = t.commands[n]; var o = a[e.entity][e.type], s = a[e.entity].get, l = a[e.entity].isExists; if (e.type === i.add) r[o](e.oldValue, e.oldValue.parent, e.oldValue.$local_index); else if (e.type === i.remove) r[l](e.value.id) && r[o](e.value.id); else if (e.type === i.update) { var c = r[s](e.value.id); for (var u in e.value) u.startsWith("$") || u.startsWith("_") || (c[u] = e.value[u]); r[o](e.value.id) } else e.type === i.move && (r[o](e.value.id, e.value.$local_index, e.value.parent), r.callEvent("onRowDragEnd", [e.value.id])) } }) }, t }(); e.Undo = r }, function (t, e, n) { n(16); var i = n(93); t.exports = function (t) { var e = i(t); return e.env.isNode || n(197)(e), e } }, function (t, e, n) { function i(t) { "@babel/helpers - typeof"; return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } t.exports = function (t) { var e = new function () { this.constants = n(94), this.version = "7.1.12", this.license = "gpl", this.templates = {}, this.ext = {}, this.keys = { edit_save: this.constants.KEY_CODES.ENTER, edit_cancel: this.constants.KEY_CODES.ESC } }, r = new (0, n(95).default)(t), a = {}; e.plugins = function (t) { for (var n in t) if (t[n] && !a[n]) { var i = r.getExtension(n); i && (i(e), a[n] = !0) } }, e.$services = n(96)(), e.config = n(97)(), e.ajax = n(98)(e), e.date = n(100)(e); var o = n(103)(e); e.$services.setService("dnd", function () { return o }); var s = n(104)(e); e.$services.setService("templateLoader", function () { return s }), n(4)(e); var l = new (n(105)); l.registerProvider("global", function () { var t = { min_date: e._min_date, max_date: e._max_date, selected_task: null }; return e.$data && e.$data.tasksStore && (t.selected_task = e.$data.tasksStore.getSelectedId()), t }), e.getState = l.getState, e.$services.setService("state", function () { return l }); var c = n(0); c.mixin(e, c), e.Promise = n(106), e.env = n(7), n(110)(e); var u = n(116); e.dataProcessor = u.DEPRECATED_api, e.createDataProcessor = u.createDataProcessor, n(121)(e), n(130)(e), n(131)(e), n(139)(e), n(140)(e), n(141)(e), n(154)(e), n(155).default(e), n(156)(e), n(157)(e), n(158)(e), n(161)(e), n(162).default(e); var d = n(163).default(); return e.i18n = { addLocale: d.addLocale, setLocale: function (t) { if ("string" == typeof t) { var n = d.getLocale(t); n || (n = d.getLocale("en")), e.locale = n } else if (t) if (e.locale) for (var r in t) t[r] && "object" === i(t[r]) ? (e.locale[r] || (e.locale[r] = {}), e.mixin(e.locale[r], t[r], !0)) : e.locale[r] = t[r]; else e.locale = t }, getLocale: d.getLocale }, e.i18n.setLocale("en"), e } }, function (t, e) { t.exports = { KEY_CODES: { UP: 38, DOWN: 40, LEFT: 37, RIGHT: 39, SPACE: 32, ENTER: 13, DELETE: 46, ESC: 27, TAB: 9 } } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }); var i = function () { return function (t) { var e = this; for (var n in this.addExtension = function (t, n) { e._extensions[t] = n }, this.getExtension = function (t) { return e._extensions[t] }, this._extensions = {}, t) this._extensions[n] = t[n] } }(); e.default = i }, function (t, e) { t.exports = function () { var t = {}; return { services: {}, setService: function (e, n) { t[e] = n }, getService: function (e) { return t[e] ? t[e]() : null }, dropService: function (e) { t[e] && delete t[e] }, destructor: function () { for (var e in t) if (t[e]) { var n = t[e]; n && n.destructor && n.destructor() } t = null } } } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), t.exports = function () { return { layout: { css: "gantt_container", rows: [{ cols: [{ view: "grid", scrollX: "scrollHor", scrollY: "scrollVer" }, { resizer: !0, width: 1 }, { view: "timeline", scrollX: "scrollHor", scrollY: "scrollVer" }, { view: "scrollbar", id: "scrollVer" }] }, { view: "scrollbar", id: "scrollHor", height: 20 }] }, links: { finish_to_start: "0", start_to_start: "1", finish_to_finish: "2", start_to_finish: "3" }, types: { task: "task", project: "project", milestone: "milestone" }, auto_types: !1, duration_unit: "day", work_time: !1, correct_work_time: !1, skip_off_time: !1, cascade_delete: !0, autosize: !1, autosize_min_width: 0, autoscroll: !0, autoscroll_speed: 30, deepcopy_on_parse: !1, show_links: !0, show_task_cells: !0, static_background: !1, static_background_cells: !0, branch_loading: !1, branch_loading_property: "$has_child", show_loading: !1, show_chart: !0, show_grid: !0, min_duration: 36e5, date_format: "%d-%m-%Y %H:%i", xml_date: void 0, start_on_monday: !0, server_utc: !1, show_progress: !0, fit_tasks: !1, select_task: !0, scroll_on_click: !0, smart_rendering: !0, preserve_scroll: !0, readonly: !1, container_resize_timeout: 20, date_grid: "%Y-%m-%d", drag_links: !0, drag_progress: !0, drag_resize: !0, drag_project: !1, drag_move: !0, drag_mode: { resize: "resize", progress: "progress", move: "move", ignore: "ignore" }, round_dnd_dates: !0, link_wrapper_width: 20, root_id: 0, autofit: !1, columns: [{ name: "text", tree: !0, width: "*", resize: !0 }, { name: "start_date", align: "center", resize: !0 }, { name: "duration", align: "center" }, { name: "add", width: 44 }], scale_offset_minimal: !0, inherit_scale_class: !1, scales: [{ unit: "day", step: 1, date: "%d %M" }], time_step: 60, duration_step: 1, task_date: "%d %F %Y", time_picker: "%H:%i", task_attribute: "data-task-id", link_attribute: "data-link-id", layer_attribute: "data-layer", buttons_left: ["gantt_save_btn", "gantt_cancel_btn"], _migrate_buttons: { dhx_save_btn: "gantt_save_btn", dhx_cancel_btn: "gantt_cancel_btn", dhx_delete_btn: "gantt_delete_btn" }, buttons_right: ["gantt_delete_btn"], lightbox: { sections: [{ name: "description", height: 70, map_to: "text", type: "textarea", focus: !0 }, { name: "time", type: "duration", map_to: "auto" }], project_sections: [{ name: "description", height: 70, map_to: "text", type: "textarea", focus: !0 }, { name: "type", type: "typeselect", map_to: "type" }, { name: "time", type: "duration", readonly: !0, map_to: "auto" }], milestone_sections: [{ name: "description", height: 70, map_to: "text", type: "textarea", focus: !0 }, { name: "type", type: "typeselect", map_to: "type" }, { name: "time", type: "duration", single_date: !0, map_to: "auto" }] }, drag_lightbox: !0, sort: !1, details_on_create: !0, details_on_dblclick: !0, initial_scroll: !0, task_scroll_offset: 100, order_branch: !1, order_branch_free: !1, task_height: void 0, bar_height: "full", min_column_width: 70, min_grid_column_width: 70, grid_resizer_column_attribute: "data-column-index", keep_grid_width: !1, grid_resize: !1, grid_elastic_columns: !1, show_tasks_outside_timescale: !1, show_unscheduled: !0, resize_rows: !1, task_grid_row_resizer_attribute: "data-row-index", min_task_grid_row_height: 30, readonly_property: "readonly", editable_property: "editable", calendar_property: "calendar_id", resource_calendars: {}, dynamic_resource_calendars: !1, inherit_calendar: !1, type_renderers: {}, open_tree_initially: !1, optimize_render: !0, prevent_default_scroll: !1, show_errors: !0, wai_aria_attributes: !0, smart_scales: !0, rtl: !1, placeholder_task: !1, horizontal_scroll_key: "shiftKey", drag_timeline: { useKey: void 0, ignore: ".gantt_task_line, .gantt_task_link" }, drag_multiple: !0, csp: "auto" } } }, function (t, e, n) { function i(t) { "@babel/helpers - typeof"; return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) } var r = n(7), a = n(12), o = n(99).default; function s(t, e) { var n = { method: t }; if (0 === e.length) throw new Error("Arguments list of query is wrong."); if (1 === e.length) return "string" == typeof e[0] ? (n.url = e[0], n.async = !0) : (n.url = e[0].url, n.async = e[0].async || !0, n.callback = e[0].callback, n.headers = e[0].headers), e[0].data ? "string" != typeof e[0].data ? n.data = o(e[0].data) : n.data = e[0].data : n.data = "", n; switch (n.url = e[0], t) { case "GET": case "DELETE": n.callback = e[1], n.headers = e[2]; break; case "POST": case "PUT": e[1] ? "string" != typeof e[1] ? n.data = o(e[1]) : n.data = e[1] : n.data = "", n.callback = e[2], n.headers = e[3] }return n } t.exports = function (t) { return { cache: !0, method: "get", parse: function (t) { return "string" != typeof t ? t : (t = t.replace(/^[\s]+/, ""), "undefined" == typeof DOMParser || r.isIE ? void 0 !== a.ActiveXObject && ((e = new a.ActiveXObject("Microsoft.XMLDOM")).async = "false", e.loadXML(t)) : e = (new DOMParser).parseFromString(t, "text/xml"), e); var e }, xmltop: function (e, n, i) { if (void 0 === n.status || n.status < 400) { var r = n.responseXML ? n.responseXML || n : this.parse(n.responseText || n); if (r && null !== r.documentElement && !r.getElementsByTagName("parsererror").length) return r.getElementsByTagName(e)[0] } return -1 !== i && t.callEvent("onLoadXMLError", ["Incorrect XML", arguments[1], i]), document.createElement("DIV") }, xpath: function (t, e) { if (e.nodeName || (e = e.responseXML || e), r.isIE) return e.selectNodes(t) || []; for (var n, i = [], a = (e.ownerDocument || e).evaluate(t, e, null, XPathResult.ANY_TYPE, null); n = a.iterateNext();)i.push(n); return i }, query: function (t) { return this._call(t.method || "GET", t.url, t.data || "", t.async || !0, t.callback, t.headers) }, get: function (t, e, n) { var i = s("GET", arguments); return this.query(i) }, getSync: function (t, e) { var n = s("GET", arguments); return n.async = !1, this.query(n) }, put: function (t, e, n, i) { var r = s("PUT", arguments); return this.query(r) }, del: function (t, e, n) { var i = s("DELETE", arguments); return this.query(i) }, post: function (t, e, n, i) { 1 == arguments.length ? e = "" : 2 == arguments.length && "function" == typeof e && (e, e = ""); var r = s("POST", arguments); return this.query(r) }, postSync: function (t, e, n) { e = null === e ? "" : String(e); var i = s("POST", arguments); return i.async = !1, this.query(i) }, _call: function (e, n, o, s, l, c) { return new t.Promise(function (u, d) { var h = void 0 === ("undefined" == typeof XMLHttpRequest ? "undefined" : i(XMLHttpRequest)) || r.isIE ? new a.ActiveXObject("Microsoft.XMLHTTP") : new XMLHttpRequest, f = null !== navigator.userAgent.match(/AppleWebKit/) && null !== navigator.userAgent.match(/Qt/) && null !== navigator.userAgent.match(/Safari/); if (s && (h.onreadystatechange = function () { if (4 == h.readyState || f && 3 == h.readyState) { if ((200 != h.status || "" === h.responseText) && !t.callEvent("onAjaxError", [h])) return; setTimeout(function () { "function" == typeof l && l.apply(a, [{ xmlDoc: h, filePath: n }]), u(h), "function" == typeof l && (l = null, h = null) }, 0) } }), "GET" != e || this.cache || (n += (n.indexOf("?") >= 0 ? "&" : "?") + "dhxr" + (new Date).getTime() + "=1"), h.open(e, n, s), c) for (var _ in c) h.setRequestHeader(_, c[_]); else "POST" == e.toUpperCase() || "PUT" == e || "DELETE" == e ? h.setRequestHeader("Content-Type", "application/x-www-form-urlencoded") : "GET" == e && (o = null); if (h.setRequestHeader("X-Requested-With", "XMLHttpRequest"), h.send(o), !s) return { xmlDoc: h, filePath: n } }) }, urlSeparator: function (t) { return -1 != t.indexOf("?") ? "&" : "?" } } } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }), e.default = function (t) { if ("string" == typeof t || "number" == typeof t) return t; var e = ""; for (var n in t) { var i = ""; t.hasOwnProperty(n) && (i = n + "=" + (i = "string" == typeof t[n] ? encodeURIComponent(t[n]) : "number" == typeof t[n] ? t[n] : encodeURIComponent(JSON.stringify(t[n]))), e.length && (i = "&" + i), e += i) } return e } }, function (t, e, n) { var i = n(101).default, r = n(102).default; t.exports = function (t) { var e = null; function n() { var n = !1; return "auto" === t.config.csp ? (null === e && function () { try { new Function("canUseCsp = false;") } catch (t) { e = !0 } }(), n = e) : n = t.config.csp, n } return { init: function () { for (var e = t.locale, n = e.date.month_short, i = e.date.month_short_hash = {}, r = 0; r < n.length; r++)i[n[r]] = r; for (n = e.date.month_full, i = e.date.month_full_hash = {}, r = 0; r < n.length; r++)i[n[r]] = r }, date_part: function (t) { var e = new Date(t); return t.setHours(0), this.hour_start(t), t.getHours() && (t.getDate() < e.getDate() || t.getMonth() < e.getMonth() || t.getFullYear() < e.getFullYear()) && t.setTime(t.getTime() + 36e5 * (24 - t.getHours())), t }, time_part: function (t) { return (t.valueOf() / 1e3 - 60 * t.getTimezoneOffset()) % 86400 }, week_start: function (e) { var n = e.getDay(); return t.config.start_on_monday && (0 === n ? n = 6 : n--), this.date_part(this.add(e, -1 * n, "day")) }, month_start: function (t) { return t.setDate(1), this.date_part(t) }, quarter_start: function (t) { this.month_start(t); var e, n = t.getMonth(); return e = n >= 9 ? 9 : n >= 6 ? 6 : n >= 3 ? 3 : 0, t.setMonth(e), t }, year_start: function (t) { return t.setMonth(0), this.month_start(t) }, day_start: function (t) { return this.date_part(t) }, hour_start: function (t) { return t.getMinutes() && t.setMinutes(0), this.minute_start(t), t }, minute_start: function (t) { return t.getSeconds() && t.setSeconds(0), t.getMilliseconds() && t.setMilliseconds(0), t }, _add_days: function (t, e, n) { t.setDate(t.getDate() + e); var i = e >= 0, r = !n.getHours() && t.getHours(), a = t.getDate() <= n.getDate() || t.getMonth() < n.getMonth() || t.getFullYear() < n.getFullYear(); return i && r && a && t.setTime(t.getTime() + 36e5 * (24 - t.getHours())), e > 1 && r && t.setHours(0), t }, add: function (t, e, n) { var i = new Date(t.valueOf()); switch (n) { case "day": i = this._add_days(i, e, t); break; case "week": i = this._add_days(i, 7 * e, t); break; case "month": i.setMonth(i.getMonth() + e); break; case "year": i.setYear(i.getFullYear() + e); break; case "hour": i.setTime(i.getTime() + 60 * e * 60 * 1e3); break; case "minute": i.setTime(i.getTime() + 60 * e * 1e3); break; default: return this["add_" + n](t, e, n) }return i }, add_quarter: function (t, e) { return this.add(t, 3 * e, "month") }, to_fixed: function (t) { return t < 10 ? "0" + t : t }, copy: function (t) { return new Date(t.valueOf()) }, date_to_str: function (e, a) { var o = i; return n() && (o = r), o.date_to_str(e, a, t) }, str_to_date: function (e, a) { var o = i; return n() && (o = r), o.str_to_date(e, a, t) }, getISOWeek: function (e) { return t.date._getWeekNumber(e, !0) }, _getWeekNumber: function (t, e) { if (!t) return !1; var n = t.getDay(); e && 0 === n && (n = 7); var i = new Date(t.valueOf()); i.setDate(t.getDate() + (4 - n)); var r = i.getFullYear(), a = Math.round((i.getTime() - new Date(r, 0, 1).getTime()) / 864e5); return 1 + Math.floor(a / 7) }, getWeek: function (e) { return t.date._getWeekNumber(e, t.config.start_on_monday) }, getUTCISOWeek: function (e) { return t.date.getISOWeek(e) }, convert_to_utc: function (t) { return new Date(t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate(), t.getUTCHours(), t.getUTCMinutes(), t.getUTCSeconds()) }, parseDate: function (e, n) { return e && !e.getFullYear && ("function" != typeof n && (n = "string" == typeof n ? "parse_date" === n || "xml_date" === n ? t.defined(t.templates.xml_date) ? t.templates.xml_date : t.templates.parse_date : t.defined(t.templates[n]) ? t.templates[n] : t.date.str_to_date(n) : t.defined(t.templates.xml_date) ? t.templates.xml_date : t.templates.parse_date), e = e ? n(e) : null), e } } } }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }); var i = { date_to_str: function (t, e, n) { t = t.replace(/%[a-zA-Z]/g, function (t) { switch (t) { case "%d": return '"+to_fixed(date.get' + (e ? "UTC" : "") + 'Date())+"'; case "%m": return '"+to_fixed((date.get' + (e ? "UTC" : "") + 'Month()+1))+"'; case "%j": return '"+date.get' + (e ? "UTC" : "") + 'Date()+"'; case "%n": return '"+(date.get' + (e ? "UTC" : "") + 'Month()+1)+"'; case "%y": return '"+to_fixed(date.get' + (e ? "UTC" : "") + 'FullYear()%100)+"'; case "%Y": return '"+date.get' + (e ? "UTC" : "") + 'FullYear()+"'; case "%D": return '"+locale.date.day_short[date.get' + (e ? "UTC" : "") + 'Day()]+"'; case "%l": return '"+locale.date.day_full[date.get' + (e ? "UTC" : "") + 'Day()]+"'; case "%M": return '"+locale.date.month_short[date.get' + (e ? "UTC" : "") + 'Month()]+"'; case "%F": return '"+locale.date.month_full[date.get' + (e ? "UTC" : "") + 'Month()]+"'; case "%h": return '"+to_fixed((date.get' + (e ? "UTC" : "") + 'Hours()+11)%12+1)+"'; case "%g": return '"+((date.get' + (e ? "UTC" : "") + 'Hours()+11)%12+1)+"'; case "%G": return '"+date.get' + (e ? "UTC" : "") + 'Hours()+"'; case "%H": return '"+to_fixed(date.get' + (e ? "UTC" : "") + 'Hours())+"'; case "%i": return '"+to_fixed(date.get' + (e ? "UTC" : "") + 'Minutes())+"'; case "%a": return '"+(date.get' + (e ? "UTC" : "") + 'Hours()>11?"pm":"am")+"'; case "%A": return '"+(date.get' + (e ? "UTC" : "") + 'Hours()>11?"PM":"AM")+"'; case "%s": return '"+to_fixed(date.get' + (e ? "UTC" : "") + 'Seconds())+"'; case "%W": return '"+to_fixed(getISOWeek(date))+"'; case "%w": return '"+to_fixed(getWeek(date))+"'; default: return t } }); var i = new Function("date", "to_fixed", "locale", "getISOWeek", "getWeek", 'return "' + t + '";'); return function (t) { return i(t, n.date.to_fixed, n.locale, n.date.getISOWeek, n.date.getWeek) } }, str_to_date: function (t, e, n) { for (var i = "var temp=date.match(/[a-zA-Z]+|[0-9]+/g);", r = t.match(/%[a-zA-Z]/g), a = 0; a < r.length; a++)switch (r[a]) { case "%j": case "%d": i += "set[2]=temp[" + a + "]||1;"; break; case "%n": case "%m": i += "set[1]=(temp[" + a + "]||1)-1;"; break; case "%y": i += "set[0]=temp[" + a + "]*1+(temp[" + a + "]>50?1900:2000);"; break; case "%g": case "%G": case "%h": case "%H": i += "set[3]=temp[" + a + "]||0;"; break; case "%i": i += "set[4]=temp[" + a + "]||0;"; break; case "%Y": i += "set[0]=temp[" + a + "]||0;"; break; case "%a": case "%A": i += "set[3]=set[3]%12+((temp[" + a + "]||'').toLowerCase()=='am'?0:12);"; break; case "%s": i += "set[5]=temp[" + a + "]||0;"; break; case "%M": i += "set[1]=locale.date.month_short_hash[temp[" + a + "]]||0;"; break; case "%F": i += "set[1]=locale.date.month_full_hash[temp[" + a + "]]||0;" }var o = "set[0],set[1],set[2],set[3],set[4],set[5]"; e && (o = " Date.UTC(" + o + ")"); var s = new Function("date", "locale", "var set=[0,0,1,0,0,0]; " + i + " return new Date(" + o + ");"); return function (t) { return s(t, n.locale) } } }; e.default = i }, function (t, e, n) { "use strict"; Object.defineProperty(e, "__esModule", { value: !0 }); var i = { date_to_str: function (t, e, n) { return function (i) { return t.replace(/%[a-zA-Z]/g, function (t) { switch (t) { case "%d": return e ? n.date.to_fixed(i.getUTCDate()) : n.date.to_fixed(i.getDate()); case "%m": return e ? n.date.to_fixed(i.getUTCMonth() + 1) : n.date.to_fixed(i.getMonth() + 1); case "%j": return e ? i.getUTCDate() : i.getDate(); case "%n": return e ? i.getUTCMonth() + 1 : i.getMonth() + 1; case "%y": return e ? n.date.to_fixed(i.getUTCFullYear() % 100) : n.date.to_fixed(i.getFullYear() % 100); case "%Y": return e ? i.getUTCFullYear() : i.getFullYear(); case "%D": return e ? n.locale.date.day_short[i.getUTCDay()] : n.locale.date.day_short[i.getDay()]; case "%l": return e ? n.locale.date.day_full[i.getUTCDay()] : n.locale.date.day_full[i.getDay()]; case "%M": return e ? n.locale.date.month_short[i.getUTCMonth()] : n.locale.date.month_short[i.getMonth()]; case "%F": return e ? n.locale.date.month_full[i.getUTCMonth()] : n.locale.date.month_full[i.getMonth()]; case "%h": return e ? n.date.to_fixed((i.getUTCHours() + 11) % 12 + 1) : n.date.to_fixed((i.getHours() + 11) % 12 + 1); case "%g": return e ? (i.getUTCHours() + 11) % 12 + 1 : (i.getHours() + 11) % 12 + 1; case "%G": return e ? i.getUTCHours() : i.getHours(); case "%H": return e ? n.date.to_fixed(i.getUTCHours()) : n.date.to_fixed(i.getHours()); case "%i": return e ? n.date.to_fixed(i.getUTCMinutes()) : n.date.to_fixed(i.getMinutes()); case "%a": return e ? i.getUTCHours() > 11 ? "pm" : "am" : i.getHours() > 11 ? "pm" : "am"; case "%A": return e ? i.getUTCHours() > 11 ? "PM" : "AM" : i.getHours() > 11 ? "PM" : "AM"; case "%s": return e ? n.date.to_fixed(i.getUTCSeconds()) : n.date.to_fixed(i.getSeconds()); case "%W": return e ? n.date.to_fixed(n.date.getUTCISOWeek(i)) : n.date.to_fixed(n.date.getISOWeek(i)); default: return t } }) } }, str_to_date: function (t, e, n) { return function (i) { for (var r = [0, 0, 1, 0, 0, 0], a = i.match(/[a-zA-Z]+|[0-9]+/g), o = t.match(/%[a-zA-Z]/g), s = 0; s < o.length; s++)switch (o[s]) { case "%j": case "%d": r[2] = a[s] || 1; break; case "%n": case "%m": r[1] = (a[s] || 1) - 1; break; case "%y": r[0] = 1 * a[s] + (a[s] > 50 ? 1900 : 2e3); break; case "%g": case "%G": case "%h": case "%H": r[3] = a[s] || 0; break; case "%i": r[4] = a[s] || 0; break; case "%Y": r[0] = a[s] || 0; break; case "%a": case "%A": r[3] = r[3] % 12 + ("am" === (a[s] || "").toLowerCase() ? 0 : 12); break; case "%s": r[5] = a[s] || 0; break; case "%M": r[1] = n.locale.date.month_short_hash[a[s]] || 0; break; case "%F": r[1] = n.locale.date.month_full_hash[a[s]] || 0 }return e ? new Date(Date.UTC(r[0], r[1], r[2], r[3], r[4], r[5])) : new Date(r[0], r[1], r[2], r[3], r[4], r[5]) } } }; e.default = i }, function (t, e, n) { var i = n(4), r = n(0), a = n(30), o = n(12), s = n(1); t.exports = function (t) { function e(t) { return { target: t.target || t.srcElement, pageX: t.pageX, pageY: t.pageY, clientX: t.clientX, clientY: t.clientY, metaKey: t.metaKey, shiftKey: t.shiftKey, ctrlKey: t.ctrlKey, altKey: t.altKey } } function n(n, a) { this._obj = n, this._settings = a || {}, i(this); var o = this.getInputMethods(); this._drag_start_timer = null, t.attachEvent("onGanttScroll", r.bind(function (t, e) { this.clearDragTimer() }, this)); for (var l = { passive: !1 }, c = 0; c < o.length; c++)r.bind(function (i) { t.event(n, i.down, r.bind(function (o) { i.accessor(o) && (a.preventDefault && a.selector && s.closest(o.target, a.selector) && o.preventDefault(), t.config.touch && o.timeStamp && o.timeStamp - 0 < 300 || (this._settings.original_target = e(o), t.config.touch ? (this.clearDragTimer(), this._drag_start_timer = setTimeout(r.bind(function () { t.getState().lightbox || this.dragStart(n, o, i) }, this), t.config.touch_drag)) : this.dragStart(n, o, i))) }, this), l); var o = document.body; t.event(o, i.up, r.bind(function (t) { i.accessor(t) && this.clearDragTimer() }, this), l) }, this)(o[c]) } return n.prototype = { traceDragEvents: function (e, n) { var i = r.bind(function (t) { return this.dragMove(e, t, n.accessor) }, this); r.bind(function (t) { return this.dragScroll(e, t) }, this); var o = r.bind(function (t) { if (!this.config.started || !r.defined(this.config.updates_per_second) || a(this, this.config.updates_per_second)) { var e = i(t); if (e) try { t && t.preventDefault && t.cancelable && t.preventDefault() } catch (t) { } return e } }, this), l = s.getRootNode(t.$root), c = this.config.mousemoveContainer || s.getRootNode(t.$root), u = { passive: !1 }, d = r.bind(function (i) { return t.eventRemove(c, n.move, o), t.eventRemove(l, n.up, d, u), this.dragEnd(e) }, this); t.event(c, n.move, o, u), t.event(l, n.up, d, u) }, checkPositionChange: function (t) { var e = t.x - this.config.pos.x, n = t.y - this.config.pos.y; return Math.sqrt(Math.pow(Math.abs(e), 2) + Math.pow(Math.abs(n), 2)) > this.config.sensitivity }, initDnDMarker: function () { var t = this.config.marker = document.createElement("div"); t.className = "gantt_drag_marker", t.innerHTML = "", document.body.appendChild(t) }, backupEventTarget: function (n, i) { if (t.config.touch) { var r = i(n), a = r.target || r.srcElement, o = a.cloneNode(!0); this.config.original_target = e(r), this.config.original_target.target = o, this.config.backup_element = a, a.parentNode.appendChild(o), a.style.display = "none", (this.config.mousemoveContainer || document.body).appendChild(a) } }, getInputMethods: function () { var e = []; if (e.push({ move: "mousemove", down: "mousedown", up: "mouseup", accessor: function (t) { return t } }), t.config.touch) { var n = !0; try { document.createEvent("TouchEvent") } catch (t) { n = !1 } n ? e.push({ move: "touchmove", down: "touchstart", up: "touchend", accessor: function (t) { return t.touches && t.touches.length > 1 ? null : t.touches[0] ? { target: document.elementFromPoint(t.touches[0].clientX, t.touches[0].clientY), pageX: t.touches[0].pageX, pageY: t.touches[0].pageY, clientX: t.touches[0].clientX, clientY: t.touches[0].clientY } : t } }) : o.navigator.pointerEnabled ? e.push({ move: "pointermove", down: "pointerdown", up: "pointerup", accessor: function (t) { return "mouse" == t.pointerType ? null : t } }) : o.navigator.msPointerEnabled && e.push({ move: "MSPointerMove", down: "MSPointerDown", up: "MSPointerUp", accessor: function (t) { return t.pointerType == t.MSPOINTER_TYPE_MOUSE ? null : t } }) } return e }, clearDragTimer: function () { this._drag_start_timer && (clearTimeout(this._drag_start_timer), this._drag_start_timer = null) }, dragStart: function (e, n, i) { this.config && this.config.started || (this.config = { obj: e, marker: null, started: !1, pos: this.getPosition(n), sensitivity: 4 }, this._settings && r.mixin(this.config, this._settings, !0), this.traceDragEvents(e, i), t._prevent_touch_scroll = !0, document.body.className += " gantt_noselect", t.config.touch && this.dragMove(e, n, i.accessor)) }, dragMove: function (e, n, i) { var r = i(n); if (!r) return !1; if (!this.config.marker && !this.config.started) { var a = this.getPosition(r); if (t.config.touch || this.checkPositionChange(a)) { if (this.config.started = !0, this.config.ignore = !1, !1 === this.callEvent("onBeforeDragStart", [e, this.config.original_target])) return this.config.ignore = !0, !1; this.backupEventTarget(n, i), this.initDnDMarker(), t._touch_feedback(), this.callEvent("onAfterDragStart", [e, this.config.original_target]) } else this.config.ignore = !0 } if (!this.config.ignore) { if (n.targetTouches && !r.target) return; return r.pos = this.getPosition(r), this.config.marker.style.left = r.pos.x + "px", this.config.marker.style.top = r.pos.y + "px", this.callEvent("onDragMove", [e, r]), !0 } return !1 }, dragEnd: function (e) { var n = this.config.backup_element; n && n.parentNode && n.parentNode.removeChild(n), t._prevent_touch_scroll = !1, this.config.marker && (this.config.marker.parentNode.removeChild(this.config.marker), this.config.marker = null, this.callEvent("onDragEnd", [])), this.config.started = !1, document.body.className = document.body.className.replace(" gantt_noselect", "") }, getPosition: function (t) { var e = 0, n = 0; return t.pageX || t.pageY ? (e = t.pageX, n = t.pageY) : (t.clientX || t.clientY) && (e = t.clientX + document.body.scrollLeft + document.documentElement.scrollLeft, n = t.clientY + document.body.scrollTop + document.documentElement.scrollTop), { x: e, y: n } } }, n } }, function (t, e) { t.exports = function (t) { var e = {}; function n(n, i, r) { r = r || n; var a = t.config, o = t.templates; t.config[n] && e[r] != a[n] && (i && o[r] || (o[r] = t.date.date_to_str(a[n]), e[r] = a[n])) } return { initTemplates: function () { var e = t.locale.labels; e.gantt_save_btn = e.icon_save, e.gantt_cancel_btn = e.icon_cancel, e.gantt_delete_btn = e.icon_delete; var i = t.date, r = i.date_to_str, a = t.config, o = r(a.xml_date || a.date_format, a.server_utc), s = i.str_to_date(a.xml_date || a.date_format, a.server_utc); n("date_scale", !0, void 0, t.config, t.templates), n("date_grid", !0, "grid_date_format", t.config, t.templates), n("task_date", !0, void 0, t.config, t.templates), t.mixin(t.templates, { xml_format: void 0, format_date: o, xml_date: void 0, parse_date: s, progress_text: function (t, e, n) { return "" }, grid_header_class: function (t, e) { return "" }, task_text: function (t, e, n) { return n.text }, task_class: function (t, e, n) { return "" }, task_end_date: function (e) { return t.templates.task_date(e) }, grid_row_class: function (t, e, n) { return "" }, task_row_class: function (t, e, n) { return "" }, timeline_cell_class: function (t, e) { return "" }, scale_cell_class: function (t) { return "" }, scale_row_class: function (t) { return "" }, grid_indent: function (t) { return "<div class='gantt_tree_indent'></div>" }, grid_folder: function (t) { return "<div class='gantt_tree_icon gantt_folder_" + (t.$open ? "open" : "closed") + "'></div>" }, grid_file: function (t) { return "<div class='gantt_tree_icon gantt_file'></div>" }, grid_open: function (t) { return "<div class='gantt_tree_icon gantt_" + (t.$open ? "close" : "open") + "'></div>" }, grid_blank: function (t) { return "<div class='gantt_tree_icon gantt_blank'></div>" }, date_grid: function (e, n, i) { return n && t.isUnscheduledTask(n) && t.config.show_unscheduled ? t.templates.task_unscheduled_time(n) : t.templates.grid_date_format(e, i) }, task_time: function (e, n, i) { return t.isUnscheduledTask(i) && t.config.show_unscheduled ? t.templates.task_unscheduled_time(i) : t.templates.task_date(e) + " - " + t.templates.task_end_date(n) }, task_unscheduled_time: function (t) { return "" }, time_picker: r(a.time_picker), link_class: function (t) { return "" }, link_description: function (e) { var n = t.getTask(e.source), i = t.getTask(e.target); return "<b>" + n.text + "</b> &ndash;  <b>" + i.text + "</b>" }, drag_link: function (e, n, i, r) { e = t.getTask(e); var a = t.locale.labels, o = "<b>" + e.text + "</b> " + (n ? a.link_start : a.link_end) + "<br/>"; return i && (o += "<b> " + (i = t.getTask(i)).text + "</b> " + (r ? a.link_start : a.link_end) + "<br/>"), o }, drag_link_class: function (e, n, i, r) { var a = ""; return e && i && (a = " " + (t.isLinkAllowed(e, i, n, r) ? "gantt_link_allow" : "gantt_link_deny")), "gantt_link_tooltip" + a }, tooltip_date_format: i.date_to_str("%Y-%m-%d"), tooltip_text: function (e, n, i) { return "<b>Task:</b> " + i.text + "<br/><b>Start date:</b> " + t.templates.tooltip_date_format(e) + "<br/><b>End date:</b> " + t.templates.tooltip_date_format(n) } }) }, initTemplate: n } } }, function (t, e, n) { var i = n(0); t.exports = function () { var t = {}; return { getState: function (e) { if (t[e]) return t[e].method(); var n = {}; for (var r in t) t[r].internal || i.mixin(n, t[r].method(), !0); return n }, registerProvider: function (e, n, i) { t[e] = { method: n, internal: i } }, unregisterProvider: function (e) { delete t[e] } } } }, function (t, e, n) { t.exports = n(107) }, function (t, e, n) {
        (function (n, i, r) {
            var a, o, s; function l(t) { "@babel/helpers - typeof"; return (l = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t })(t) }
            /* @preserve
             * The MIT License (MIT)
             * 
             * Copyright (c) 2013-2018 Petka Antonov
             * 
             * Permission is hereby granted, free of charge, to any person obtaining a copy
             * of this software and associated documentation files (the "Software"), to deal
             * in the Software without restriction, including without limitation the rights
             * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
             * copies of the Software, and to permit persons to whom the Software is
             * furnished to do so, subject to the following conditions:
             * 
             * The above copyright notice and this permission notice shall be included in
             * all copies or substantial portions of the Software.
             * 
             * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
             * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
             * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
             * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
             * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
             * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
             * THE SOFTWARE.
             */
        })
    }])
})